openapi: 3.0.0
info:
  contact:
    name: PeerTube Community
    url: https://joinpeertube.org
  description: |
    The PeerTube API is built on HTTP(S) and is RESTful. You can use your favorite
    HTTP/REST library for your programming language to use PeerTube. The spec API is fully compatible with
    [openapi-generator](https://github.com/OpenAPITools/openapi-generator/wiki/API-client-generator-HOWTO)
    which generates a client SDK in the language of your choice - we generate some client SDKs automatically:

    - [Python](https://framagit.org/framasoft/peertube/clients/python)
    - [Go](https://framagit.org/framasoft/peertube/clients/go)
    - [Kotlin](https://framagit.org/framasoft/peertube/clients/kotlin)

    See the [REST API quick start](https://docs.joinpeertube.org/api/rest-getting-started) for a few
    examples of using the PeerTube API.

    # Authentication

    When you sign up for an account on a PeerTube instance, you are given the possibility
    to generate sessions on it, and authenticate there using an access token. Only __one
    access token can currently be used at a time__.

    ## Roles

    Accounts are given permissions based on their role. There are three roles on
    PeerTube: Administrator, Moderator, and User. See the [roles guide](https://docs.joinpeertube.org/admin/managing-users#roles) for a detail of their permissions.

    # Errors

    The API uses standard HTTP status codes to indicate the success or failure
    of the API call, completed by a [RFC7807-compliant](https://tools.ietf.org/html/rfc7807) response body.

    ```
    HTTP 1.1 404 Not Found
    Content-Type: application/problem+json; charset=utf-8

    {
      "detail": "Video not found",
      "docs": "https://docs.joinpeertube.org/api-rest-reference.html#operation/getVideo",
      "status": 404,
      "title": "Not Found",
      "type": "about:blank"
    }
    ```

    We provide error `type` (following RFC7807) and `code` (internal PeerTube code) values for [a growing number of cases](https://github.com/Chocobozzz/PeerTube/blob/develop/packages/models/src/server/server-error-code.enum.ts),
    but it is still optional. Types are used to disambiguate errors that bear the same status code
    and are non-obvious:

    ```
    HTTP 1.1 403 Forbidden
    Content-Type: application/problem+json; charset=utf-8

    {
      "detail": "Cannot get this video regarding follow constraints",
      "docs": "https://docs.joinpeertube.org/api-rest-reference.html#operation/getVideo",
      "status": 403,
      "title": "Forbidden",
      "type": "https://docs.joinpeertube.org/api-rest-reference.html#section/Errors/does_not_respect_follow_constraints"
    }
    ```

    Here a 403 error could otherwise mean that the video is private or blocklisted.

    ### Validation errors

    Each parameter is evaluated on its own against a set of rules before the route validator
    proceeds with potential testing involving parameter combinations. Errors coming from validation
    errors appear earlier and benefit from a more detailed error description:

    ```
    HTTP 1.1 400 Bad Request
    Content-Type: application/problem+json; charset=utf-8

    {
      "detail": "Incorrect request parameters: id",
      "docs": "https://docs.joinpeertube.org/api-rest-reference.html#operation/getVideo",
      "instance": "/api/v1/videos/9c9de5e8-0a1e-484a-b099-e80766180",
      "invalid-params": {
        "id": {
          "location": "params",
          "msg": "Invalid value",
          "param": "id",
          "value": "9c9de5e8-0a1e-484a-b099-e80766180"
        }
      },
      "status": 400,
      "title": "Bad Request",
      "type": "about:blank"
    }
    ```

    Where `id` is the name of the field concerned by the error, within the route definition.
    `invalid-params.<field>.location` can be either 'params', 'body', 'header', 'query' or 'cookies', and
    `invalid-params.<field>.value` reports the value that didn't pass validation whose `invalid-params.<field>.msg`
    is about.

    ### Deprecated error fields

    Some fields could be included with previous versions. They are still included but their use is deprecated:
    - `error`: superseded by `detail`

    # Rate limits

    We are rate-limiting all endpoints of PeerTube's API. Custom values can be set by administrators:

    | Endpoint (prefix: `/api/v1`) | Calls         | Time frame   |
    |------------------------------|---------------|--------------|
    | `/*`                         | 50            | 10 seconds   |
    | `POST /users/token`          | 15            | 5 minutes    |
    | `POST /users/register`       | 2<sup>*</sup> | 5 minutes    |
    | `POST /users/ask-send-verify-email` | 3      | 5 minutes    |

    Depending on the endpoint, <sup>*</sup>failed requests are not taken into account. A service
    limit is announced by a `429 Too Many Requests` status code.

    You can get details about the current state of your rate limit by reading the
    following headers:

    | Header                  | Description                                                |
    |-------------------------|------------------------------------------------------------|
    | `X-RateLimit-Limit`     | Number of max requests allowed in the current time period  |
    | `X-RateLimit-Remaining` | Number of remaining requests in the current time period    |
    | `X-RateLimit-Reset`     | Timestamp of end of current time period as UNIX timestamp  |
    | `Retry-After`           | Seconds to delay after the first `429` is received         |

    # CORS

    This API features [Cross-Origin Resource Sharing (CORS)](https://fetch.spec.whatwg.org/),
    allowing cross-domain communication from the browser for some routes:

    | Endpoint                    |
    |------------------------- ---|
    | `/api/*`                    |
    | `/download/*`               |
    | `/lazy-static/*`            |
    | `/.well-known/webfinger`    |

    In addition, all routes serving ActivityPub are CORS-enabled for all origins.
  license:
    name: AGPLv3.0
    url: https://github.com/Chocobozzz/PeerTube/blob/master/LICENSE
  title: PeerTube
  version: 6.2.0
  x-logo:
    url: https://joinpeertube.org/img/brand.png
    altText: PeerTube Project Homepage
externalDocs:
  url: https://docs.joinpeertube.org/api-rest-reference.html
servers:
- description: Live Test Server (live data - latest nightly version)
  url: https://peertube2.cpy.re
- description: Live Test Server (live data - latest RC version)
  url: https://peertube3.cpy.re
- description: Live Test Server (live data - stable version)
  url: https://peertube.cpy.re
tags:
- description: |
    As a visitor, you can use this API to open an account (if registrations are open on
    that PeerTube instance). As an admin, you should use the dedicated [User creation
    API](#operation/addUser) instead.
  name: Register
- description: |
    Sessions deal with access tokens over time. Only __one session token can currently be used at a time__.
  name: Session
  x-displayName: Login/Logout
- description: |
    Accounts encompass remote accounts discovered across the federation, and correspond to the main Actor, along with video channels a user can create, which are also Actors.
    When a comment is posted, it is done with your Account's Actor.
  name: Accounts
- description: |
    Using some features of PeerTube require authentication, for which User provide different levels of permission as well as associated user information. Each user has a corresponding local Account for federation.
  name: Users
- description: |
    To create an archive of user data.
  name: User Exports
- description: |
    To import an archive of user data.
  name: User Imports
- description: |
    Operations related to your own User, when logged-in.
  name: My User
- description: |
    Operations related to your subscriptions to video channels, their new videos, and how to keep up to date with their latest publications!
  name: My Subscriptions
- description: |
    Operations related to your watch history.
  name: My History
- description: |
    Notifications following new videos, follows or reports. They allow you to keep track of the interactions and overall important information that concerns you. You MAY set per-notification type delivery preference, to receive the info either by mail, by in-browser notification or both.
  name: My Notifications
- description: |
    Each server exposes public information regarding supported videos and options.
  name: Config
- description: |
    Jobs are long-running tasks enqueued and processed by the instance itself. No additional worker registration is currently available.
  name: Job
- description: |
    Managing servers which the instance interacts with is crucial to the concept of federation in PeerTube and external video indexation. The PeerTube server then deals with inter-server ActivityPub operations and propagates information across its social graph by posting activities to actors' inbox endpoints.
  externalDocs:
    url: https://docs.joinpeertube.org/admin/following-instances#instances-follows
  name: Instance Follows
- description: |
    Redundancy is part of the inter-server solidarity that PeerTube fosters. Manage the list of instances you wish to help by seeding their videos according to the policy of video selection of your choice. Note that you have a similar functionality to mirror individual videos, see [video mirroring](#tag/Video-Mirroring).
  externalDocs:
    url: https://docs.joinpeertube.org/admin/following-instances#instances-redundancy
  name: Instance Redundancy
- description: |
    Managing plugins installed from a local path or from NPM, or search for new ones.
  externalDocs:
    url: https://docs.joinpeertube.org/api/plugins
  name: Plugins
- description: |
    Abuses deal with reports of local or remote videos/comments/accounts alike.
  name: Abuses
- description: |
    Operations dealing with listing, uploading, fetching or modifying videos.
  name: Video
- description: |
    Operations dealing with adding video or audio. PeerTube supports two upload modes, and three import modes.

    ### Upload

    - [_legacy_](#operation/uploadLegacy), where the video file is sent in a single request
    - [_resumable_](#operation/uploadResumableInit), where the video file is sent in chunks

    You can upload videos more reliably by using the resumable variant. Its protocol lets
    you resume an upload operation after a network interruption or other transmission failure,
    saving time and bandwidth in the event of network failures.

    Favor using resumable uploads in any of the following cases:
    - You are transferring large files
    - The likelihood of a network interruption is high
    - Uploads are originating from a device with a low-bandwidth or unstable Internet connection,
      such as a mobile device

    ### Import

    - _URL_-based: where the URL points to any service supported by [youtube-dl](https://ytdl-org.github.io/youtube-dl/)
    - _magnet_-based: where the URI resolves to a BitTorrent resource containing a single supported video file
    - _torrent_-based: where the metainfo file resolves to a BitTorrent resource containing a single supported video file

    The import function is practical when the desired video/audio is available online. It makes PeerTube
    download it for you, saving you as much bandwidth and avoiding any instability or limitation your network might have.
  name: Video Upload
- description: "Operations dealing with listing, adding and removing video imports."
  name: Video Imports
- description: Operations dealing with synchronizing PeerTube user's channel with
    channels of other platforms
  name: Channels Sync
- description: "Operations dealing with listing, adding and removing closed captions\
    \ of a video."
  name: Video Captions
- description: Operations dealing with managing chapters of a video.
  name: Video Chapters
- description: "Operations dealing with the creation, modification and listing of\
    \ videos within a channel."
  name: Video Channels
- description: |
    Operations dealing with comments to a video. Comments are organized in threads: adding a comment in response to the video starts a thread, adding a reply to a comment adds it to its root comment thread.
  name: Video Comments
- description: Operations dealing with blocking videos (removing them from view and
    preventing interactions).
  name: Video Blocks
- description: "Automatic tags set on objects (like comments or videos) by specific\
    \ rules (external link, watched words, etc.)"
  name: Automatic Tags
- description: Manage list of watched words to detect patterns on objects (like comments
    of videos)
  name: Watched Words
- description: Like/dislike a video.
  name: Video Rates
- description: Operations dealing with playlists of videos. Playlists are bound to
    users and/or channels.
  name: Video Playlists
- description: Operations on video files
  name: Video Files
- description: Video transcoding related operations
  name: Video Transcoding
- description: Video statistics
  name: Video Stats
- description: Server syndication feeds of videos
  name: Video Feeds
- description: |
    The search helps to find _videos_ or _channels_ from within the instance and beyond.
    Videos from other instances federated by the instance (that is, instances
    followed by the instance) can be found via keywords and other criteria of
    the advanced search.

    Administrators can also enable the use of a remote search system, indexing
    videos and channels not could be not federated by the instance.
  name: Search
- description: Get and update the custom homepage
  name: Homepage
- description: |
    PeerTube instances can mirror videos from one another, and help distribute some videos.

    For importing videos as your own, refer to [video imports](#operation/importVideo).
  name: Video Mirroring
- description: |
    Statistics
  name: Stats
- description: |
    Manage runner registration token
  name: Runner Registration Token
- description: Operation on video passwords
  name: Video Passwords
paths:
  /static/web-videos/{filename}:
    get:
      description: '**PeerTube >= 6.0**'
      parameters:
      - description: Filename
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
        "404":
          description: not found
      summary: Get public Web Video file
      tags:
      - Static Video Files
  /static/web-videos/private/{filename}:
    get:
      description: '**PeerTube >= 6.0**'
      parameters:
      - description: Filename
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      - description: "Video file token [generated](#operation/requestVideoToken) by\
          \ PeerTube so you don't need to provide an OAuth token in the request header."
        explode: true
        in: query
        name: videoFileToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: successful operation
        "403":
          description: invalid auth
        "404":
          description: not found
      security:
      - OAuth2: []
      summary: Get private Web Video file
      tags:
      - Static Video Files
  /static/streaming-playlists/hls/{filename}:
    get:
      parameters:
      - description: Filename
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
        "403":
          description: invalid auth
        "404":
          description: not found
      security:
      - OAuth2: []
      summary: Get public HLS video file
      tags:
      - Static Video Files
  /static/streaming-playlists/hls/private/{filename}:
    get:
      parameters:
      - description: Filename
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      - description: "Video file token [generated](#operation/requestVideoToken) by\
          \ PeerTube so you don't need to provide an OAuth token in the request header."
        explode: true
        in: query
        name: videoFileToken
        required: false
        schema:
          type: string
        style: form
      - description: Ask the server to reinject videoFileToken in URLs in m3u8 playlist
        explode: true
        in: query
        name: reinjectVideoFileToken
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: successful operation
        "403":
          description: invalid auth
        "404":
          description: not found
      security:
      - OAuth2: []
      summary: Get private HLS video file
      tags:
      - Static Video Files
  /feeds/video-comments.{format}:
    get:
      operationId: getSyndicatedComments
      parameters:
      - description: "format expected (we focus on making `rss` the most featureful\
          \ ; it serves [Media RSS](https://www.rssboard.org/media-rss))"
        explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - xml
          - rss
          - rss2
          - atom
          - atom1
          - json
          - json1
          type: string
        style: simple
      - description: limit listing comments to a specific video
        explode: true
        in: query
        name: videoId
        required: false
        schema:
          type: string
        style: form
      - description: limit listing comments to videos of a specific account
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: limit listing comments to videos of a specific account
        explode: true
        in: query
        name: accountName
        required: false
        schema:
          type: string
        style: form
      - description: limit listing comments to videos of a specific video channel
        explode: true
        in: query
        name: videoChannelId
        required: false
        schema:
          type: string
        style: form
      - description: limit listing comments to videos of a specific video channel
        explode: true
        in: query
        name: videoChannelName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/video-comments.xml?filter=local
              schema:
                $ref: '#/components/schemas/VideoCommentsForXML'
            application/rss+xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/video-comments.rss?filter=local
              schema:
                $ref: '#/components/schemas/VideoCommentsForXML'
            text/xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/video-comments.xml?filter=local
              schema:
                $ref: '#/components/schemas/VideoCommentsForXML'
            application/atom+xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/video-comments.atom?filter=local
              schema:
                $ref: '#/components/schemas/VideoCommentsForXML'
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/video-comments.json?filter=local
              schema:
                type: object
          description: successful operation
          headers:
            Cache-Control:
              explode: false
              schema:
                default: max-age=900
                type: string
              style: simple
        "400":
          description: |
            Arises when:
              - videoId filter is mixed with a channel filter
          x-summary: field inconsistencies
        "404":
          description: "video, video channel or account not found"
        "406":
          description: accept header unsupported
      summary: Comments on videos feeds
      tags:
      - Video Feeds
  /feeds/videos.{format}:
    get:
      operationId: getSyndicatedVideos
      parameters:
      - description: "format expected (we focus on making `rss` the most featureful\
          \ ; it serves [Media RSS](https://www.rssboard.org/media-rss))"
        explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - xml
          - rss
          - rss2
          - atom
          - atom1
          - json
          - json1
          type: string
        style: simple
      - description: limit listing to a specific account
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - description: limit listing to a specific account
        explode: true
        in: query
        name: accountName
        required: false
        schema:
          type: string
        style: form
      - description: limit listing to a specific video channel
        explode: true
        in: query
        name: videoChannelId
        required: false
        schema:
          type: string
        style: form
      - description: limit listing to a specific video channel
        explode: true
        in: query
        name: videoChannelName
        required: false
        schema:
          type: string
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/videos.xml?filter=local
              schema:
                $ref: '#/components/schemas/VideosForXML'
            application/rss+xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/videos.rss?filter=local
              schema:
                $ref: '#/components/schemas/VideosForXML'
            text/xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/videos.xml?filter=local
              schema:
                $ref: '#/components/schemas/VideosForXML'
            application/atom+xml:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/videos.atom?filter=local
              schema:
                $ref: '#/components/schemas/VideosForXML'
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/feeds/videos.json?filter=local
              schema:
                type: object
          description: successful operation
          headers:
            Cache-Control:
              explode: false
              schema:
                default: max-age=900
                type: string
              style: simple
        "404":
          description: video channel or account not found
        "406":
          description: accept header unsupported
      summary: Common videos feeds
      tags:
      - Video Feeds
  /feeds/subscriptions.{format}:
    get:
      operationId: getSyndicatedSubscriptionVideos
      parameters:
      - description: "format expected (we focus on making `rss` the most featureful\
          \ ; it serves [Media RSS](https://www.rssboard.org/media-rss))"
        explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - xml
          - rss
          - rss2
          - atom
          - atom1
          - json
          - json1
          type: string
        style: simple
      - description: limit listing to a specific account
        explode: true
        in: query
        name: accountId
        required: true
        schema:
          type: string
        style: form
      - description: private token allowing access
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/VideosForXML'
            application/rss+xml:
              schema:
                $ref: '#/components/schemas/VideosForXML'
            text/xml:
              schema:
                $ref: '#/components/schemas/VideosForXML'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/VideosForXML'
            application/json:
              schema:
                type: object
          description: successful operation
          headers:
            Cache-Control:
              explode: false
              schema:
                default: max-age=900
                type: string
              style: simple
        "406":
          description: accept header unsupported
      summary: Videos of subscriptions feeds
      tags:
      - Video Feeds
  /feeds/podcast/videos.xml:
    get:
      operationId: getVideosPodcastFeed
      parameters:
      - description: Limit listing to a specific video channel
        explode: true
        in: query
        name: videoChannelId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: successful operation
          headers:
            Cache-Control:
              explode: false
              schema:
                default: max-age=900
                type: string
              style: simple
        "404":
          description: video channel not found
      summary: Videos podcast feed
      tags:
      - Video Feeds
  /api/v1/accounts/{name}:
    get:
      operationId: getAccount
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: successful operation
        "404":
          description: account not found
      summary: Get an account
      tags:
      - Accounts
  /api/v1/accounts/{name}/videos:
    get:
      operationId: getAccountVideos
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      - description: "category id of the video (see [/videos/categories](#operation/getCategories))"
        explode: true
        in: query
        name: categoryOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_categoryOneOf_parameter'
        style: form
      - description: whether or not the video is a live
        explode: true
        in: query
        name: isLive
        required: false
        schema:
          type: boolean
        style: form
      - description: tag(s) of the video
        explode: true
        in: query
        name: tagsOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsOneOf_parameter'
        style: form
      - description: "tag(s) of the video, where all should be present in the video"
        explode: true
        in: query
        name: tagsAllOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
        explode: true
        in: query
        name: licenceOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_licenceOneOf_parameter'
        style: form
      - description: "language id of the video (see [/videos/languages](#operation/getLanguages)).\
          \ Use `_unknown` to filter on videos that don't have a video language"
        explode: true
        in: query
        name: languageOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_languageOneOf_parameter'
        style: form
      - description: '**PeerTube >= 6.2** **Admins and moderators only** filter on
          videos that contain one of these automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: if you don't need the `total` in the response
        explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          description: |
            Sort videos by criteria (prefixing with `-` means `DESC` order):
              * `hot` - Adaptation of Reddit "hot" algorithm taking into account video views, likes, dislikes and comments and publication date
              * `best` - Same than `hot`, but also takes into account user video history
              * `trending` - Sort videos by recent views ("recent" is defined by the admin)
              * `views` - Sort videos using their `views` counter
              * `publishedAt` - Sort by video publication date (when it became publicly available)
          enum:
          - name
          - -duration
          - -createdAt
          - -publishedAt
          - -views
          - -likes
          - -trending
          - -hot
          - -best
          type: string
        style: form
      - description: Whether or not to exclude videos that are in the user's video
          history
        explode: true
        in: query
        name: excludeAlreadyWatched
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      summary: List videos of an account
      tags:
      - Accounts
      - Video
      x-codeSamples:
      - lang: JavaScript
        source: |
          fetch('https://peertube2.cpy.re/api/v1/accounts/{name}/videos')
          .then(function(response) {
            return response.json()
          }).then(function(data) {
            console.log(data)
          })
      - lang: Shell
        source: |
          ## DEPENDENCIES: jq
          curl -s https://peertube2.cpy.re/api/v1/accounts/{name}/videos | jq
      - lang: Ruby
        source: |
          require 'net/http'
          require 'json'

          uri = URI.parse("https://peertube2.cpy.re/api/v1/accounts/{name}/videos")

          http = Net::HTTP.new(uri.host, uri.port)
          http.use_ssl = true

          response = http.get(uri.request_uri)

          puts JSON.parse(response.read_body)
      - lang: Python
        source: |
          import requests

          r = requests.get("https://peertube2.cpy.re/api/v1//accounts/{name}/videos")
          json = r.json()

          print(json)
  /api/v1/accounts/{name}/followers:
    get:
      operationId: getAccountFollowers
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort followers by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdAt
          type: string
        style: form
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountFollowers_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List followers of an account
      tags:
      - Accounts
  /api/v1/accounts:
    get:
      operationId: getAccounts
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccounts_200_response'
          description: successful operation
      summary: List accounts
      tags:
      - Accounts
  /api/v1/config:
    get:
      operationId: getConfig
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/config
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: successful operation
      summary: Get instance public configuration
      tags:
      - Config
  /api/v1/config/about:
    get:
      operationId: getAbout
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/config/about
              schema:
                $ref: '#/components/schemas/ServerConfigAbout'
          description: successful operation
      summary: Get instance "About" information
      tags:
      - Config
  /api/v1/config/custom:
    delete:
      operationId: delCustomConfig
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Delete instance runtime configuration
      tags:
      - Config
    get:
      operationId: getCustomConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfigCustom'
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Get instance runtime configuration
      tags:
      - Config
    put:
      operationId: putCustomConfig
      responses:
        "200":
          description: successful operation
        "400":
          description: |
            Arises when:
              - the emailer is disabled and the instance is open to registrations
              - web videos and hls are disabled with transcoding enabled - you need at least one enabled
          x-summary: field inconsistencies
      security:
      - OAuth2:
        - admin
      summary: Set instance runtime configuration
      tags:
      - Config
  /api/v1/config/instance-banner/pick:
    post:
      requestBody:
        content:
          multipart/form-data:
            encoding:
              bannerfile:
                contentType: "image/png, image/jpeg"
                style: form
            schema:
              $ref: '#/components/schemas/_api_v1_config_instance_banner_pick_post_request'
      responses:
        "204":
          description: successful operation
        "413":
          description: image file too large
          headers:
            X-File-Maximum-Size:
              description: Maximum file size for the banner
              explode: false
              schema:
                format: Nginx size
                type: string
              style: simple
      security:
      - OAuth2:
        - admin
      summary: Update instance banner
      tags:
      - Config
  /api/v1/config/instance-banner:
    delete:
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Delete instance banner
      tags:
      - Config
  /api/v1/config/instance-avatar/pick:
    post:
      requestBody:
        content:
          multipart/form-data:
            encoding:
              avatarfile:
                contentType: "image/png, image/jpeg"
                style: form
            schema:
              $ref: '#/components/schemas/_api_v1_config_instance_avatar_pick_post_request'
      responses:
        "204":
          description: successful operation
        "413":
          description: image file too large
          headers:
            X-File-Maximum-Size:
              description: Maximum file size for the avatar
              explode: false
              schema:
                format: Nginx size
                type: string
              style: simple
      security:
      - OAuth2:
        - admin
      summary: Update instance avatar
      tags:
      - Config
  /api/v1/config/instance-avatar:
    delete:
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Delete instance avatar
      tags:
      - Config
  /api/v1/custom-pages/homepage/instance:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHomepage'
          description: successful operation
        "404":
          description: No homepage set
      summary: Get instance custom homepage
      tags:
      - Homepage
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_custom_pages_homepage_instance_put_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Set instance custom homepage
      tags:
      - Homepage
  /api/v1/jobs/pause:
    post:
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Pause job queue
      tags:
      - Job
  /api/v1/jobs/resume:
    post:
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Resume job queue
      tags:
      - Job
  /api/v1/jobs/{state}:
    get:
      operationId: getJobs
      parameters:
      - description: The state of the job ('' for for no filter)
        explode: false
        in: path
        name: state
        required: true
        schema:
          enum:
          - ""
          - active
          - completed
          - failed
          - waiting
          - delayed
          type: string
        style: simple
      - description: job type
        explode: true
        in: query
        name: jobType
        required: false
        schema:
          enum:
          - activitypub-follow
          - activitypub-http-broadcast
          - activitypub-http-fetcher
          - activitypub-http-unicast
          - email
          - video-transcoding
          - video-file-import
          - video-import
          - videos-views-stats
          - activitypub-refresher
          - video-redundancy
          - video-live-ending
          - video-channel-import
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJobs_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List instance jobs
      tags:
      - Job
  /api/v1/server/followers:
    get:
      parameters:
      - explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - pending
          - accepted
          type: string
        style: form
      - explode: true
        in: query
        name: actorType
        required: false
        schema:
          enum:
          - Person
          - Application
          - Group
          - Service
          - Organization
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountFollowers_200_response'
          description: successful operation
      summary: List instances following the server
      tags:
      - Instance Follows
  /api/v1/server/followers/{nameWithHost}:
    delete:
      parameters:
      - description: The remote actor handle to remove from your followers
        explode: false
        in: path
        name: nameWithHost
        required: true
        schema:
          format: email
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: follower not found
      security:
      - OAuth2:
        - admin
      summary: Remove or reject a follower to your server
      tags:
      - Instance Follows
  /api/v1/server/followers/{nameWithHost}/reject:
    post:
      parameters:
      - description: The remote actor handle to remove from your followers
        explode: false
        in: path
        name: nameWithHost
        required: true
        schema:
          format: email
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: follower not found
      security:
      - OAuth2:
        - admin
      summary: Reject a pending follower to your server
      tags:
      - Instance Follows
  /api/v1/server/followers/{nameWithHost}/accept:
    post:
      parameters:
      - description: The remote actor handle to remove from your followers
        explode: false
        in: path
        name: nameWithHost
        required: true
        schema:
          format: email
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: follower not found
      security:
      - OAuth2:
        - admin
      summary: Accept a pending follower to your server
      tags:
      - Instance Follows
  /api/v1/server/following:
    get:
      parameters:
      - explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - pending
          - accepted
          type: string
        style: form
      - explode: true
        in: query
        name: actorType
        required: false
        schema:
          enum:
          - Person
          - Application
          - Group
          - Service
          - Organization
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountFollowers_200_response'
          description: successful operation
      summary: List instances followed by the server
      tags:
      - Instance Follows
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_server_following_post_request'
      responses:
        "204":
          description: successful operation
        "500":
          description: cannot follow a non-HTTPS server
      security:
      - OAuth2:
        - admin
      summary: "Follow a list of actors (PeerTube instance, channel or account)"
      tags:
      - Instance Follows
  /api/v1/server/following/{hostOrHandle}:
    delete:
      parameters:
      - description: The hostOrHandle to unfollow
        explode: false
        in: path
        name: hostOrHandle
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: host or handle not found
      security:
      - OAuth2:
        - admin
      summary: "Unfollow an actor (PeerTube instance, channel or account)"
      tags:
      - Instance Follows
  /api/v1/users:
    get:
      operationId: getUsers
      parameters:
      - description: Plain text search that will match with user usernames or emails
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Filter results down to (un)banned users
        explode: true
        in: query
        name: blocked
        required: false
        schema:
          type: boolean
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort users by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - -id
          - -username
          - -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List users
      tags:
      - Users
    post:
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUser'
        description: |
          If the smtp server is configured, you can leave the password empty and an email will be sent
          asking the user to set it first.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
          description: user created
          links:
            GetUser:
              operationId: getUser
              parameters:
                id: $response.body#/user/id
            PutUser:
              operationId: putUser
              parameters:
                id: $response.body#/user/id
            DelUser:
              operationId: delUser
              parameters:
                id: $response.body#/user/id
        "403":
          description: insufficient authority to create an admin or moderator
      security:
      - OAuth2:
        - admin
      summary: Create a user
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      operationId: delUser
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Delete a user
      tags:
      - Users
    get:
      operationId: getUser
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      - description: include statistics about the user (only available as a moderator/admin)
        explode: true
        in: query
        name: withStats
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: |
            As an admin/moderator, you can request a response augmented with statistics about the user's
            moderation relations and videos usage, by using the `withStats` parameter.
          x-summary: successful operation
      security:
      - OAuth2: []
      summary: Get a user
      tags:
      - Users
    put:
      operationId: putUser
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update a user
      tags:
      - Users
  /api/v1/oauth-clients/local:
    get:
      description: "You need to retrieve a client id and secret before [logging in](#operation/getOAuthToken)."
      operationId: getOAuthClient
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
          description: successful operation
          links:
            UseOAuthClientToLogin:
              operationId: getOAuthToken
              parameters:
                client_id: $response.body#/client_id
                client_secret: $response.body#/client_secret
      summary: Login prerequisite
      tags:
      - Session
      x-codeSamples:
      - lang: Shell
        source: |
          API="https://peertube2.cpy.re/api/v1"

          ## AUTH
          curl -s "$API/oauth-clients/local"
  /api/v1/users/token:
    post:
      description: "With your [client id and secret](#operation/getOAuthClient), you\
        \ can retrieve an access and refresh tokens."
      operationId: getOAuthToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/getOAuthToken_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOAuthToken_200_response'
          description: successful operation
        "400":
          description: |
            Disambiguate via `code`:
            - `invalid_client` for an unmatched `client_id`
            - `invalid_grant` for unmatched credentials
          x-summary: client or credentials are invalid
        "401":
          description: |
            Disambiguate via `code`:
            - default value for a regular authentication failure
            - `invalid_token` for an expired token
            - `missing_two_factor` if two factor header is missing
          x-summary: token expired or two factor header is missing
      summary: Login
      tags:
      - Session
      x-codeSamples:
      - lang: Shell
        source: |
          ## DEPENDENCIES: jq
          API="https://peertube2.cpy.re/api/v1"
          USERNAME="<your_username>"
          PASSWORD="<your_password>"

          ## AUTH
          client_id=$(curl -s "$API/oauth-clients/local" | jq -r ".client_id")
          client_secret=$(curl -s "$API/oauth-clients/local" | jq -r ".client_secret")
          curl -s "$API/users/token" \
            --data client_id="$client_id" \
            --data client_secret="$client_secret" \
            --data grant_type=password \
            --data username="$USERNAME" \
            --data-urlencode password="$PASSWORD" \
            | jq -r ".access_token"
  /api/v1/users/revoke-token:
    post:
      description: "Revokes your access token and its associated refresh token, destroying\
        \ your current session."
      operationId: revokeOAuthToken
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2: []
      summary: Logout
      tags:
      - Session
  /api/v1/users/ask-send-verify-email:
    post:
      operationId: resendEmailToVerifyUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resendEmailToVerifyUser_request'
      responses:
        "204":
          description: successful operation
      summary: Resend user verification link
      tags:
      - Users
      - Register
  /api/v1/users/registrations/ask-send-verify-email:
    post:
      operationId: resendEmailToVerifyRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resendEmailToVerifyRegistration_request'
      responses:
        "204":
          description: successful operation
      summary: Resend verification link to registration email
      tags:
      - Register
  /api/v1/users/{id}/verify-email:
    post:
      description: |
        Following a user registration, the new user will receive an email asking to click a link
        containing a secret.
        This endpoint can also be used to verify a new email set in the user account.
      operationId: verifyUser
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyUser_request'
      responses:
        "204":
          description: successful operation
        "403":
          description: invalid verification string
        "404":
          description: user not found
      summary: Verify a user
      tags:
      - Users
      - Register
  /api/v1/users/registrations/{registrationId}/verify-email:
    post:
      description: |
        Following a user registration request, the user will receive an email asking to click a link
        containing a secret.
      operationId: verifyRegistrationEmail
      parameters:
      - description: Registration ID
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyRegistrationEmail_request'
      responses:
        "204":
          description: successful operation
        "403":
          description: invalid verification string
        "404":
          description: registration not found
      summary: Verify a registration email
      tags:
      - Register
  /api/v1/users/{id}/two-factor/request:
    post:
      description: Request two factor authentication for a user
      operationId: requestTwoFactor
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestTwoFactor_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestTwoFactorResponse'
                type: array
          description: successful operation
        "403":
          description: invalid password
        "404":
          description: user not found
      security:
      - OAuth2: []
      summary: Request two factor auth
      tags:
      - Users
  /api/v1/users/{id}/two-factor/confirm-request:
    post:
      description: Confirm a two factor authentication request
      operationId: confirmTwoFactorRequest
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/confirmTwoFactorRequest_request'
      responses:
        "204":
          description: successful operation
        "403":
          description: invalid request token or OTP token
        "404":
          description: user not found
      security:
      - OAuth2: []
      summary: Confirm two factor auth
      tags:
      - Users
  /api/v1/users/{id}/two-factor/disable:
    post:
      description: Disable two factor authentication of a user
      operationId: disableTwoFactor
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestTwoFactor_request'
      responses:
        "204":
          description: successful operation
        "403":
          description: invalid password
        "404":
          description: user not found
      security:
      - OAuth2: []
      summary: Disable two factor auth
      tags:
      - Users
  /api/v1/users/{userId}/imports/import-resumable:
    delete:
      description: "**PeerTube >= 6.1** Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to cancel the resumable user import"
      operationId: userImportResumableCancel
      parameters:
      - description: |
          Created session id to proceed with. If you didn't send chunks in the last hour, it is
          not valid anymore and you need to initialize a new upload.
        explode: true
        in: query
        name: upload_id
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          example: 0
          type: number
        style: simple
      responses:
        "204":
          description: import cancelled
          headers:
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
      security:
      - OAuth2: []
      summary: Cancel the resumable user import
      tags:
      - User Imports
    post:
      description: "**PeerTube >= 6.1** Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to initialize the import of the archive"
      operationId: userImportResumableInit
      parameters:
      - description: Number of bytes that will be uploaded in subsequent requests.
          Set this value to the size of the file you are uploading.
        explode: false
        in: header
        name: X-Upload-Content-Length
        required: true
        schema:
          example: 2469036
          type: number
        style: simple
      - description: "MIME type of the file that you are uploading. Depending on your\
          \ instance settings, acceptable values might vary."
        explode: false
        in: header
        name: X-Upload-Content-Type
        required: true
        schema:
          example: video/mp4
          format: mimetype
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserImportResumable'
      responses:
        "201":
          description: created
          headers:
            Location:
              explode: false
              schema:
                format: url
                type: string
              style: simple
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
      security:
      - OAuth2: []
      summary: Initialize the resumable user import
      tags:
      - User Imports
    put:
      description: "**PeerTube >= 6.1** Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to continue, pause or resume the import of the archive"
      operationId: userImportResumable
      parameters:
      - description: |
          Created session id to proceed with. If you didn't send chunks in the last hour, it is
          not valid anymore and you need to initialize a new upload.
        explode: true
        in: query
        name: upload_id
        required: true
        schema:
          type: string
        style: form
      - description: |
          Specifies the bytes in the file that the request is uploading.

          For example, a value of `bytes 0-262143/1000000` shows that the request is sending the first
          262144 bytes (256 x 1024) in a 2,469,036 byte file.
        explode: false
        in: header
        name: Content-Range
        required: true
        schema:
          example: bytes 0-262143/2469036
          type: string
        style: simple
      - description: |
          Size of the chunk that the request is sending.

          Remember that larger chunks are more efficient. PeerTube's web client uses chunks varying from
          1048576 bytes (~1MB) and increases or reduces size depending on connection health.
        explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          example: 262144
          type: number
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "204":
          description: "last chunk received: successful operation"
        "308":
          description: resume incomplete
          headers:
            Range:
              explode: false
              schema:
                example: bytes=0-262143
                type: string
              style: simple
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
      security:
      - OAuth2: []
      summary: Send chunk for the resumable user import
      tags:
      - User Imports
  /api/v1/users/{userId}/imports/latest:
    get:
      description: '**PeerTube >= 6.1**'
      operationId: getLatestUserImport
      parameters:
      - description: User id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLatestUserImport_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get latest user import
      tags:
      - User Imports
  /api/v1/users/{userId}/exports/request:
    post:
      description: Request an archive of user data. An email is sent when the archive
        is ready.
      operationId: requestUserExport
      parameters:
      - description: User id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserExport_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestUserExport_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Request user export
      tags:
      - User Exports
  /api/v1/users/{userId}/exports:
    get:
      description: '**PeerTube >= 6.1**'
      operationId: listUserExports
      parameters:
      - description: User id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserExports_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List user exports
      tags:
      - User Exports
  /api/v1/users/{userId}/exports/{id}:
    delete:
      description: '**PeerTube >= 6.1**'
      operationId: deleteUserExport
      parameters:
      - description: User id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete a user export
      tags:
      - User Exports
  /api/v1/users/me:
    get:
      operationId: getUserInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Get my user information
      tags:
      - My User
    put:
      operationId: putUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMe'
        required: true
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Update my user information
      tags:
      - My User
  /api/v1/users/me/videos/comments:
    get:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Filter comments by searching on the account
        explode: true
        in: query
        name: searchAccount
        required: false
        schema:
          type: string
        style: form
      - description: Filter comments by searching on the video
        explode: true
        in: query
        name: searchVideo
        required: false
        schema:
          type: string
        style: form
      - description: Limit results on this specific video
        explode: true
        in: query
        name: videoId
        required: false
        schema:
          type: integer
        style: form
      - description: Limit results on this specific video channel
        explode: true
        in: query
        name: videoChannelId
        required: false
        schema:
          type: integer
        style: form
      - description: '**PeerTube >= 6.2** filter on comments that contain one of these
          automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: only display comments that are held for review
        explode: true
        in: query
        name: isHeldForReview
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_users_me_videos_comments_get_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List comments on user's videos
      tags:
      - Video Comments
  /api/v1/users/me/videos/imports:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: Filter on import target URL
        explode: true
        in: query
        name: targetUrl
        required: false
        schema:
          type: string
        style: form
      - description: Filter on imports created by a specific channel synchronization
        explode: true
        in: query
        name: videoChannelSyncId
        required: false
        schema:
          type: number
        style: form
      - description: Search in video names
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoImportsList'
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Get video imports of my user
      tags:
      - Videos
      - My User
  /api/v1/users/me/video-quota-used:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_users_me_video_quota_used_get_200_response'
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Get my user used quota
      tags:
      - My User
  /api/v1/users/me/videos/{videoId}/rating:
    get:
      parameters:
      - description: The video id
        explode: false
        in: path
        name: videoId
        required: true
        schema:
          $ref: '#/components/schemas/Video/properties/id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeVideoRating'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get rate of my user for a video
      tags:
      - My User
      - Video Rates
  /api/v1/users/me/videos:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: List videos of my user
      tags:
      - My User
      - Videos
  /api/v1/users/me/subscriptions:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannelList'
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Get my user subscriptions
      tags:
      - My Subscriptions
    post:
      requestBody:
        content:
          application/json:
            examples:
              default:
                value:
                  uri: 008a0e54-375d-49d0-8379-143202e24152@video.lqdn.fr
            schema:
              $ref: '#/components/schemas/_api_v1_users_me_subscriptions_post_request'
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Add subscription to my user
      tags:
      - My Subscriptions
  /api/v1/users/me/subscriptions/exist:
    get:
      parameters:
      - description: list of uris to check if each is part of the user subscriptions
        explode: true
        in: query
        name: uris
        required: true
        schema:
          items:
            format: uri
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Get if subscriptions exist for my user
      tags:
      - My Subscriptions
  /api/v1/users/me/subscriptions/videos:
    get:
      parameters:
      - description: "category id of the video (see [/videos/categories](#operation/getCategories))"
        explode: true
        in: query
        name: categoryOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_categoryOneOf_parameter'
        style: form
      - description: whether or not the video is a live
        explode: true
        in: query
        name: isLive
        required: false
        schema:
          type: boolean
        style: form
      - description: tag(s) of the video
        explode: true
        in: query
        name: tagsOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsOneOf_parameter'
        style: form
      - description: "tag(s) of the video, where all should be present in the video"
        explode: true
        in: query
        name: tagsAllOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
        explode: true
        in: query
        name: licenceOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_licenceOneOf_parameter'
        style: form
      - description: "language id of the video (see [/videos/languages](#operation/getLanguages)).\
          \ Use `_unknown` to filter on videos that don't have a video language"
        explode: true
        in: query
        name: languageOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_languageOneOf_parameter'
        style: form
      - description: '**PeerTube >= 6.2** **Admins and moderators only** filter on
          videos that contain one of these automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: if you don't need the `total` in the response
        explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          description: |
            Sort videos by criteria (prefixing with `-` means `DESC` order):
              * `hot` - Adaptation of Reddit "hot" algorithm taking into account video views, likes, dislikes and comments and publication date
              * `best` - Same than `hot`, but also takes into account user video history
              * `trending` - Sort videos by recent views ("recent" is defined by the admin)
              * `views` - Sort videos using their `views` counter
              * `publishedAt` - Sort by video publication date (when it became publicly available)
          enum:
          - name
          - -duration
          - -createdAt
          - -publishedAt
          - -views
          - -likes
          - -trending
          - -hot
          - -best
          type: string
        style: form
      - description: Whether or not to exclude videos that are in the user's video
          history
        explode: true
        in: query
        name: excludeAlreadyWatched
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: List videos of subscriptions of my user
      tags:
      - My Subscriptions
      - Videos
  /api/v1/users/me/subscriptions/{subscriptionHandle}:
    delete:
      parameters:
      - description: The subscription handle
        explode: false
        in: path
        name: subscriptionHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Delete subscription of my user
      tags:
      - My Subscriptions
    get:
      parameters:
      - description: The subscription handle
        explode: false
        in: path
        name: subscriptionHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannel'
          description: successful operation
      security:
      - OAuth2:
        - user
      summary: Get subscription of my user
      tags:
      - My Subscriptions
  /api/v1/users/me/notifications:
    get:
      parameters:
      - description: only list unread notifications
        explode: true
        in: query
        name: unread
        required: false
        schema:
          type: boolean
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
          description: successful operation
      security:
      - OAuth2: []
      summary: List my notifications
      tags:
      - My Notifications
  /api/v1/users/me/notifications/read:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_users_me_notifications_read_post_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Mark notifications as read by their id
      tags:
      - My Notifications
  /api/v1/users/me/notifications/read-all:
    post:
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Mark all my notification as read
      tags:
      - My Notifications
  /api/v1/users/me/notification-settings:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_users_me_notification_settings_put_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update my notification settings
      tags:
      - My Notifications
  /api/v1/users/me/history/videos:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      security:
      - OAuth2: []
      summary: List watched videos history
      tags:
      - My History
  /api/v1/users/me/history/videos/{videoId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: videoId
        required: true
        schema:
          $ref: '#/components/schemas/Video/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete history element
      tags:
      - My History
  /api/v1/users/me/history/videos/remove:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_api_v1_users_me_history_videos_remove_post_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Clear video history
      tags:
      - My History
  /api/v1/users/me/avatar/pick:
    post:
      requestBody:
        content:
          multipart/form-data:
            encoding:
              avatarfile:
                contentType: "image/png, image/jpeg"
                style: form
            schema:
              $ref: '#/components/schemas/_api_v1_users_me_avatar_pick_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_users_me_avatar_pick_post_200_response'
          description: successful operation
        "413":
          description: image file too large
          headers:
            X-File-Maximum-Size:
              description: Maximum file size for the avatar
              explode: false
              schema:
                format: Nginx size
                type: string
              style: simple
      security:
      - OAuth2: []
      summary: Update my user avatar
      tags:
      - My User
  /api/v1/users/me/avatar:
    delete:
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete my avatar
      tags:
      - My User
  /api/v1/users/register:
    post:
      description: Signup has to be enabled and signup approval is not required
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
        required: true
      responses:
        "204":
          description: successful operation
        "400":
          description: request error
        "403":
          description: "user registration is not enabled, user limit is reached, registration\
            \ is not allowed for the ip, requires approval or blocked by a plugin"
        "409":
          description: "a user with this username, channel name or email already exists"
      summary: Register a user
      tags:
      - Register
  /api/v1/users/registrations/request:
    post:
      description: Signup has to be enabled and require approval on the instance
      operationId: requestRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: successful operation
        "400":
          description: request error or signup approval is not enabled on the instance
        "403":
          description: "user registration is not enabled, user limit is reached, registration\
            \ is not allowed for the ip or blocked by a plugin"
        "409":
          description: "a user or registration with this username, channel name or\
            \ email already exists"
      summary: Request registration
      tags:
      - Register
  /api/v1/users/registrations/{registrationId}/accept:
    post:
      operationId: acceptRegistration
      parameters:
      - description: Registration ID
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationAcceptOrReject'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Accept registration
      tags:
      - Register
  /api/v1/users/registrations/{registrationId}/reject:
    post:
      operationId: rejectRegistration
      parameters:
      - description: Registration ID
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationAcceptOrReject'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Reject registration
      tags:
      - Register
  /api/v1/users/registrations/{registrationId}:
    delete:
      description: Delete the registration entry. It will not remove the user associated
        with this registration (if any)
      operationId: deleteRegistration
      parameters:
      - description: Registration ID
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Delete registration
      tags:
      - Register
  /api/v1/users/registrations:
    get:
      operationId: listRegistrations
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - -createdAt
          - createdAt
          - state
          - -state
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRegistrations_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: List registrations
      tags:
      - Register
  /api/v1/videos/ownership:
    get:
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2: []
      summary: List video ownership changes
      tags:
      - Video Ownership Change
  /api/v1/videos/ownership/{id}/accept:
    post:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
        "403":
          description: cannot terminate an ownership change of another user
        "404":
          description: video ownership change not found
      security:
      - OAuth2: []
      summary: Accept ownership change request
      tags:
      - Video Ownership Change
  /api/v1/videos/ownership/{id}/refuse:
    post:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
        "403":
          description: cannot terminate an ownership change of another user
        "404":
          description: video ownership change not found
      security:
      - OAuth2: []
      summary: Refuse ownership change request
      tags:
      - Video Ownership Change
  /api/v1/videos/{id}/give-ownership:
    post:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/_api_v1_videos__id__give_ownership_post_request'
        required: true
      responses:
        "204":
          description: successful operation
        "400":
          description: changing video ownership to a remote account is not supported
            yet
        "404":
          description: video not found
      security:
      - OAuth2: []
      summary: Request ownership change
      tags:
      - Video Ownership Change
  /api/v1/videos/{id}/token:
    post:
      description: Request special tokens that expire quickly to use them in some
        context (like accessing private static files)
      operationId: requestVideoToken
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoTokenResponse'
          description: successful operation
        "400":
          description: incorrect parameters
        "404":
          description: video not found
      security:
      - OAuth2: []
      summary: Request video token
      tags:
      - Video
  /api/v1/videos/{id}/studio/edit:
    post:
      description: "Create a task to edit a video  (cut, add intro/outro etc)"
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoStudioCreateTask'
        required: true
      responses:
        "204":
          description: successful operation
        "400":
          description: incorrect parameters
        "404":
          description: video not found
      security:
      - OAuth2: []
      summary: Create a studio task
      tags:
      - Video Transcoding
      - Video
  /api/v1/videos:
    get:
      operationId: getVideos
      parameters:
      - description: "category id of the video (see [/videos/categories](#operation/getCategories))"
        explode: true
        in: query
        name: categoryOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_categoryOneOf_parameter'
        style: form
      - description: whether or not the video is a live
        explode: true
        in: query
        name: isLive
        required: false
        schema:
          type: boolean
        style: form
      - description: tag(s) of the video
        explode: true
        in: query
        name: tagsOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsOneOf_parameter'
        style: form
      - description: "tag(s) of the video, where all should be present in the video"
        explode: true
        in: query
        name: tagsAllOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
        explode: true
        in: query
        name: licenceOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_licenceOneOf_parameter'
        style: form
      - description: "language id of the video (see [/videos/languages](#operation/getLanguages)).\
          \ Use `_unknown` to filter on videos that don't have a video language"
        explode: true
        in: query
        name: languageOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_languageOneOf_parameter'
        style: form
      - description: '**PeerTube >= 6.2** **Admins and moderators only** filter on
          videos that contain one of these automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: if you don't need the `total` in the response
        explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          description: |
            Sort videos by criteria (prefixing with `-` means `DESC` order):
              * `hot` - Adaptation of Reddit "hot" algorithm taking into account video views, likes, dislikes and comments and publication date
              * `best` - Same than `hot`, but also takes into account user video history
              * `trending` - Sort videos by recent views ("recent" is defined by the admin)
              * `views` - Sort videos using their `views` counter
              * `publishedAt` - Sort by video publication date (when it became publicly available)
          enum:
          - name
          - -duration
          - -createdAt
          - -publishedAt
          - -views
          - -likes
          - -trending
          - -hot
          - -best
          type: string
        style: form
      - description: Whether or not to exclude videos that are in the user's video
          history
        explode: true
        in: query
        name: excludeAlreadyWatched
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      summary: List videos
      tags:
      - Video
  /api/v1/videos/categories:
    get:
      operationId: getCategories
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/videos/categories
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: List available video categories
      tags:
      - Video
  /api/v1/videos/licences:
    get:
      operationId: getLicences
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/videos/licences
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: List available video licences
      tags:
      - Video
  /api/v1/videos/languages:
    get:
      operationId: getLanguages
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/videos/languages
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: List available video languages
      tags:
      - Video
  /api/v1/videos/privacies:
    get:
      operationId: getVideoPrivacyPolicies
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/videos/privacies
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: List available video privacy policies
      tags:
      - Video
  /api/v1/videos/{id}:
    delete:
      operationId: delVideo
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete a video
      tags:
      - Video
    get:
      operationId: getVideo
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoDetails'
          description: successful operation
        "403":
          description: provide a correct password to access this password protected
            video
      summary: Get a video
      tags:
      - Video
    put:
      operationId: putVideo
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              thumbnailfile:
                contentType: image/jpeg
                style: form
              previewfile:
                contentType: image/jpeg
                style: form
            schema:
              $ref: '#/components/schemas/putVideo_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update a video
      tags:
      - Video
  /api/v1/videos/{id}/description:
    get:
      operationId: getVideoDesc
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                example: |
                  **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n**Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**
                maxLength: 10000
                minLength: 3
                nullable: true
                type: string
          description: successful operation
      summary: Get complete video description
      tags:
      - Video
  /api/v1/videos/{id}/views:
    post:
      description: "Call this endpoint regularly (every 5-10 seconds for example)\
        \ to notify the server the user is watching the video. After a while, PeerTube\
        \ will increase video's viewers counter. If the user is authenticated, PeerTube\
        \ will also store the current player time."
      operationId: addView
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserViewingVideo'
        required: true
      responses:
        "204":
          description: successful operation
      summary: Notify user is watching a video
      tags:
      - Video
  /api/v1/videos/{id}/watching:
    put:
      deprecated: true
      description: "This endpoint has been deprecated. Use `/videos/{id}/views` instead"
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserViewingVideo'
        required: true
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Set watching progress of a video
      tags:
      - Video
  /api/v1/videos/{id}/stats/overall:
    get:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Filter stats by start date
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter stats by end date
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoStatsOverall'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get overall stats of a video
      tags:
      - Video Stats
  /api/v1/videos/{id}/stats/retention:
    get:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoStatsRetention'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get retention stats of a video
      tags:
      - Video Stats
  /api/v1/videos/{id}/stats/timeseries/{metric}:
    get:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The metric to get
        explode: false
        in: path
        name: metric
        required: true
        schema:
          enum:
          - viewers
          - aggregateWatchTime
          type: string
        style: simple
      - description: Filter stats by start date
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter stats by end date
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoStatsTimeserie'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get timeserie stats of a video
      tags:
      - Video Stats
  /api/v1/videos/upload:
    post:
      description: Uses a single request to upload a video.
      operationId: uploadLegacy
      requestBody:
        content:
          multipart/form-data:
            encoding:
              videofile:
                contentType: "video/mp4, video/webm, video/ogg, video/avi, video/quicktime,\
                  \ video/x-msvideo, video/x-flv, video/x-matroska, application/octet-stream"
                style: form
              thumbnailfile:
                contentType: image/jpeg
                style: form
              previewfile:
                contentType: image/jpeg
                style: form
            schema:
              $ref: '#/components/schemas/VideoUploadRequestLegacy'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUploadResponse'
          description: successful operation
        "403":
          description: video didn't pass upload filter
        "408":
          description: upload has timed out
        "413":
          description: |
            If the response has no body, it means the reverse-proxy didn't let it through. Otherwise disambiguate via `code`:
            - `quota_reached` for quota limits whether daily or global
          headers:
            X-File-Maximum-Size:
              description: Maximum file size for the video
              explode: false
              schema:
                format: Nginx size
                type: string
              style: simple
          x-summary: "video file too large, due to quota or max body size limit set\
            \ by the reverse-proxy"
        "415":
          description: video type unsupported
        "422":
          description: video unreadable
      security:
      - OAuth2: []
      summary: Upload a video
      tags:
      - Video
      - Video Upload
      x-codeSamples:
      - lang: Shell
        source: |
          ## DEPENDENCIES: jq
          USERNAME="<your_username>"
          PASSWORD="<your_password>"
          FILE_PATH="<your_file_path>"
          CHANNEL_ID="<your_channel_id>"
          NAME="<video_name>"
          API="https://peertube2.cpy.re/api/v1"

          ## AUTH
          client_id=$(curl -s "$API/oauth-clients/local" | jq -r ".client_id")
          client_secret=$(curl -s "$API/oauth-clients/local" | jq -r ".client_secret")
          token=$(curl -s "$API/users/token" \
            --data client_id="$client_id" \
            --data client_secret="$client_secret" \
            --data grant_type=password \
            --data username="$USERNAME" \
            --data password="$PASSWORD" \
            | jq -r ".access_token")

          ## VIDEO UPLOAD
          curl -s "$API/videos/upload" \
            -H "Authorization: Bearer $token" \
            --max-time 600 \
            --form videofile=@"$FILE_PATH" \
            --form channelId=$CHANNEL_ID \
            --form name="$NAME"
  /api/v1/videos/upload-resumable:
    delete:
      description: "Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to cancel the upload of a video"
      operationId: uploadResumableCancel
      parameters:
      - description: |
          Created session id to proceed with. If you didn't send chunks in the last hour, it is
          not valid anymore and you need to initialize a new upload.
        explode: true
        in: query
        name: upload_id
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          example: 0
          type: number
        style: simple
      responses:
        "204":
          description: upload cancelled
          headers:
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
        "404":
          description: upload not found
      security:
      - OAuth2: []
      summary: "Cancel the resumable upload of a video, deleting any data uploaded\
        \ so far"
      tags:
      - Video
      - Video Upload
    post:
      description: "Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to initialize the upload of a video"
      operationId: uploadResumableInit
      parameters:
      - description: Number of bytes that will be uploaded in subsequent requests.
          Set this value to the size of the file you are uploading.
        explode: false
        in: header
        name: X-Upload-Content-Length
        required: true
        schema:
          example: 2469036
          type: number
        style: simple
      - description: "MIME type of the file that you are uploading. Depending on your\
          \ instance settings, acceptable values might vary."
        explode: false
        in: header
        name: X-Upload-Content-Type
        required: true
        schema:
          example: video/mp4
          format: mimetype
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoUploadRequestResumable'
      responses:
        "200":
          description: "file already exists, send a [`resume`](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
            \ request instead"
        "201":
          description: created
          headers:
            Location:
              explode: false
              schema:
                example: /api/v1/videos/upload-resumable?upload_id=471e97554f21dec3b8bb5d4602939c51
                format: url
                type: string
              style: simple
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
        "413":
          description: |
            Disambiguate via `code`:
            - `max_file_size_reached` for the absolute file size limit
            - `quota_reached` for quota limits whether daily or global
          x-summary: "video file too large, due to quota, absolute max file size or\
            \ concurrent partial upload limit"
        "415":
          description: video type unsupported
      security:
      - OAuth2: []
      summary: Initialize the resumable upload of a video
      tags:
      - Video
      - Video Upload
    put:
      description: "Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to continue, pause or resume the upload of a video"
      operationId: uploadResumable
      parameters:
      - description: |
          Created session id to proceed with. If you didn't send chunks in the last hour, it is
          not valid anymore and you need to initialize a new upload.
        explode: true
        in: query
        name: upload_id
        required: true
        schema:
          type: string
        style: form
      - description: |
          Specifies the bytes in the file that the request is uploading.

          For example, a value of `bytes 0-262143/1000000` shows that the request is sending the first
          262144 bytes (256 x 1024) in a 2,469,036 byte file.
        explode: false
        in: header
        name: Content-Range
        required: true
        schema:
          example: bytes 0-262143/2469036
          type: string
        style: simple
      - description: |
          Size of the chunk that the request is sending.

          Remember that larger chunks are more efficient. PeerTube's web client uses chunks varying from
          1048576 bytes (~1MB) and increases or reduces size depending on connection health.
        explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          example: 262144
          type: number
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUploadResponse'
          description: last chunk received
          headers:
            Content-Length:
              explode: false
              schema:
                type: number
              style: simple
        "308":
          description: resume incomplete
          headers:
            Range:
              explode: false
              schema:
                example: bytes=0-262143
                type: string
              style: simple
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
        "403":
          description: video didn't pass upload filter
        "404":
          description: upload not found
        "409":
          description: chunk doesn't match range
        "422":
          description: video unreadable
        "429":
          description: too many concurrent requests
        "503":
          description: upload is already being processed
          headers:
            Retry-After:
              explode: false
              schema:
                example: 300
                type: number
              style: simple
      security:
      - OAuth2: []
      summary: Send chunk for the resumable upload of a video
      tags:
      - Video
      - Video Upload
  /api/v1/videos/imports:
    post:
      description: Import a torrent or magnetURI or HTTP resource (if enabled by the
        instance administrator)
      operationId: importVideo
      requestBody:
        content:
          multipart/form-data:
            encoding:
              torrentfile:
                contentType: application/x-bittorrent
                style: form
              thumbnailfile:
                contentType: image/jpeg
                style: form
              previewfile:
                contentType: image/jpeg
                style: form
            schema:
              $ref: '#/components/schemas/VideoCreateImport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUploadResponse'
          description: successful operation
        "400":
          description: '`magnetUri` or `targetUrl` or a torrent file missing'
        "403":
          description: video didn't pass pre-import filter
        "409":
          description: HTTP or Torrent/magnetURI import not enabled
      security:
      - OAuth2: []
      summary: Import a video
      tags:
      - Video Imports
      - Video Upload
  /api/v1/videos/imports/{id}/cancel:
    post:
      description: Cancel a pending video import
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Cancel video import
      tags:
      - Video Imports
  /api/v1/videos/imports/{id}:
    delete:
      description: Delete ended video import
      parameters:
      - description: Entity id
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete video import
      tags:
      - Video Imports
  /api/v1/videos/live:
    post:
      operationId: addLive
      requestBody:
        content:
          multipart/form-data:
            encoding:
              thumbnailfile:
                contentType: image/jpeg
                style: form
              previewfile:
                contentType: image/jpeg
                style: form
            schema:
              $ref: '#/components/schemas/addLive_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUploadResponse'
          description: successful operation
        "400":
          description: |
            Disambiguate via `code`:
            - default type for a validation error
            - `live_conflicting_permanent_and_save_replay` for conflicting parameters set
          x-summary: "validation error, or conflicting `saveReplay` and `permanentLive`\
            \ parameter set"
        "403":
          description: |
            Disambiguate via `code`:
            - `live_not_enabled` for a disabled live feature
            - `live_not_allowing_replay` for a disabled replay feature
            - `max_instance_lives_limit_reached` for the absolute concurrent live limit
            - `max_user_lives_limit_reached` for the user concurrent live limit
          x-summary: "live is not enabled, allow replay is not enabled, or max instance/user\
            \ live videos limit is exceeded"
      security:
      - OAuth2: []
      summary: Create a live
      tags:
      - Live Videos
      - Video
  /api/v1/videos/live/{id}:
    get:
      operationId: getLiveId
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveVideoResponse'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get information about a live
      tags:
      - Live Videos
      - Video
    put:
      operationId: updateLiveId
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveVideoUpdate'
      responses:
        "204":
          description: successful operation
        "400":
          description: bad parameters or trying to update a live that has already
            started
        "403":
          description: trying to save replay of the live but saving replay is not
            enabled on the instance
      security:
      - OAuth2: []
      summary: Update information about a live
      tags:
      - Live Videos
      - Video
  /api/v1/videos/live/{id}/sessions:
    get:
      description: List all sessions created in a particular live
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_videos_live__id__sessions_get_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List live sessions
      tags:
      - Live Videos
  /api/v1/videos/{id}/live-session:
    get:
      description: "If the video is a replay of a live, you can find the associated\
        \ live session using this endpoint"
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveVideoSessionResponse'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get live session of a replay
      tags:
      - Live Videos
  /api/v1/videos/{id}/source:
    get:
      operationId: getVideoSource
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoSource'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get video source file metadata
      tags:
      - Video
  /api/v1/videos/{id}/source/file:
    delete:
      operationId: deleteVideoSourceFile
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: video source not found
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Delete video source file
      tags:
      - Video
  /api/v1/videos/{id}/source/replace-resumable:
    delete:
      description: "**PeerTube >= 6.0** Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to cancel the replacement of a video"
      operationId: replaceVideoSourceResumableCancel
      parameters:
      - description: |
          Created session id to proceed with. If you didn't send chunks in the last hour, it is
          not valid anymore and you need to initialize a new upload.
        explode: true
        in: query
        name: upload_id
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          example: 0
          type: number
        style: simple
      responses:
        "204":
          description: source file replacement cancelled
          headers:
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
        "404":
          description: source file replacement not found
      security:
      - OAuth2: []
      summary: Cancel the resumable replacement of a video
      tags:
      - Video
      - Video Upload
    post:
      description: "**PeerTube >= 6.0** Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to initialize the replacement of a video"
      operationId: replaceVideoSourceResumableInit
      parameters:
      - description: Number of bytes that will be uploaded in subsequent requests.
          Set this value to the size of the file you are uploading.
        explode: false
        in: header
        name: X-Upload-Content-Length
        required: true
        schema:
          example: 2469036
          type: number
        style: simple
      - description: "MIME type of the file that you are uploading. Depending on your\
          \ instance settings, acceptable values might vary."
        explode: false
        in: header
        name: X-Upload-Content-Type
        required: true
        schema:
          example: video/mp4
          format: mimetype
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoReplaceSourceRequestResumable'
      responses:
        "200":
          description: "file already exists, send a [`resume`](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
            \ request instead"
        "201":
          description: created
          headers:
            Location:
              explode: false
              schema:
                format: url
                type: string
              style: simple
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
        "413":
          description: |
            Disambiguate via `code`:
            - `max_file_size_reached` for the absolute file size limit
            - `quota_reached` for quota limits whether daily or global
          x-summary: "video file too large, due to quota, absolute max file size or\
            \ concurrent partial upload limit"
        "415":
          description: video type unsupported
      security:
      - OAuth2: []
      summary: Initialize the resumable replacement of a video
      tags:
      - Video
      - Video Upload
    put:
      description: "**PeerTube >= 6.0** Uses [a resumable protocol](https://github.com/kukhariev/node-uploadx/blob/master/proto.md)\
        \ to continue, pause or resume the replacement of a video"
      operationId: replaceVideoSourceResumable
      parameters:
      - description: |
          Created session id to proceed with. If you didn't send chunks in the last hour, it is
          not valid anymore and you need to initialize a new upload.
        explode: true
        in: query
        name: upload_id
        required: true
        schema:
          type: string
        style: form
      - description: |
          Specifies the bytes in the file that the request is uploading.

          For example, a value of `bytes 0-262143/1000000` shows that the request is sending the first
          262144 bytes (256 x 1024) in a 2,469,036 byte file.
        explode: false
        in: header
        name: Content-Range
        required: true
        schema:
          example: bytes 0-262143/2469036
          type: string
        style: simple
      - description: |
          Size of the chunk that the request is sending.

          Remember that larger chunks are more efficient. PeerTube's web client uses chunks varying from
          1048576 bytes (~1MB) and increases or reduces size depending on connection health.
        explode: false
        in: header
        name: Content-Length
        required: true
        schema:
          example: 262144
          type: number
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "204":
          description: "last chunk received: successful operation"
        "308":
          description: resume incomplete
          headers:
            Range:
              explode: false
              schema:
                example: bytes=0-262143
                type: string
              style: simple
            Content-Length:
              explode: false
              schema:
                example: 0
                type: number
              style: simple
        "403":
          description: video didn't pass file replacement filter
        "404":
          description: replace upload not found
        "409":
          description: chunk doesn't match range
        "422":
          description: video unreadable
        "429":
          description: too many concurrent requests
        "503":
          description: upload is already being processed
          headers:
            Retry-After:
              explode: false
              schema:
                example: 300
                type: number
              style: simple
      security:
      - OAuth2: []
      summary: Send chunk for the resumable replacement of a video
      tags:
      - Video
      - Video Upload
  /api/v1/users/me/abuses:
    get:
      operationId: getMyAbuses
      parameters:
      - description: only list the report with this id
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/AbuseStateSet'
        style: form
      - description: Sort abuses by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - -id
          - -createdAt
          - -state
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMyAbuses_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List my abuses
      tags:
      - Abuses
      - My User
  /api/v1/abuses:
    get:
      operationId: getAbuses
      parameters:
      - description: only list the report with this id
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: predefined reason the listed reports should contain
        explode: true
        in: query
        name: predefinedReason
        required: false
        schema:
          $ref: '#/components/schemas/PredefinedAbuseReasons'
        style: form
      - description: "plain search that will match with video titles, reporter names\
          \ and more"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/AbuseStateSet'
        style: form
      - description: only list reports of a specific reporter
        explode: true
        in: query
        name: searchReporter
        required: false
        schema:
          type: string
        style: form
      - description: only list reports of a specific reportee
        explode: true
        in: query
        name: searchReportee
        required: false
        schema:
          type: string
        style: form
      - description: only list reports of a specific video
        explode: true
        in: query
        name: searchVideo
        required: false
        schema:
          type: string
        style: form
      - description: only list reports of a specific video channel
        explode: true
        in: query
        name: searchVideoChannel
        required: false
        schema:
          type: string
        style: form
      - description: only list deleted or blocklisted videos
        explode: true
        in: query
        name: videoIs
        required: false
        schema:
          enum:
          - deleted
          - blacklisted
          type: string
        style: form
      - description: "only list account, comment or video reports"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - video
          - comment
          - account
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort abuses by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - -id
          - -createdAt
          - -state
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMyAbuses_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: List abuses
      tags:
      - Abuses
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_abuses_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_abuses_post_200_response'
          description: successful operation
        "400":
          description: incorrect request parameters
      security:
      - OAuth2: []
      summary: Report an abuse
      tags:
      - Abuses
  /api/v1/abuses/{abuseId}:
    delete:
      parameters:
      - description: Abuse id
        explode: false
        in: path
        name: abuseId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: block not found
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Delete an abuse
      tags:
      - Abuses
    put:
      parameters:
      - description: Abuse id
        explode: false
        in: path
        name: abuseId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_abuses__abuseId__put_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: abuse not found
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Update an abuse
      tags:
      - Abuses
  /api/v1/abuses/{abuseId}/messages:
    get:
      parameters:
      - description: Abuse id
        explode: false
        in: path
        name: abuseId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_abuses__abuseId__messages_get_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List messages of an abuse
      tags:
      - Abuses
    post:
      parameters:
      - description: Abuse id
        explode: false
        in: path
        name: abuseId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_abuses__abuseId__messages_post_request'
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: incorrect request parameters
      security:
      - OAuth2: []
      summary: Add message to an abuse
      tags:
      - Abuses
  /api/v1/abuses/{abuseId}/messages/{abuseMessageId}:
    delete:
      parameters:
      - description: Abuse id
        explode: false
        in: path
        name: abuseId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      - description: Abuse message id
        explode: false
        in: path
        name: abuseMessageId
        required: true
        schema:
          $ref: '#/components/schemas/AbuseMessage/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete an abuse message
      tags:
      - Abuses
  /api/v1/videos/{id}/blacklist:
    delete:
      operationId: delVideoBlock
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: block not found
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Unblock a video by its id
      tags:
      - Video Blocks
    post:
      operationId: addVideoBlock
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Block a video
      tags:
      - Video Blocks
  /api/v1/videos/blacklist:
    get:
      operationId: getVideoBlocks
      parameters:
      - description: |
          list only blocks that match this type:
          - `1`: manual block
          - `2`: automatic block that needs review
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      - description: "plain search that will match with video titles, and more"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort blocklists by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - -id
          - name
          - -duration
          - -views
          - -likes
          - -dislikes
          - -uuid
          - -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVideoBlocks_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: List video blocks
      tags:
      - Video Blocks
  /api/v1/videos/{id}/storyboards:
    get:
      description: '**PeerTube >= 6.0**'
      operationId: listVideoStoryboards
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listVideoStoryboards_200_response'
          description: successful operation
      summary: List storyboards of a video
      tags:
      - Video
  /api/v1/videos/{id}/captions:
    get:
      operationId: getVideoCaptions
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVideoCaptions_200_response'
          description: successful operation
      summary: List captions of a video
      tags:
      - Video Captions
  /api/v1/videos/{id}/captions/generate:
    post:
      description: '**PeerTube >= 6.2** This feature has to be enabled by the administrator'
      operationId: generateVideoCaption
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generateVideoCaption_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: video not found
      security:
      - OAuth2:
        - user
      summary: Generate a video caption
      tags:
      - Video Captions
  /api/v1/videos/{id}/captions/{captionLanguage}:
    delete:
      operationId: delVideoCaption
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The caption language
        explode: false
        in: path
        name: captionLanguage
        required: true
        schema:
          $ref: '#/components/schemas/VideoLanguageSet'
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: video or language or caption for that language not found
      security:
      - OAuth2:
        - user
      summary: Delete a video caption
      tags:
      - Video Captions
    put:
      operationId: addVideoCaption
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The caption language
        explode: false
        in: path
        name: captionLanguage
        required: true
        schema:
          $ref: '#/components/schemas/VideoLanguageSet'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              captionfile:
                contentType: "text/vtt, application/x-subrip, text/plain"
                style: form
            schema:
              $ref: '#/components/schemas/addVideoCaption_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: video or language not found
      security:
      - OAuth2:
        - user
      summary: Add or replace a video caption
      tags:
      - Video Captions
  /api/v1/videos/{id}/chapters:
    get:
      description: '**PeerTube >= 6.0**'
      operationId: getVideoChapters
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChapters'
          description: successful operation
      summary: Get chapters of a video
      tags:
      - Video Chapters
    put:
      description: '**PeerTube >= 6.0**'
      operationId: replaceVideoChapters
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceVideoChapters_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: video not found
      security:
      - OAuth2:
        - user
      summary: Replace video chapters
      tags:
      - Video Chapters
  /api/v1/videos/{id}/passwords:
    get:
      description: '**PeerTube >= 6.0**'
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoPasswordList'
          description: successful operation
        "400":
          description: video is not password protected
      security:
      - OAuth2:
        - user
      summary: List video passwords
      tags:
      - Video Passwords
    put:
      description: '**PeerTube >= 6.0**'
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_videos__id__passwords_put_request'
      responses:
        "204":
          description: successful operation
        "400":
          description: video is not password protected
      security:
      - OAuth2:
        - user
      summary: Update video passwords
      tags:
      - Video Passwords
  /api/v1/videos/{id}/passwords/{videoPasswordId}:
    delete:
      description: '**PeerTube >= 6.0**'
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The video password id
        explode: false
        in: path
        name: videoPasswordId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
        "400":
          description: video is not password protected
        "403":
          description: cannot delete the last password of the protected video
      security:
      - OAuth2:
        - user
      summary: Delete a video password
      tags:
      - Video Passwords
  /api/v1/video-channels:
    get:
      operationId: getVideoChannels
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannelList'
          description: successful operation
      summary: List video channels
      tags:
      - Video Channels
    post:
      operationId: addVideoChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoChannelCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addVideoChannel_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Create a video channel
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}:
    delete:
      operationId: delVideoChannel
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete a video channel
      tags:
      - Video Channels
    get:
      operationId: getVideoChannel
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannel'
          description: successful operation
      summary: Get a video channel
      tags:
      - Video Channels
    put:
      operationId: putVideoChannel
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoChannelUpdate'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update a video channel
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}/videos:
    get:
      operationId: getVideoChannelVideos
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      - description: "category id of the video (see [/videos/categories](#operation/getCategories))"
        explode: true
        in: query
        name: categoryOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_categoryOneOf_parameter'
        style: form
      - description: whether or not the video is a live
        explode: true
        in: query
        name: isLive
        required: false
        schema:
          type: boolean
        style: form
      - description: tag(s) of the video
        explode: true
        in: query
        name: tagsOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsOneOf_parameter'
        style: form
      - description: "tag(s) of the video, where all should be present in the video"
        explode: true
        in: query
        name: tagsAllOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
        explode: true
        in: query
        name: licenceOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_licenceOneOf_parameter'
        style: form
      - description: "language id of the video (see [/videos/languages](#operation/getLanguages)).\
          \ Use `_unknown` to filter on videos that don't have a video language"
        explode: true
        in: query
        name: languageOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_languageOneOf_parameter'
        style: form
      - description: '**PeerTube >= 6.2** **Admins and moderators only** filter on
          videos that contain one of these automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: if you don't need the `total` in the response
        explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          description: |
            Sort videos by criteria (prefixing with `-` means `DESC` order):
              * `hot` - Adaptation of Reddit "hot" algorithm taking into account video views, likes, dislikes and comments and publication date
              * `best` - Same than `hot`, but also takes into account user video history
              * `trending` - Sort videos by recent views ("recent" is defined by the admin)
              * `views` - Sort videos using their `views` counter
              * `publishedAt` - Sort by video publication date (when it became publicly available)
          enum:
          - name
          - -duration
          - -createdAt
          - -publishedAt
          - -views
          - -likes
          - -trending
          - -hot
          - -best
          type: string
        style: form
      - description: Whether or not to exclude videos that are in the user's video
          history
        explode: true
        in: query
        name: excludeAlreadyWatched
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      summary: List videos of a video channel
      tags:
      - Video
      - Video Channels
  /api/v1/video-channels/{channelHandle}/video-playlists:
    get:
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - explode: true
        in: query
        name: playlistType
        required: false
        schema:
          $ref: '#/components/schemas/VideoPlaylistTypeSet'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_video_channels__channelHandle__video_playlists_get_200_response'
          description: successful operation
      summary: List playlists of a channel
      tags:
      - Video Playlists
      - Video Channels
  /api/v1/video-channels/{channelHandle}/followers:
    get:
      operationId: getVideoChannelFollowers
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort followers by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdAt
          type: string
        style: form
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountFollowers_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List followers of a video channel
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}/avatar/pick:
    post:
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              avatarfile:
                contentType: "image/png, image/jpeg"
                style: form
            schema:
              $ref: '#/components/schemas/_api_v1_config_instance_avatar_pick_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_users_me_avatar_pick_post_200_response'
          description: successful operation
        "413":
          description: image file too large
          headers:
            X-File-Maximum-Size:
              description: Maximum file size for the avatar
              explode: false
              schema:
                format: Nginx size
                type: string
              style: simple
      security:
      - OAuth2: []
      summary: Update channel avatar
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}/avatar:
    delete:
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete channel avatar
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}/banner/pick:
    post:
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              bannerfile:
                contentType: "image/png, image/jpeg"
                style: form
            schema:
              $ref: '#/components/schemas/_api_v1_config_instance_banner_pick_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_video_channels__channelHandle__banner_pick_post_200_response'
          description: successful operation
        "413":
          description: image file too large
          headers:
            X-File-Maximum-Size:
              description: Maximum file size for the banner
              explode: false
              schema:
                format: Nginx size
                type: string
              style: simple
      security:
      - OAuth2: []
      summary: Update channel banner
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}/banner:
    delete:
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete channel banner
      tags:
      - Video Channels
  /api/v1/video-channels/{channelHandle}/import-videos:
    post:
      description: Import a remote channel/playlist videos into a channel
      parameters:
      - description: The video channel handle
        explode: false
        in: path
        name: channelHandle
        required: true
        schema:
          example: my_username | my_username@example.com
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportVideosInChannelCreate'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Import videos in channel
      tags:
      - Video Channels
      - Channels Sync
  /api/v1/video-channel-syncs:
    post:
      operationId: addVideoChannelSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoChannelSyncCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addVideoChannelSync_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Create a synchronization for a video channel
      tags:
      - Channels Sync
  /api/v1/video-channel-syncs/{channelSyncId}:
    delete:
      operationId: delVideoChannelSync
      parameters:
      - description: Channel Sync id
        explode: false
        in: path
        name: channelSyncId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete a video channel synchronization
      tags:
      - Channels Sync
  /api/v1/video-channel-syncs/{channelSyncId}/sync:
    post:
      operationId: triggerVideoChannelSync
      parameters:
      - description: Channel Sync id
        explode: false
        in: path
        name: channelSyncId
        required: true
        schema:
          $ref: '#/components/schemas/Abuse/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: "Triggers the channel synchronization job, fetching all the videos\
        \ from the remote channel"
      tags:
      - Channels Sync
  /api/v1/video-playlists/privacies:
    get:
      operationId: getPlaylistPrivacyPolicies
      responses:
        "200":
          content:
            application/json:
              examples:
                nightly:
                  externalValue: https://peertube2.cpy.re/api/v1/video-playlists/privacies
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      summary: List available playlist privacy policies
      tags:
      - Video Playlists
  /api/v1/video-playlists:
    get:
      operationId: getPlaylists
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - explode: true
        in: query
        name: playlistType
        required: false
        schema:
          $ref: '#/components/schemas/VideoPlaylistTypeSet'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_video_channels__channelHandle__video_playlists_get_200_response'
          description: successful operation
      summary: List video playlists
      tags:
      - Video Playlists
    post:
      description: "If the video playlist is set as public, `videoChannelId` is mandatory."
      operationId: addPlaylist
      requestBody:
        content:
          multipart/form-data:
            encoding:
              thumbnailfile:
                contentType: image/jpeg
                style: form
            schema:
              $ref: '#/components/schemas/addPlaylist_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addPlaylist_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Create a video playlist
      tags:
      - Video Playlists
  /api/v1/video-playlists/{playlistId}:
    delete:
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete a video playlist
      tags:
      - Video Playlists
    get:
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoPlaylist'
          description: successful operation
      summary: Get a video playlist
      tags:
      - Video Playlists
    put:
      description: "If the video playlist is set as public, the playlist must have\
        \ a assigned channel."
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              thumbnailfile:
                contentType: image/jpeg
                style: form
            schema:
              $ref: '#/components/schemas/_api_v1_video_playlists__playlistId__put_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update a video playlist
      tags:
      - Video Playlists
  /api/v1/video-playlists/{playlistId}/videos:
    get:
      operationId: getVideoPlaylistVideos
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
      summary: List videos of a playlist
      tags:
      - Videos
      - Video Playlists
    post:
      operationId: addVideoPlaylistVideo
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addVideoPlaylistVideo_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addVideoPlaylistVideo_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Add a video in a playlist
      tags:
      - Videos
      - Video Playlists
  /api/v1/video-playlists/{playlistId}/videos/reorder:
    post:
      operationId: reorderVideoPlaylist
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reorderVideoPlaylist_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Reorder a playlist
      tags:
      - Video Playlists
  /api/v1/video-playlists/{playlistId}/videos/{playlistElementId}:
    delete:
      operationId: delVideoPlaylistVideo
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      - description: Playlist element id
        explode: false
        in: path
        name: playlistElementId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete an element from a playlist
      tags:
      - Video Playlists
    put:
      operationId: putVideoPlaylistVideo
      parameters:
      - description: Playlist id
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          $ref: '#/components/schemas/VideoPlaylist/properties/id'
        style: simple
      - description: Playlist element id
        explode: false
        in: path
        name: playlistElementId
        required: true
        schema:
          $ref: '#/components/schemas/id'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putVideoPlaylistVideo_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update a playlist element
      tags:
      - Video Playlists
  /api/v1/users/me/video-playlists/videos-exist:
    get:
      parameters:
      - description: The video ids to check
        explode: true
        in: query
        name: videoIds
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Video/properties/id'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_users_me_video_playlists_videos_exist_get_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Check video exists in my playlists
      tags:
      - Video Playlists
  /api/v1/accounts/{name}/video-playlists:
    get:
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: playlistType
        required: false
        schema:
          $ref: '#/components/schemas/VideoPlaylistTypeSet'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_video_channels__channelHandle__video_playlists_get_200_response'
          description: successful operation
      summary: List playlists of an account
      tags:
      - Video Playlists
      - Accounts
  /api/v1/accounts/{name}/video-channels:
    get:
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      - description: include daily view statistics for the last 30 days and total
          views (only if authentified as the account user)
        explode: true
        in: query
        name: withStats
        required: false
        schema:
          type: boolean
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannelList'
          description: successful operation
      summary: List video channels of an account
      tags:
      - Video Channels
      - Accounts
  /api/v1/accounts/{name}/video-channel-syncs:
    get:
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannelSyncList'
          description: successful operation
      summary: List the synchronizations of video channels of an account
      tags:
      - Video Channels
      - Channels Sync
      - Accounts
  /api/v1/accounts/{name}/ratings:
    get:
      parameters:
      - description: The username or handle of the account
        explode: false
        in: path
        name: name
        required: true
        schema:
          example: chocobozzz | chocobozzz@example.org
          type: string
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: Optionally filter which ratings to retrieve
        explode: true
        in: query
        name: rating
        required: false
        schema:
          enum:
          - like
          - dislike
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VideoRating'
                type: array
          description: successful operation
      security:
      - OAuth2: []
      summary: List ratings of an account
      tags:
      - Accounts
  /api/v1/videos/{id}/comment-threads:
    get:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort comments by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - -createdAt
          - -totalReplies
          type: string
        style: form
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThreadResponse'
          description: successful operation
      summary: List threads of a video
      tags:
      - Video Comments
    post:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_videos__id__comment_threads_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThreadPostResponse'
          description: successful operation
        "404":
          description: video does not exist
      security:
      - OAuth2: []
      summary: Create a thread
      tags:
      - Video Comments
  /api/v1/videos/{id}/comment-threads/{threadId}:
    get:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The thread id (root comment id)
        explode: false
        in: path
        name: threadId
        required: true
        schema:
          type: integer
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCommentThreadTree'
          description: successful operation
      summary: Get a thread
      tags:
      - Video Comments
  /api/v1/videos/comments:
    get:
      parameters:
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Filter comments by searching on the account
        explode: true
        in: query
        name: searchAccount
        required: false
        schema:
          type: string
        style: form
      - description: Filter comments by searching on the video
        explode: true
        in: query
        name: searchVideo
        required: false
        schema:
          type: string
        style: form
      - description: Limit results on this specific video
        explode: true
        in: query
        name: videoId
        required: false
        schema:
          type: integer
        style: form
      - description: Limit results on this specific video channel
        explode: true
        in: query
        name: videoChannelId
        required: false
        schema:
          type: integer
        style: form
      - description: '**PeerTube >= 6.2** filter on comments that contain one of these
          automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: Display only objects of local or remote videos
        explode: true
        in: query
        name: onLocalVideo
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_users_me_videos_comments_get_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: List instance comments
      tags:
      - Video Comments
  /api/v1/videos/{id}/comments/{commentId}:
    delete:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The comment id
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          $ref: '#/components/schemas/VideoComment/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
        "403":
          description: cannot remove comment of another user
        "404":
          description: comment or video does not exist
        "409":
          description: comment is already deleted
      security:
      - OAuth2: []
      summary: Delete a comment or a reply
      tags:
      - Video Comments
    post:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The comment id
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          $ref: '#/components/schemas/VideoComment/properties/id'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_videos__id__comment_threads_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThreadPostResponse'
          description: successful operation
        "404":
          description: thread or video does not exist
      security:
      - OAuth2: []
      summary: Reply to a thread of a video
      tags:
      - Video Comments
  /api/v1/videos/{id}/comments/{commentId}/approve:
    post:
      description: '**PeerTube >= 6.2** Approve a comment that requires a review'
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: The comment id
        explode: false
        in: path
        name: commentId
        required: true
        schema:
          $ref: '#/components/schemas/VideoComment/properties/id'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Approve a comment
      tags:
      - Video Comments
  /api/v1/videos/{id}/rate:
    put:
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      - description: Required on password protected video
        explode: false
        in: header
        name: x-peertube-video-password
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_videos__id__rate_put_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: video does not exist
      security:
      - OAuth2: []
      summary: Like/dislike a video
      tags:
      - Video Rates
  /api/v1/videos/{id}/hls:
    delete:
      operationId: delVideoHLS
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: video does not exist
      security:
      - OAuth2:
        - admin
      summary: Delete video HLS files
      tags:
      - Video Files
  /api/v1/videos/{id}/web-videos:
    delete:
      description: '**PeerTube >= 6.0**'
      operationId: delVideoWebVideos
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: video does not exist
      security:
      - OAuth2:
        - admin
      summary: Delete video Web Video files
      tags:
      - Video Files
  /api/v1/videos/{id}/transcoding:
    post:
      operationId: createVideoTranscoding
      parameters:
      - description: "The object id, uuid or short uuid"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createVideoTranscoding_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: video does not exist
      security:
      - OAuth2:
        - admin
      summary: Create a transcoding job
      tags:
      - Video Transcoding
  /api/v1/search/videos:
    get:
      callbacks:
        searchTarget === search-index:
          $ref: '#/components/callbacks/searchIndex'
      operationId: searchVideos
      parameters:
      - allowEmptyValue: false
        description: |
          String to search. If the user can make a remote URI search, and the string is an URI then the PeerTube instance will fetch the remote object and add it to its database. Then, you can use the REST API to fetch the complete video information and interact with it.
        explode: true
        in: query
        name: search
        required: true
        schema:
          type: string
        style: form
      - description: "category id of the video (see [/videos/categories](#operation/getCategories))"
        explode: true
        in: query
        name: categoryOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_categoryOneOf_parameter'
        style: form
      - description: whether or not the video is a live
        explode: true
        in: query
        name: isLive
        required: false
        schema:
          type: boolean
        style: form
      - description: tag(s) of the video
        explode: true
        in: query
        name: tagsOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsOneOf_parameter'
        style: form
      - description: "tag(s) of the video, where all should be present in the video"
        explode: true
        in: query
        name: tagsAllOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
        explode: true
        in: query
        name: licenceOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_licenceOneOf_parameter'
        style: form
      - description: "language id of the video (see [/videos/languages](#operation/getLanguages)).\
          \ Use `_unknown` to filter on videos that don't have a video language"
        explode: true
        in: query
        name: languageOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_languageOneOf_parameter'
        style: form
      - description: '**PeerTube >= 6.2** **Admins and moderators only** filter on
          videos that contain one of these automatic tags'
        explode: true
        in: query
        name: autoTagOneOf
        required: false
        schema:
          $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
        style: form
      - description: "whether to include nsfw videos, if any"
        explode: true
        in: query
        name: nsfw
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: '**PeerTube >= 4.0** Display only local or remote objects'
        explode: true
        in: query
        name: isLocal
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
          - `0` NONE
          - `1` NOT_PUBLISHED_STATE
          - `2` BLACKLISTED
          - `4` BLOCKED_OWNER
          - `8` FILES
          - `16` CAPTIONS
          - `32` VIDEO SOURCE
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          type: integer
        style: form
      - description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
        explode: true
        in: query
        name: privacyOneOf
        required: false
        schema:
          $ref: '#/components/schemas/VideoPrivacySet'
        style: form
      - description: Find elements with specific UUIDs
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: '**PeerTube >= 4.0** Display only videos that have HLS files'
        explode: true
        in: query
        name: hasHLSFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: '**PeerTube >= 6.0** Display only videos that have Web Video
          files'
        explode: true
        in: query
        name: hasWebVideoFiles
        required: false
        schema:
          type: boolean
        style: form
      - description: if you don't need the `total` in the response
        explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: "false"
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |
          If the administrator enabled search index support, you can override the default search target.

          **Warning**: If you choose to make an index search, PeerTube will get results from a third party service. It means the instance may not yet know the objects you fetched. If you want to load video/channel information:
            * If the current user has the ability to make a remote URI search (this information is available in the config endpoint),
            then reuse the search API to make a search using the object URI so PeerTube instance fetches the remote object and fill its database.
            After that, you can use the classic REST API endpoints to fetch the complete object or interact with it
            * If the current user doesn't have the ability to make a remote URI search, then redirect the user on the origin instance or fetch
            the data from the origin instance API
        explode: true
        in: query
        name: searchTarget
        required: false
        schema:
          enum:
          - local
          - search-index
          type: string
        style: form
      - description: |
          Sort videos by criteria (prefixing with `-` means `DESC` order):
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name
          - -duration
          - -createdAt
          - -publishedAt
          - -views
          - -likes
          - -match
          type: string
        style: form
      - description: Whether or not to exclude videos that are in the user's video
          history
        explode: true
        in: query
        name: excludeAlreadyWatched
        required: false
        schema:
          type: boolean
        style: form
      - description: Find elements owned by this host
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - description: Get videos that are published after this date
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Get videos that are published before this date
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Get videos that are originally published after this date
        explode: true
        in: query
        name: originallyPublishedStartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Get videos that are originally published before this date
        explode: true
        in: query
        name: originallyPublishedEndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Get videos that have this minimum duration
        explode: true
        in: query
        name: durationMin
        required: false
        schema:
          type: integer
        style: form
      - description: Get videos that have this maximum duration
        explode: true
        in: query
        name: durationMax
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
          description: successful operation
        "500":
          description: search index unavailable
      summary: Search videos
      tags:
      - Search
      - Video
  /api/v1/search/video-channels:
    get:
      callbacks:
        searchTarget === search-index:
          $ref: '#/components/callbacks/searchIndex'
      operationId: searchChannels
      parameters:
      - description: |
          String to search. If the user can make a remote URI search, and the string is an URI then the PeerTube instance will fetch the remote object and add it to its database. Then, you can use the REST API to fetch the complete channel information and interact with it.
        explode: true
        in: query
        name: search
        required: true
        schema:
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |
          If the administrator enabled search index support, you can override the default search target.

          **Warning**: If you choose to make an index search, PeerTube will get results from a third party service. It means the instance may not yet know the objects you fetched. If you want to load video/channel information:
            * If the current user has the ability to make a remote URI search (this information is available in the config endpoint),
            then reuse the search API to make a search using the object URI so PeerTube instance fetches the remote object and fill its database.
            After that, you can use the classic REST API endpoints to fetch the complete object or interact with it
            * If the current user doesn't have the ability to make a remote URI search, then redirect the user on the origin instance or fetch
            the data from the origin instance API
        explode: true
        in: query
        name: searchTarget
        required: false
        schema:
          enum:
          - local
          - search-index
          type: string
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: Find elements owned by this host
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - description: Find elements with these handles
        explode: true
        in: query
        name: handles
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoChannelList'
          description: successful operation
        "500":
          description: search index unavailable
      summary: Search channels
      tags:
      - Search
      - Video Channels
  /api/v1/search/video-playlists:
    get:
      callbacks:
        searchTarget === search-index:
          $ref: '#/components/callbacks/searchIndex'
      operationId: searchPlaylists
      parameters:
      - description: |
          String to search. If the user can make a remote URI search, and the string is an URI then the PeerTube instance will fetch the remote object and add it to its database. Then, you can use the REST API to fetch the complete playlist information and interact with it.
        explode: true
        in: query
        name: search
        required: true
        schema:
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |
          If the administrator enabled search index support, you can override the default search target.

          **Warning**: If you choose to make an index search, PeerTube will get results from a third party service. It means the instance may not yet know the objects you fetched. If you want to load video/channel information:
            * If the current user has the ability to make a remote URI search (this information is available in the config endpoint),
            then reuse the search API to make a search using the object URI so PeerTube instance fetches the remote object and fill its database.
            After that, you can use the classic REST API endpoints to fetch the complete object or interact with it
            * If the current user doesn't have the ability to make a remote URI search, then redirect the user on the origin instance or fetch
            the data from the origin instance API
        explode: true
        in: query
        name: searchTarget
        required: false
        schema:
          enum:
          - local
          - search-index
          type: string
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      - description: Find elements owned by this host
        explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - description: Find elements with specific UUIDs
        explode: true
        in: query
        name: uuids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_video_channels__channelHandle__video_playlists_get_200_response'
          description: successful operation
        "500":
          description: search index unavailable
      summary: Search playlists
      tags:
      - Search
      - Video Playlists
  /api/v1/blocklist/status:
    get:
      parameters:
      - description: Check if these accounts are blocked
        example:
        - goofy@example.com
        - donald@example.com
        explode: true
        in: query
        name: accounts
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Check if these hosts are blocked
        example:
        - example.com
        explode: true
        in: query
        name: hosts
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockStatus'
          description: successful operation
      summary: Get block status of accounts/hosts
      tags:
      - Account Blocks
      - Server Blocks
  /api/v1/server/blocklist/accounts:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List account blocks
      tags:
      - Account Blocks
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_server_blocklist_accounts_post_request'
      responses:
        "200":
          description: successful operation
        "409":
          description: self-blocking forbidden
      security:
      - OAuth2:
        - admin
      summary: Block an account
      tags:
      - Account Blocks
  /api/v1/server/blocklist/accounts/{accountName}:
    delete:
      parameters:
      - description: "account to unblock, in the form `username@domain`"
        explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: successful operation
        "404":
          description: account or account block does not exist
      security:
      - OAuth2:
        - admin
      summary: Unblock an account by its handle
      tags:
      - Account Blocks
  /api/v1/server/blocklist/servers:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List server blocks
      tags:
      - Server Blocks
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_server_blocklist_servers_post_request'
      responses:
        "204":
          description: successful operation
        "409":
          description: self-blocking forbidden
      security:
      - OAuth2:
        - admin
      summary: Block a server
      tags:
      - Server Blocks
  /api/v1/server/blocklist/servers/{host}:
    delete:
      parameters:
      - description: server domain to unblock
        explode: false
        in: path
        name: host
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: account block does not exist
      security:
      - OAuth2:
        - admin
      summary: Unblock a server by its domain
      tags:
      - Server Blocks
  /api/v1/server/redundancy/{host}:
    put:
      parameters:
      - description: server domain to mirror
        explode: false
        in: path
        name: host
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_server_redundancy__host__put_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: server is not already known
      security:
      - OAuth2:
        - admin
      summary: Update a server redundancy policy
      tags:
      - Instance Redundancy
  /api/v1/server/redundancy/videos:
    get:
      operationId: getMirroredVideos
      parameters:
      - description: direction of the mirror
        explode: true
        in: query
        name: target
        required: true
        schema:
          enum:
          - my-videos
          - remote-videos
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort abuses by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VideoRedundancy'
                type: array
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List videos being mirrored
      tags:
      - Video Mirroring
    post:
      operationId: putMirroredVideo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putMirroredVideo_request'
      responses:
        "204":
          description: successful operation
        "400":
          description: cannot mirror a local video
        "404":
          description: video does not exist
        "409":
          description: video is already mirrored
      security:
      - OAuth2:
        - admin
      summary: Mirror a video
      tags:
      - Video Mirroring
  /api/v1/server/redundancy/videos/{redundancyId}:
    delete:
      operationId: delMirroredVideo
      parameters:
      - description: id of an existing redundancy on a video
        explode: false
        in: path
        name: redundancyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
        "404":
          description: video redundancy not found
      security:
      - OAuth2:
        - admin
      summary: Delete a mirror done on a video
      tags:
      - Video Mirroring
  /api/v1/server/stats:
    get:
      description: Get instance public statistics. This endpoint is cached.
      operationId: getInstanceStats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStats'
          description: successful operation
      summary: Get instance stats
      tags:
      - Stats
  /api/v1/server/logs/client:
    post:
      operationId: sendClientLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendClientLog'
      responses:
        "204":
          description: successful operation
      summary: Send client log
      tags:
      - Logs
  /api/v1/server/logs:
    get:
      operationId: getInstanceLogs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Get instance logs
      tags:
      - Logs
  /api/v1/server/audit-logs:
    get:
      operationId: getInstanceAuditLogs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Get instance audit logs
      tags:
      - Logs
  /api/v1/plugins:
    get:
      operationId: getPlugins
      parameters:
      - explode: true
        in: query
        name: pluginType
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: uninstalled
        required: false
        schema:
          type: boolean
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List plugins
      tags:
      - Plugins
  /api/v1/plugins/available:
    get:
      operationId: getAvailablePlugins
      parameters:
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pluginType
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: currentPeerTubeEngine
        required: false
        schema:
          type: string
        style: form
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort column
        explode: true
        in: query
        name: sort
        required: false
        schema:
          example: -createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
          description: successful operation
        "503":
          description: plugin index unavailable
      security:
      - OAuth2:
        - admin
      summary: List available plugins
      tags:
      - Plugins
  /api/v1/plugins/install:
    post:
      operationId: addPlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addPlugin_request'
      responses:
        "204":
          description: successful operation
        "400":
          description: should have either `npmName` or `path` set
      security:
      - OAuth2:
        - admin
      summary: Install a plugin
      tags:
      - Plugins
  /api/v1/plugins/update:
    post:
      operationId: updatePlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addPlugin_request'
      responses:
        "204":
          description: successful operation
        "400":
          description: should have either `npmName` or `path` set
        "404":
          description: existing plugin not found
      security:
      - OAuth2:
        - admin
      summary: Update a plugin
      tags:
      - Plugins
  /api/v1/plugins/uninstall:
    post:
      operationId: uninstallPlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uninstallPlugin_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: existing plugin not found
      security:
      - OAuth2:
        - admin
      summary: Uninstall a plugin
      tags:
      - Plugins
  /api/v1/plugins/{npmName}:
    get:
      operationId: getPlugin
      parameters:
      - description: name of the plugin/theme on npmjs.com or in its package.json
        explode: false
        in: path
        name: npmName
        required: true
        schema:
          example: peertube-plugin-auth-ldap
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: successful operation
        "404":
          description: plugin not found
      security:
      - OAuth2:
        - admin
      summary: Get a plugin
      tags:
      - Plugins
  /api/v1/plugins/{npmName}/settings:
    put:
      parameters:
      - description: name of the plugin/theme on npmjs.com or in its package.json
        explode: false
        in: path
        name: npmName
        required: true
        schema:
          example: peertube-plugin-auth-ldap
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_plugins__npmName__settings_put_request'
      responses:
        "204":
          description: successful operation
        "404":
          description: plugin not found
      security:
      - OAuth2:
        - admin
      summary: Set a plugin's settings
      tags:
      - Plugins
  /api/v1/plugins/{npmName}/public-settings:
    get:
      parameters:
      - description: name of the plugin/theme on npmjs.com or in its package.json
        explode: false
        in: path
        name: npmName
        required: true
        schema:
          example: peertube-plugin-auth-ldap
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: successful operation
        "404":
          description: plugin not found
      summary: Get a plugin's public settings
      tags:
      - Plugins
  /api/v1/plugins/{npmName}/registered-settings:
    get:
      parameters:
      - description: name of the plugin/theme on npmjs.com or in its package.json
        explode: false
        in: path
        name: npmName
        required: true
        schema:
          example: peertube-plugin-auth-ldap
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: successful operation
        "404":
          description: plugin not found
      security:
      - OAuth2:
        - admin
      summary: Get a plugin's registered settings
      tags:
      - Plugins
  /api/v1/metrics/playback:
    post:
      description: These metrics are exposed by OpenTelemetry metrics exporter if
        enabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackMetricCreate'
      responses:
        "204":
          description: successful operation
      summary: Create playback metrics
      tags:
      - Stats
  /api/v1/runners/registration-tokens/generate:
    post:
      description: Generate a new runner registration token
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Generate registration token
      tags:
      - Runner Registration Token
  /api/v1/runners/registration-tokens/{registrationTokenId}:
    delete:
      description: Remove a registration token. Runners that used this token for their
        registration are automatically removed.
      parameters:
      - explode: false
        in: path
        name: registrationTokenId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Remove registration token
      tags:
      - Runner Registration Token
  /api/v1/runners/registration-tokens:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort registration tokens by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_runners_registration_tokens_get_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List registration tokens
      tags:
      - Runner Registration Token
  /api/v1/runners/register:
    post:
      description: API used by PeerTube runners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_register_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_runners_register_post_200_response'
          description: successful operation
      summary: Register a new runner
      tags:
      - Runners
  /api/v1/runners/unregister:
    post:
      description: API used by PeerTube runners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_unregister_post_request'
      responses:
        "204":
          description: successful operation
      summary: Unregister a runner
      tags:
      - Runners
  /api/v1/runners/{runnerId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: runnerId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_unregister_post_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Delete a runner
      tags:
      - Runners
  /api/v1/runners:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort runners by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - createdAt
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_runners_get_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List runners
      tags:
      - Runners
  /api/v1/runners/jobs/request:
    post:
      description: API used by PeerTube runners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_unregister_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_runners_jobs_request_post_200_response'
          description: successful operation
      summary: Request a new job
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}/accept:
    post:
      description: API used by PeerTube runners
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_unregister_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__accept_post_200_response'
          description: successful operation
      summary: Accept job
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}/abort:
    post:
      description: API used by PeerTube runners
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__abort_post_request'
      responses:
        "204":
          description: successful operation
      summary: Abort job
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}/update:
    post:
      description: API used by PeerTube runners
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__update_post_request'
      responses:
        "204":
          description: successful operation
      summary: Update job
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}/error:
    post:
      description: API used by PeerTube runners
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__error_post_request'
      responses:
        "204":
          description: successful operation
      summary: Post job error
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}/success:
    post:
      description: API used by PeerTube runners
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__success_post_request'
      responses:
        "204":
          description: successful operation
      summary: Post job success
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}/cancel:
    get:
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Cancel a job
      tags:
      - Runner Jobs
  /api/v1/runners/jobs/{jobUUID}:
    delete:
      description: "The endpoint will first cancel the job if needed, and then remove\
        \ it from the database. Children jobs will also be removed"
      parameters:
      - explode: false
        in: path
        name: jobUUID
        required: true
        schema:
          $ref: '#/components/schemas/UUIDv4'
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: Delete a job
      tags:
      - Runner Jobs
  /api/v1/runners/jobs:
    get:
      parameters:
      - description: Offset used to paginate results
        explode: true
        in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of items to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 15
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Sort runner jobs by criteria
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - updatedAt
          - createdAt
          - priority
          - state
          - progress
          type: string
        style: form
      - description: "Plain text search, applied to various parts of the model depending\
          \ on endpoint"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: stateOneOf
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RunnerJobState'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_runners_jobs_get_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
      summary: List jobs
      tags:
      - Runner Jobs
  /api/v1/automatic-tags/policies/accounts/{accountName}/comments:
    get:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: account name to get auto tag policies
        explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentAutoTagPolicies'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get account auto tag policies on comments
      tags:
      - Automatic Tags
    put:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: account name to update auto tag policies
        explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_automatic_tags_policies_accounts__accountName__comments_put_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update account auto tag policies on comments
      tags:
      - Automatic Tags
  /api/v1/automatic-tags/accounts/{accountName}/available:
    get:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: account name to get auto tag policies
        explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticTagAvailable'
          description: successful operation
      security:
      - OAuth2: []
      summary: Get account available auto tags
      tags:
      - Automatic Tags
  /api/v1/automatic-tags/server/available:
    get:
      description: '**PeerTube >= 6.2**'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomaticTagAvailable'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Get server available auto tags
      tags:
      - Automatic Tags
  /api/v1/watched-words/accounts/{accountName}/lists:
    get:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: account name to list watched words
        explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_get_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: List account watched words
      tags:
      - Watched Words
    post:
      description: '**PeerTube >= 6.2**'
      parameters:
      - explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_post_200_response'
          description: successful operation
      security:
      - OAuth2: []
      summary: Add account watched words
      tags:
      - Watched Words
  /api/v1/watched-words/accounts/{accountName}/lists/{listId}:
    delete:
      description: '**PeerTube >= 6.2**'
      parameters:
      - explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      - description: list of watched words to delete
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Delete account watched words
      tags:
      - Watched Words
    put:
      description: '**PeerTube >= 6.2**'
      parameters:
      - explode: false
        in: path
        name: accountName
        required: true
        schema:
          type: string
        style: simple
      - description: list of watched words to update
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_post_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2: []
      summary: Update account watched words
      tags:
      - Watched Words
  /api/v1/watched-words/server/lists:
    get:
      description: '**PeerTube >= 6.2**'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_get_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: List server watched words
      tags:
      - Watched Words
    post:
      description: '**PeerTube >= 6.2**'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_post_200_response'
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Add server watched words
      tags:
      - Watched Words
  /api/v1/watched-words/server/lists/{listId}:
    delete:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: list of watched words to delete
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Delete server watched words
      tags:
      - Watched Words
    put:
      description: '**PeerTube >= 6.2**'
      parameters:
      - description: list of watched words to update
        explode: false
        in: path
        name: listId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_api_v1_watched_words_accounts__accountName__lists_post_request'
      responses:
        "204":
          description: successful operation
      security:
      - OAuth2:
        - admin
        - moderator
      summary: Update server watched words
      tags:
      - Watched Words
components:
  callbacks:
    searchIndex:
      https://search.example.org/api/v1/search/videos:
        post:
          responses:
            "200":
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/VideoListResponse'
              description: successful operation
          summary: "third-party search index MAY be used instead of the local index,\
            \ if enabled by the instance admin. see `searchTarget`"
  parameters:
    start:
      description: Offset used to paginate results
      explode: true
      in: query
      name: start
      required: false
      schema:
        minimum: 0
        type: integer
      style: form
    count:
      description: Number of items to return
      explode: true
      in: query
      name: count
      required: false
      schema:
        default: 15
        maximum: 100
        minimum: 1
        type: integer
      style: form
    sort:
      description: Sort column
      explode: true
      in: query
      name: sort
      required: false
      schema:
        example: -createdAt
        type: string
      style: form
    search:
      description: "Plain text search, applied to various parts of the model depending\
        \ on endpoint"
      explode: true
      in: query
      name: search
      required: false
      schema:
        type: string
      style: form
    searchTarget:
      description: |
        If the administrator enabled search index support, you can override the default search target.

        **Warning**: If you choose to make an index search, PeerTube will get results from a third party service. It means the instance may not yet know the objects you fetched. If you want to load video/channel information:
          * If the current user has the ability to make a remote URI search (this information is available in the config endpoint),
          then reuse the search API to make a search using the object URI so PeerTube instance fetches the remote object and fill its database.
          After that, you can use the classic REST API endpoints to fetch the complete object or interact with it
          * If the current user doesn't have the ability to make a remote URI search, then redirect the user on the origin instance or fetch
          the data from the origin instance API
      explode: true
      in: query
      name: searchTarget
      required: false
      schema:
        enum:
        - local
        - search-index
        type: string
      style: form
    videosSort:
      explode: true
      in: query
      name: sort
      required: false
      schema:
        description: |
          Sort videos by criteria (prefixing with `-` means `DESC` order):
            * `hot` - Adaptation of Reddit "hot" algorithm taking into account video views, likes, dislikes and comments and publication date
            * `best` - Same than `hot`, but also takes into account user video history
            * `trending` - Sort videos by recent views ("recent" is defined by the admin)
            * `views` - Sort videos using their `views` counter
            * `publishedAt` - Sort by video publication date (when it became publicly available)
        enum:
        - name
        - -duration
        - -createdAt
        - -publishedAt
        - -views
        - -likes
        - -trending
        - -hot
        - -best
        type: string
      style: form
    videosSearchSort:
      description: |
        Sort videos by criteria (prefixing with `-` means `DESC` order):
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - name
        - -duration
        - -createdAt
        - -publishedAt
        - -views
        - -likes
        - -match
        type: string
      style: form
    commentsSort:
      description: Sort comments by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - -createdAt
        - -totalReplies
        type: string
      style: form
    blacklistsSort:
      description: Sort blocklists by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - -id
        - name
        - -duration
        - -views
        - -likes
        - -dislikes
        - -uuid
        - -createdAt
        type: string
      style: form
    usersSearch:
      description: Plain text search that will match with user usernames or emails
      explode: true
      in: query
      name: search
      required: false
      schema:
        type: string
      style: form
    usersBlocked:
      description: Filter results down to (un)banned users
      explode: true
      in: query
      name: blocked
      required: false
      schema:
        type: boolean
      style: form
    usersSort:
      description: Sort users by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - -id
        - -username
        - -createdAt
        type: string
      style: form
    abusesSort:
      description: Sort abuses by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - -id
        - -createdAt
        - -state
        type: string
      style: form
    videoRedundanciesSort:
      description: Sort abuses by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - name
        type: string
      style: form
    followersSort:
      description: Sort followers by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - createdAt
        type: string
      style: form
    registrationTokenSort:
      description: Sort registration tokens by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - createdAt
        type: string
      style: form
    runnerSort:
      description: Sort runners by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - createdAt
        type: string
      style: form
    runnerJobSort:
      description: Sort runner jobs by criteria
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - updatedAt
        - createdAt
        - priority
        - state
        - progress
        type: string
      style: form
    name:
      description: The username or handle of the account
      explode: false
      in: path
      name: name
      required: true
      schema:
        example: chocobozzz | chocobozzz@example.org
        type: string
      style: simple
    id:
      description: Entity id
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/id'
      style: simple
    userId:
      description: User id
      explode: false
      in: path
      name: userId
      required: true
      schema:
        $ref: '#/components/schemas/id'
      style: simple
    registrationId:
      description: Registration ID
      explode: false
      in: path
      name: registrationId
      required: true
      schema:
        $ref: '#/components/schemas/id'
      style: simple
    idOrUUID:
      description: "The object id, uuid or short uuid"
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
      style: simple
    playlistId:
      description: Playlist id
      explode: false
      in: path
      name: playlistId
      required: true
      schema:
        $ref: '#/components/schemas/VideoPlaylist/properties/id'
      style: simple
    playlistElementId:
      description: Playlist element id
      explode: false
      in: path
      name: playlistElementId
      required: true
      schema:
        $ref: '#/components/schemas/id'
      style: simple
    abuseId:
      description: Abuse id
      explode: false
      in: path
      name: abuseId
      required: true
      schema:
        $ref: '#/components/schemas/Abuse/properties/id'
      style: simple
    abuseMessageId:
      description: Abuse message id
      explode: false
      in: path
      name: abuseMessageId
      required: true
      schema:
        $ref: '#/components/schemas/AbuseMessage/properties/id'
      style: simple
    captionLanguage:
      description: The caption language
      explode: false
      in: path
      name: captionLanguage
      required: true
      schema:
        $ref: '#/components/schemas/VideoLanguageSet'
      style: simple
    channelHandle:
      description: The video channel handle
      explode: false
      in: path
      name: channelHandle
      required: true
      schema:
        example: my_username | my_username@example.com
        type: string
      style: simple
    channelSyncId:
      description: Channel Sync id
      explode: false
      in: path
      name: channelSyncId
      required: true
      schema:
        $ref: '#/components/schemas/Abuse/properties/id'
      style: simple
    subscriptionHandle:
      description: The subscription handle
      explode: false
      in: path
      name: subscriptionHandle
      required: true
      schema:
        example: my_username | my_username@example.com
        type: string
      style: simple
    threadId:
      description: The thread id (root comment id)
      explode: false
      in: path
      name: threadId
      required: true
      schema:
        type: integer
      style: simple
    commentId:
      description: The comment id
      explode: false
      in: path
      name: commentId
      required: true
      schema:
        $ref: '#/components/schemas/VideoComment/properties/id'
      style: simple
    isLive:
      description: whether or not the video is a live
      explode: true
      in: query
      name: isLive
      required: false
      schema:
        type: boolean
      style: form
    categoryOneOf:
      description: "category id of the video (see [/videos/categories](#operation/getCategories))"
      explode: true
      in: query
      name: categoryOneOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_categoryOneOf_parameter'
      style: form
    tagsOneOf:
      description: tag(s) of the video
      explode: true
      in: query
      name: tagsOneOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_tagsOneOf_parameter'
      style: form
    tagsAllOf:
      description: "tag(s) of the video, where all should be present in the video"
      explode: true
      in: query
      name: tagsAllOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
      style: form
    languageOneOf:
      description: "language id of the video (see [/videos/languages](#operation/getLanguages)).\
        \ Use `_unknown` to filter on videos that don't have a video language"
      explode: true
      in: query
      name: languageOneOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_languageOneOf_parameter'
      style: form
    autoTagOneOfVideo:
      description: '**PeerTube >= 6.2** **Admins and moderators only** filter on videos
        that contain one of these automatic tags'
      explode: true
      in: query
      name: autoTagOneOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
      style: form
    autoTagOneOfComment:
      description: '**PeerTube >= 6.2** filter on comments that contain one of these
        automatic tags'
      explode: true
      in: query
      name: autoTagOneOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_tagsAllOf_parameter'
      style: form
    isHeldForReview:
      description: only display comments that are held for review
      explode: true
      in: query
      name: isHeldForReview
      required: false
      schema:
        type: boolean
      style: form
    licenceOneOf:
      description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
      explode: true
      in: query
      name: licenceOneOf
      required: false
      schema:
        $ref: '#/components/schemas/getAccountVideos_licenceOneOf_parameter'
      style: form
    skipCount:
      description: if you don't need the `total` in the response
      explode: true
      in: query
      name: skipCount
      required: false
      schema:
        default: "false"
        enum:
        - "true"
        - "false"
        type: string
      style: form
    nsfw:
      description: "whether to include nsfw videos, if any"
      explode: true
      in: query
      name: nsfw
      required: false
      schema:
        enum:
        - "true"
        - "false"
        type: string
      style: form
    isLocal:
      description: '**PeerTube >= 4.0** Display only local or remote objects'
      explode: true
      in: query
      name: isLocal
      required: false
      schema:
        type: boolean
      style: form
    hasHLSFiles:
      description: '**PeerTube >= 4.0** Display only videos that have HLS files'
      explode: true
      in: query
      name: hasHLSFiles
      required: false
      schema:
        type: boolean
      style: form
    hasWebVideoFiles:
      description: '**PeerTube >= 6.0** Display only videos that have Web Video files'
      explode: true
      in: query
      name: hasWebVideoFiles
      required: false
      schema:
        type: boolean
      style: form
    privacyOneOf:
      description: '**PeerTube >= 4.0** Display only videos in this specific privacy/privacies'
      explode: true
      in: query
      name: privacyOneOf
      required: false
      schema:
        $ref: '#/components/schemas/VideoPrivacySet'
      style: form
    excludeAlreadyWatched:
      description: Whether or not to exclude videos that are in the user's video history
      explode: true
      in: query
      name: excludeAlreadyWatched
      required: false
      schema:
        type: boolean
      style: form
    uuids:
      description: Find elements with specific UUIDs
      explode: true
      in: query
      name: uuids
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    host:
      description: Find elements owned by this host
      explode: true
      in: query
      name: host
      required: false
      schema:
        type: string
      style: form
    handles:
      description: Find elements with these handles
      explode: true
      in: query
      name: handles
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    include:
      description: |
        **PeerTube >= 4.0** Include additional videos in results (can be combined using bitwise or operator)
        - `0` NONE
        - `1` NOT_PUBLISHED_STATE
        - `2` BLACKLISTED
        - `4` BLOCKED_OWNER
        - `8` FILES
        - `16` CAPTIONS
        - `32` VIDEO SOURCE
      explode: true
      in: query
      name: include
      required: false
      schema:
        enum:
        - 0
        - 1
        - 2
        - 4
        - 8
        - 16
        - 32
        type: integer
      style: form
    subscriptionsUris:
      description: list of uris to check if each is part of the user subscriptions
      explode: true
      in: query
      name: uris
      required: true
      schema:
        items:
          format: uri
          type: string
        type: array
      style: form
    npmName:
      description: name of the plugin/theme on npmjs.com or in its package.json
      explode: false
      in: path
      name: npmName
      required: true
      schema:
        example: peertube-plugin-auth-ldap
        type: string
      style: simple
    jobType:
      description: job type
      explode: true
      in: query
      name: jobType
      required: false
      schema:
        enum:
        - activitypub-follow
        - activitypub-http-broadcast
        - activitypub-http-fetcher
        - activitypub-http-unicast
        - email
        - video-transcoding
        - video-file-import
        - video-import
        - videos-views-stats
        - activitypub-refresher
        - video-redundancy
        - video-live-ending
        - video-channel-import
        type: string
      style: form
    followState:
      explode: true
      in: query
      name: state
      required: false
      schema:
        enum:
        - pending
        - accepted
        type: string
      style: form
    actorType:
      explode: true
      in: query
      name: actorType
      required: false
      schema:
        enum:
        - Person
        - Application
        - Group
        - Service
        - Organization
        type: string
      style: form
    staticFilename:
      description: Filename
      explode: false
      in: path
      name: filename
      required: true
      schema:
        type: string
      style: simple
    videoFileToken:
      description: "Video file token [generated](#operation/requestVideoToken) by\
        \ PeerTube so you don't need to provide an OAuth token in the request header."
      explode: true
      in: query
      name: videoFileToken
      required: false
      schema:
        type: string
      style: form
    reinjectVideoFileToken:
      description: Ask the server to reinject videoFileToken in URLs in m3u8 playlist
      explode: true
      in: query
      name: reinjectVideoFileToken
      required: false
      schema:
        type: boolean
      style: form
    videoPlaylistType:
      explode: true
      in: query
      name: playlistType
      required: false
      schema:
        $ref: '#/components/schemas/VideoPlaylistTypeSet'
      style: form
    registrationTokenId:
      explode: false
      in: path
      name: registrationTokenId
      required: true
      schema:
        type: integer
      style: simple
    runnerId:
      explode: false
      in: path
      name: runnerId
      required: true
      schema:
        type: integer
      style: simple
    jobUUID:
      explode: false
      in: path
      name: jobUUID
      required: true
      schema:
        $ref: '#/components/schemas/UUIDv4'
      style: simple
    videoPasswordId:
      description: The video password id
      explode: false
      in: path
      name: videoPasswordId
      required: true
      schema:
        $ref: '#/components/schemas/id'
      style: simple
    onLocalVideo:
      description: Display only objects of local or remote videos
      explode: true
      in: query
      name: onLocalVideo
      required: false
      schema:
        type: boolean
      style: form
    videoChannelId:
      description: Limit results on this specific video channel
      explode: true
      in: query
      name: videoChannelId
      required: false
      schema:
        type: integer
      style: form
    videoId:
      description: Limit results on this specific video
      explode: true
      in: query
      name: videoId
      required: false
      schema:
        type: integer
      style: form
    searchVideoForComments:
      description: Filter comments by searching on the video
      explode: true
      in: query
      name: searchVideo
      required: false
      schema:
        type: string
      style: form
    searchAccountForComments:
      description: Filter comments by searching on the account
      explode: true
      in: query
      name: searchAccount
      required: false
      schema:
        type: string
      style: form
    videoPasswordHeader:
      description: Required on password protected video
      explode: false
      in: header
      name: x-peertube-video-password
      required: false
      schema:
        type: string
      style: simple
    resumableUploadInitContentLengthHeader:
      description: Number of bytes that will be uploaded in subsequent requests. Set
        this value to the size of the file you are uploading.
      explode: false
      in: header
      name: X-Upload-Content-Length
      required: true
      schema:
        example: 2469036
        type: number
      style: simple
    resumableUploadInitContentTypeHeader:
      description: "MIME type of the file that you are uploading. Depending on your\
        \ instance settings, acceptable values might vary."
      explode: false
      in: header
      name: X-Upload-Content-Type
      required: true
      schema:
        example: video/mp4
        format: mimetype
        type: string
      style: simple
    resumableUploadChunkContentRangeHeader:
      description: |
        Specifies the bytes in the file that the request is uploading.

        For example, a value of `bytes 0-262143/1000000` shows that the request is sending the first
        262144 bytes (256 x 1024) in a 2,469,036 byte file.
      explode: false
      in: header
      name: Content-Range
      required: true
      schema:
        example: bytes 0-262143/2469036
        type: string
      style: simple
    resumableUploadChunkContentLengthHeader:
      description: |
        Size of the chunk that the request is sending.

        Remember that larger chunks are more efficient. PeerTube's web client uses chunks varying from
        1048576 bytes (~1MB) and increases or reduces size depending on connection health.
      explode: false
      in: header
      name: Content-Length
      required: true
      schema:
        example: 262144
        type: number
      style: simple
    resumableUploadId:
      description: |
        Created session id to proceed with. If you didn't send chunks in the last hour, it is
        not valid anymore and you need to initialize a new upload.
      explode: true
      in: query
      name: upload_id
      required: true
      schema:
        type: string
      style: form
  schemas:
    id:
      example: 42
      minimum: 1
      type: integer
    UUIDv4:
      example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
      format: uuid
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      type: string
    shortUUID:
      description: translation of a uuid v4 with a bigger alphabet to have a shorter
        uuid
      example: 2y84q2MQUMWPbiEcxNXMgC
      type: string
    username:
      description: "immutable name of the user, used to find or mention its actor"
      example: chocobozzz
      maxLength: 50
      minLength: 1
      pattern: "/^[a-z0-9._]+$/"
      type: string
    usernameChannel:
      description: "immutable name of the channel, used to interact with its actor"
      example: framasoft_videos
      maxLength: 50
      minLength: 1
      pattern: "/^[a-zA-Z0-9\\\\-_.:]+$/"
      type: string
    password:
      format: password
      maxLength: 255
      minLength: 6
      type: string
    VideoCategorySet:
      description: "category id of the video (see [/videos/categories](#operation/getCategories))"
      example: 15
      type: integer
    VideoConstantNumber-Category:
      properties:
        id:
          description: "category id of the video (see [/videos/categories](#operation/getCategories))"
          example: 15
          type: integer
        label:
          example: Science & Technology
          type: string
    VideoLicenceSet:
      description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
      example: 2
      type: integer
    VideoConstantNumber-Licence:
      properties:
        id:
          description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
          example: 2
          type: integer
        label:
          example: Attribution - Share Alike
          type: string
    VideoLanguageSet:
      description: "language id of the video (see [/videos/languages](#operation/getLanguages))"
      example: en
      type: string
    VideoConstantString-Language:
      example:
        id: en
        label: English
      properties:
        id:
          description: "language id of the video (see [/videos/languages](#operation/getLanguages))"
          example: en
          type: string
        label:
          example: English
          type: string
    VideoPlaylistPrivacySet:
      description: "Video playlist privacy policy (see [/video-playlists/privacies](#operation/getPlaylistPrivacyPolicies))"
      enum:
      - 1
      - 2
      - 3
      type: integer
    VideoPlaylistPrivacyConstant:
      example:
        id: 6
        label: label
      properties:
        id:
          $ref: '#/components/schemas/VideoPlaylistPrivacySet'
        label:
          type: string
    VideoPlaylistTypeSet:
      description: "The video playlist type (Regular = `1`, Watch Later = `2`)"
      enum:
      - 1
      - 2
      type: integer
    VideoPlaylistTypeConstant:
      example:
        id: 1
        label: label
      properties:
        id:
          $ref: '#/components/schemas/VideoPlaylistTypeSet'
        label:
          type: string
    VideoPrivacySet:
      description: "privacy id of the video (see [/videos/privacies](#operation/getVideoPrivacyPolicies))"
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
    VideoPrivacyConstant:
      properties:
        id:
          $ref: '#/components/schemas/VideoPrivacySet'
        label:
          type: string
    VideoCommentsPolicySet:
      description: "Comments policy of the video (Enabled = `1`, Disabled = `2`, Requires\
        \ Approval = `3`)"
      enum:
      - 1
      - 2
      - 3
      type: integer
    VideoCommentsPolicyConstant:
      example:
        id: 6
        label: label
      properties:
        id:
          $ref: '#/components/schemas/VideoCommentsPolicySet'
        label:
          type: string
    BlockStatus:
      example:
        hosts:
          key:
            blockedByServer: true
            blockedByUser: true
        accounts:
          key:
            blockedByServer: true
            blockedByUser: true
      properties:
        accounts:
          additionalProperties:
            $ref: '#/components/schemas/BlockStatus_accounts_value'
          type: object
        hosts:
          additionalProperties:
            $ref: '#/components/schemas/BlockStatus_hosts_value'
          type: object
    NSFWPolicy:
      enum:
      - display
      - blur
      - do_not_list
      type: string
    UserRole:
      description: "The user role (Admin = `0`, Moderator = `1`, User = `2`)"
      enum:
      - 0
      - 1
      - 2
      example: 2
      type: integer
    UserAdminFlags:
      description: "Admin flags for the user (None = `0`, Bypass video blocklist =\
        \ `1`)"
      enum:
      - 0
      - 1
      example: 1
      type: integer
    LiveVideoLatencyMode:
      description: "The live latency mode (Default = `1`, High latency = `2`, Small\
        \ Latency = `3`)"
      enum:
      - 1
      - 2
      - 3
      type: integer
    LiveVideoReplaySettings:
      example:
        privacy: 0
      properties:
        privacy:
          $ref: '#/components/schemas/VideoPrivacySet'
      type: object
    VideoStateConstant:
      properties:
        id:
          description: |
            The video state:
            - `1`: Published
            - `2`: To transcode
            - `3`: To import
            - `4`: Waiting for live stream
            - `5`: Live ended
            - `6`: To move to an external storage (object storage...)
            - `7`: Transcoding failed
            - `8`: Moving to an external storage failed
            - `9`: To edit using studio edition feature
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          type: integer
        label:
          type: string
    UserExportState:
      description: |
        The user export state:
          - `1`: Pending
          - `2`: Processing
          - `3`: Completed
          - `4`: Errored
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
    UserImportState:
      description: |
        The user import state:
          - `1`: Pending
          - `2`: Processing
          - `3`: Completed
          - `4`: Errored
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
    AbuseStateSet:
      description: "The abuse state (Pending = `1`, Rejected = `2`, Accepted = `3`)"
      enum:
      - 1
      - 2
      - 3
      type: integer
    AbuseStateConstant:
      example:
        id: 0
        label: label
      properties:
        id:
          $ref: '#/components/schemas/AbuseStateSet'
        label:
          type: string
    AbusePredefinedReasons:
      example:
      - spamOrMisleading
      items:
        enum:
        - violentOrAbusive
        - hatefulOrAbusive
        - spamOrMisleading
        - privacy
        - rights
        - serverRules
        - thumbnails
        - captions
        type: string
      type: array
    VideoResolutionSet:
      description: |
        Video resolution (`0`, `240`, `360`, `720`, `1080`, `1440` or `2160`)

        `0` is used as a special value for stillimage videos dedicated to audio, a.k.a. audio-only videos.
      example: 240
      type: integer
    VideoResolutionConstant:
      description: resolutions and their labels for the video
      example:
        id: 240
        label: 240p
      properties:
        id:
          description: |
            Video resolution (`0`, `240`, `360`, `720`, `1080`, `1440` or `2160`)

            `0` is used as a special value for stillimage videos dedicated to audio, a.k.a. audio-only videos.
          example: 240
          type: integer
        label:
          example: 240p
          type: string
    VideoScheduledUpdate:
      example:
        privacy: null
        updateAt: 2000-01-23T04:56:07.000+00:00
      properties:
        privacy:
          $ref: '#/components/schemas/VideoPrivacySet'
        updateAt:
          description: When to update the video
          format: date-time
          type: string
      required:
      - updateAt
    AccountSummary:
      example:
        displayName: displayName
        name: name
        host: host
        id: 0
        url: http://example.com/aeiou
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: integer
        name:
          type: string
        displayName:
          type: string
        url:
          format: url
          type: string
        host:
          format: hostname
          type: string
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
    VideoChannelSummary:
      example:
        displayName: displayName
        name: name
        host: host
        id: 42
        url: http://example.com/aeiou
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        name:
          type: string
        displayName:
          type: string
        url:
          format: url
          type: string
        host:
          format: hostname
          type: string
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
    PlaylistElement:
      properties:
        position:
          type: integer
        startTimestamp:
          format: seconds
          type: integer
        stopTimestamp:
          format: seconds
          type: integer
        video:
          allOf:
          - $ref: '#/components/schemas/Video'
          nullable: true
    VideoFile:
      example:
        fileDownloadUrl: http://example.com/aeiou
        torrentUrl: http://example.com/aeiou
        magnetUri: https://openapi-generator.tech
        metadataUrl: http://example.com/aeiou
        size: 1
        torrentDownloadUrl: http://example.com/aeiou
        fps: 5.962133916683182
        width: 5.637376656633329
        fileUrl: http://example.com/aeiou
        id: 42
        resolution:
          id: 240
          label: 240p
        height: 2.3021358869347655
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        magnetUri:
          description: magnet URI allowing to resolve the video via BitTorrent without
            a metainfo file
          format: uri
          pattern: "/magnet:\\?xt=urn:[a-z0-9]+:[a-z0-9]{32}/i"
          type: string
        resolution:
          $ref: '#/components/schemas/VideoResolutionConstant'
        size:
          description: Video file size in bytes
          type: integer
        torrentUrl:
          description: Direct URL of the torrent file
          format: url
          type: string
        torrentDownloadUrl:
          description: URL endpoint that transfers the torrent file as an attachment
            (so that the browser opens a download dialog)
          format: url
          type: string
        fileUrl:
          description: Direct URL of the video
          format: url
          type: string
        fileDownloadUrl:
          description: URL endpoint that transfers the video file as an attachment
            (so that the browser opens a download dialog)
          format: url
          type: string
        fps:
          description: Frames per second of the video file
          type: number
        width:
          description: '**PeerTube >= 6.1** Video stream width'
          type: number
        height:
          description: '**PeerTube >= 6.1** Video stream height'
          type: number
        metadataUrl:
          description: URL dereferencing the output of ffprobe on the file
          format: url
          type: string
      readOnly: true
    VideoStreamingPlaylists:
      allOf:
      - properties:
          id:
            $ref: '#/components/schemas/id'
          type:
            description: |
              Playlist type:
              - `1`: HLS
            enum:
            - 1
            type: integer
        type: object
      - $ref: '#/components/schemas/VideoStreamingPlaylists-HLS'
      example:
        playlistUrl: http://example.com/aeiou
        files:
        - fileDownloadUrl: http://example.com/aeiou
          torrentUrl: http://example.com/aeiou
          magnetUri: https://openapi-generator.tech
          metadataUrl: http://example.com/aeiou
          size: 1
          torrentDownloadUrl: http://example.com/aeiou
          fps: 5.962133916683182
          width: 5.637376656633329
          fileUrl: http://example.com/aeiou
          id: 42
          resolution:
            id: 240
            label: 240p
          height: 2.3021358869347655
        - fileDownloadUrl: http://example.com/aeiou
          torrentUrl: http://example.com/aeiou
          magnetUri: https://openapi-generator.tech
          metadataUrl: http://example.com/aeiou
          size: 1
          torrentDownloadUrl: http://example.com/aeiou
          fps: 5.962133916683182
          width: 5.637376656633329
          fileUrl: http://example.com/aeiou
          id: 42
          resolution:
            id: 240
            label: 240p
          height: 2.3021358869347655
        id: 42
        redundancies:
        - baseUrl: http://example.com/aeiou
        - baseUrl: http://example.com/aeiou
        type: 7
        segmentsSha256Url: http://example.com/aeiou
    VideoStreamingPlaylists-HLS:
      properties:
        playlistUrl:
          format: url
          type: string
        segmentsSha256Url:
          format: url
          type: string
        files:
          description: |
            Video files associated to this playlist.

            The difference with the root `files` property is that these files are fragmented, so they can be used in this streaming playlist (HLS, etc.)
          items:
            $ref: '#/components/schemas/VideoFile'
          type: array
        redundancies:
          items:
            $ref: '#/components/schemas/VideoStreamingPlaylists_HLS_redundancies_inner'
          type: array
    VideoInfo:
      example:
        name: "{}"
        id: 42
        uuid: "{}"
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        uuid:
          $ref: '#/components/schemas/Video/properties/uuid'
        name:
          $ref: '#/components/schemas/Video/properties/name'
    Video:
      example:
        scheduledUpdate: ""
        truncatedDescription: |
          **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
          **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
        waitTranscoding: true
        channel:
          displayName: displayName
          name: name
          host: host
          id: 42
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
        userHistory:
          currentTime: 6
        privacy: ""
        language: ""
        aspectRatio: 1.778
        previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
        blacklistedReason: blacklistedReason
        uuid: ""
        duration: 1419
        createdAt: 2017-10-01T10:52:46.396Z
        originallyPublishedAt: 2010-10-01T10:52:46.396Z
        isLive: true
        id: ""
        state: ""
        embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
        views: 1337
        updatedAt: 2021-05-04T08:01:01.502Z
        likes: 42
        licence: ""
        publishedAt: 2018-10-01T10:52:46.396Z
        nsfw: true
        shortUUID: ""
        dislikes: 7
        isLocal: true
        blacklisted: true
        name: What is PeerTube?
        thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
        category: ""
        account:
          displayName: displayName
          name: name
          host: host
          id: 0
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          description: object id for the video
        uuid:
          allOf:
          - $ref: '#/components/schemas/UUIDv4'
          description: "universal identifier for the video, that can be used across\
            \ instances"
        shortUUID:
          allOf:
          - $ref: '#/components/schemas/shortUUID'
        isLive:
          type: boolean
        createdAt:
          description: time at which the video object was first drafted
          example: 2017-10-01T10:52:46.396Z
          format: date-time
          type: string
        publishedAt:
          description: time at which the video was marked as ready for playback (with
            restrictions depending on `privacy`). Usually set after a `state` evolution.
          example: 2018-10-01T10:52:46.396Z
          format: date-time
          type: string
        updatedAt:
          description: last time the video's metadata was modified
          example: 2021-05-04T08:01:01.502Z
          format: date-time
          type: string
        originallyPublishedAt:
          description: "used to represent a date of first publication, prior to the\
            \ practical publication date of `publishedAt`"
          example: 2010-10-01T10:52:46.396Z
          format: date-time
          nullable: true
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/VideoConstantNumber-Category'
          description: category in which the video is classified
        licence:
          allOf:
          - $ref: '#/components/schemas/VideoConstantNumber-Licence'
          description: licence under which the video is distributed
        language:
          allOf:
          - $ref: '#/components/schemas/VideoConstantString-Language'
          description: main language used in the video
        privacy:
          allOf:
          - $ref: '#/components/schemas/VideoPrivacyConstant'
          description: privacy policy used to distribute the video
        truncatedDescription:
          description: |
            truncated description of the video, written in Markdown.
          example: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          maxLength: 250
          minLength: 3
          nullable: true
          type: string
        duration:
          description: duration of the video in seconds
          example: 1419
          format: seconds
          type: integer
        aspectRatio:
          description: '**PeerTube >= 6.1** Aspect ratio of the video stream'
          example: 1.778
          format: float
          nullable: true
          type: number
        isLocal:
          type: boolean
        name:
          description: title of the video
          example: What is PeerTube?
          maxLength: 120
          minLength: 3
          type: string
        thumbnailPath:
          example: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          type: string
        previewPath:
          example: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          type: string
        embedPath:
          example: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          type: string
        views:
          example: 1337
          type: integer
        likes:
          example: 42
          type: integer
        dislikes:
          example: 7
          type: integer
        nsfw:
          type: boolean
        waitTranscoding:
          nullable: true
          type: boolean
        state:
          allOf:
          - $ref: '#/components/schemas/VideoStateConstant'
          description: represents the internal state of the video processing within
            the PeerTube instance
        scheduledUpdate:
          allOf:
          - $ref: '#/components/schemas/VideoScheduledUpdate'
          nullable: true
        blacklisted:
          nullable: true
          type: boolean
        blacklistedReason:
          nullable: true
          type: string
        account:
          $ref: '#/components/schemas/AccountSummary'
        channel:
          $ref: '#/components/schemas/VideoChannelSummary'
        userHistory:
          $ref: '#/components/schemas/Video_userHistory'
    VideoDetails:
      allOf:
      - $ref: '#/components/schemas/Video'
      - properties:
          viewers:
            description: "If the video is a live, you have the amount of current viewers"
            type: integer
          description:
            description: |
              full description of the video, written in Markdown.
            example: "\t\"**[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\\\
              r\\n\\r\\n\n **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\\\
              r\\n*A decentralized video hosting network,\n based on free/libre software!*\\\
              r\\n\\r\\n**Animation Produced by:** [LILA](https://libreart.info) -\
              \ [ZeMarmot Team](https://film.zemarmot.net)\\r\\n\n *Directed by* Aryeom\\\
              r\\n*Assistant* Jehan\\r\\n**Licence**: [CC-By-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)\\\
              r\\n\\r\\n\n **Sponsored by** [Framasoft](https://framasoft.org)\\r\\\
              n\\r\\n**Music**: [Red Step Forward](http://play.dogmazic.net/song.php?song_id=52491)\
              \ - CC-By Ken Bushima\\r\\n\\r\\n\n **Movie Clip**: [Caminades 3: Llamigos](http://www.caminandes.com/)\
              \ CC-By Blender Institute\\r\\n\\r\\n**Video sources**: https://gitlab.gnome.org/Jehan/what-is-peertube/\"\
              \n"
            maxLength: 1000
            minLength: 3
            nullable: true
            type: string
          support:
            description: A text tell the audience how to support the video creator
            example: Please support our work on https://soutenir.framasoft.org/en/
              <3
            maxLength: 1000
            minLength: 3
            nullable: true
            type: string
          channel:
            $ref: '#/components/schemas/VideoChannel'
          account:
            $ref: '#/components/schemas/Account'
          tags:
            example:
            - flowers
            - gardening
            items:
              maxLength: 30
              minLength: 2
              type: string
            maxItems: 5
            minItems: 1
            type: array
          commentsEnabled:
            deprecated: true
            description: "Deprecated in 6.2, use commentsPolicy instead"
            type: boolean
          commentsPolicy:
            $ref: '#/components/schemas/VideoCommentsPolicyConstant'
          downloadEnabled:
            type: boolean
          inputFileUpdatedAt:
            description: Latest input file update. Null if the file has never been
              replaced since the original upload
            format: date-time
            nullable: true
            type: string
          trackerUrls:
            example:
            - https://peertube2.cpy.re/tracker/announce
            - wss://peertube2.cpy.re/tracker/socket
            items:
              format: url
              type: string
            type: array
          files:
            description: |
              Web compatible video files. If Web Video is disabled on the server:

              - field will be empty
              - video files will be found in `streamingPlaylists[].files` field
            items:
              $ref: '#/components/schemas/VideoFile'
            type: array
          streamingPlaylists:
            description: |
              HLS playlists/manifest files. If HLS is disabled on the server:

              - field will be empty
              - video files will be found in `files` field
            items:
              $ref: '#/components/schemas/VideoStreamingPlaylists'
            type: array
        type: object
      example:
        scheduledUpdate: ""
        truncatedDescription: |
          **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
          **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
        commentsEnabled: true
        downloadEnabled: true
        waitTranscoding: true
        commentsPolicy:
          id: 6
          label: label
        channel:
          displayName: Videos of Framasoft
          description: Videos made with <3 by Framasoft
          hostRedundancyAllowed: true
          ownerAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          followingCount: 0
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          url: http://example.com/aeiou
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          support: Please support our work on https://soutenir.framasoft.org/en/ <3
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        userHistory:
          currentTime: 6
        privacy: ""
        description: "\t\"**[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\\\
          r\\n\\r\\n\n **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\\\
          r\\n*A decentralized video hosting network,\n based on free/libre software!*\\\
          r\\n\\r\\n**Animation Produced by:** [LILA](https://libreart.info) - [ZeMarmot\
          \ Team](https://film.zemarmot.net)\\r\\n\n *Directed by* Aryeom\\r\\n*Assistant*\
          \ Jehan\\r\\n**Licence**: [CC-By-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)\\\
          r\\n\\r\\n\n **Sponsored by** [Framasoft](https://framasoft.org)\\r\\n\\\
          r\\n**Music**: [Red Step Forward](http://play.dogmazic.net/song.php?song_id=52491)\
          \ - CC-By Ken Bushima\\r\\n\\r\\n\n **Movie Clip**: [Caminades 3: Llamigos](http://www.caminandes.com/)\
          \ CC-By Blender Institute\\r\\n\\r\\n**Video sources**: https://gitlab.gnome.org/Jehan/what-is-peertube/\"\
          \n"
        language: ""
        aspectRatio: 1.778
        previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
        blacklistedReason: blacklistedReason
        uuid: ""
        duration: 1419
        createdAt: 2017-10-01T10:52:46.396Z
        originallyPublishedAt: 2010-10-01T10:52:46.396Z
        isLive: true
        id: ""
        state: ""
        streamingPlaylists:
        - playlistUrl: http://example.com/aeiou
          files:
          - fileDownloadUrl: http://example.com/aeiou
            torrentUrl: http://example.com/aeiou
            magnetUri: https://openapi-generator.tech
            metadataUrl: http://example.com/aeiou
            size: 1
            torrentDownloadUrl: http://example.com/aeiou
            fps: 5.962133916683182
            width: 5.637376656633329
            fileUrl: http://example.com/aeiou
            id: 42
            resolution:
              id: 240
              label: 240p
            height: 2.3021358869347655
          - fileDownloadUrl: http://example.com/aeiou
            torrentUrl: http://example.com/aeiou
            magnetUri: https://openapi-generator.tech
            metadataUrl: http://example.com/aeiou
            size: 1
            torrentDownloadUrl: http://example.com/aeiou
            fps: 5.962133916683182
            width: 5.637376656633329
            fileUrl: http://example.com/aeiou
            id: 42
            resolution:
              id: 240
              label: 240p
            height: 2.3021358869347655
          id: 42
          redundancies:
          - baseUrl: http://example.com/aeiou
          - baseUrl: http://example.com/aeiou
          type: 7
          segmentsSha256Url: http://example.com/aeiou
        - playlistUrl: http://example.com/aeiou
          files:
          - fileDownloadUrl: http://example.com/aeiou
            torrentUrl: http://example.com/aeiou
            magnetUri: https://openapi-generator.tech
            metadataUrl: http://example.com/aeiou
            size: 1
            torrentDownloadUrl: http://example.com/aeiou
            fps: 5.962133916683182
            width: 5.637376656633329
            fileUrl: http://example.com/aeiou
            id: 42
            resolution:
              id: 240
              label: 240p
            height: 2.3021358869347655
          - fileDownloadUrl: http://example.com/aeiou
            torrentUrl: http://example.com/aeiou
            magnetUri: https://openapi-generator.tech
            metadataUrl: http://example.com/aeiou
            size: 1
            torrentDownloadUrl: http://example.com/aeiou
            fps: 5.962133916683182
            width: 5.637376656633329
            fileUrl: http://example.com/aeiou
            id: 42
            resolution:
              id: 240
              label: 240p
            height: 2.3021358869347655
          id: 42
          redundancies:
          - baseUrl: http://example.com/aeiou
          - baseUrl: http://example.com/aeiou
          type: 7
          segmentsSha256Url: http://example.com/aeiou
        inputFileUpdatedAt: 2000-01-23T04:56:07.000+00:00
        embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
        views: 1337
        updatedAt: 2021-05-04T08:01:01.502Z
        likes: 42
        licence: ""
        publishedAt: 2018-10-01T10:52:46.396Z
        nsfw: true
        trackerUrls:
        - https://peertube2.cpy.re/tracker/announce
        - wss://peertube2.cpy.re/tracker/socket
        shortUUID: ""
        dislikes: 7
        isLocal: true
        tags:
        - flowers
        - gardening
        blacklisted: true
        viewers: 0
        name: What is PeerTube?
        thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
        files:
        - fileDownloadUrl: http://example.com/aeiou
          torrentUrl: http://example.com/aeiou
          magnetUri: https://openapi-generator.tech
          metadataUrl: http://example.com/aeiou
          size: 1
          torrentDownloadUrl: http://example.com/aeiou
          fps: 5.962133916683182
          width: 5.637376656633329
          fileUrl: http://example.com/aeiou
          id: 42
          resolution:
            id: 240
            label: 240p
          height: 2.3021358869347655
        - fileDownloadUrl: http://example.com/aeiou
          torrentUrl: http://example.com/aeiou
          magnetUri: https://openapi-generator.tech
          metadataUrl: http://example.com/aeiou
          size: 1
          torrentDownloadUrl: http://example.com/aeiou
          fps: 5.962133916683182
          width: 5.637376656633329
          fileUrl: http://example.com/aeiou
          id: 42
          resolution:
            id: 240
            label: 240p
          height: 2.3021358869347655
        category: ""
        support: Please support our work on https://soutenir.framasoft.org/en/ <3
        account:
          displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
    FileRedundancyInformation:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        size: 0
        fileUrl: http://example.com/aeiou
        expiresOn: 2000-01-23T04:56:07.000+00:00
        id: 42
        strategy: manual
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        fileUrl:
          format: url
          type: string
        strategy:
          enum:
          - manual
          - most-views
          - trending
          - recently-added
          type: string
        size:
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        expiresOn:
          format: date-time
          type: string
    VideoRedundancy:
      example:
        name: name
        id: 42
        redundancies:
          files:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            size: 0
            fileUrl: http://example.com/aeiou
            expiresOn: 2000-01-23T04:56:07.000+00:00
            id: 42
            strategy: manual
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            size: 0
            fileUrl: http://example.com/aeiou
            expiresOn: 2000-01-23T04:56:07.000+00:00
            id: 42
            strategy: manual
            updatedAt: 2000-01-23T04:56:07.000+00:00
          streamingPlaylists:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            size: 0
            fileUrl: http://example.com/aeiou
            expiresOn: 2000-01-23T04:56:07.000+00:00
            id: 42
            strategy: manual
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            size: 0
            fileUrl: http://example.com/aeiou
            expiresOn: 2000-01-23T04:56:07.000+00:00
            id: 42
            strategy: manual
            updatedAt: 2000-01-23T04:56:07.000+00:00
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        url: http://example.com/aeiou
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        name:
          type: string
        url:
          format: url
          type: string
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        redundancies:
          $ref: '#/components/schemas/VideoRedundancy_redundancies'
    CommentAutoTagPolicies:
      example:
        review:
        - review
        - review
      properties:
        review:
          description: Auto tags that automatically set the comment in review state
          items:
            type: string
          type: array
    AutomaticTagAvailable:
      example:
        available:
        - name: name
          type: core
        - name: name
          type: core
      properties:
        available:
          description: Available auto tags that can be used to filter objects or set
            a comment in review state
          items:
            $ref: '#/components/schemas/AutomaticTagAvailable_available_inner'
          type: array
    VideoImportStateConstant:
      properties:
        id:
          description: "The video import state (Pending = `1`, Success = `2`, Failed\
            \ = `3`)"
          enum:
          - 1
          - 2
          - 3
          type: integer
        label:
          example: Pending
          type: string
    VideoCreateImport:
      allOf:
      - additionalProperties: false
        nullable: true
        oneOf: []
        type: object
      - $ref: '#/components/schemas/VideoUploadRequestCommon'
      required:
      - channelId
      - name
    VideoImport:
      example:
        torrentName: torrentName
        createdAt: 2000-01-23T04:56:07.000+00:00
        magnetUri: https://openapi-generator.tech
        torrentfile: ""
        id: ""
        state: ""
        video: ""
        error: error
        targetUrl: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          readOnly: true
        targetUrl:
          description: remote URL where to find the import's source video
          example: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: url
          type: string
        magnetUri:
          description: magnet URI allowing to resolve the import's source video
          format: uri
          pattern: "/magnet:\\?xt=urn:[a-z0-9]+:[a-z0-9]{32}/i"
          type: string
        torrentfile:
          description: Torrent file containing only the video file
          format: binary
          type: string
          writeOnly: true
        torrentName:
          readOnly: true
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/VideoImportStateConstant'
          readOnly: true
        error:
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        video:
          allOf:
          - $ref: '#/components/schemas/Video'
          nullable: true
          readOnly: true
    VideoImportsList:
      example:
        total: 1
        data:
        - torrentName: torrentName
          createdAt: 2000-01-23T04:56:07.000+00:00
          magnetUri: https://openapi-generator.tech
          torrentfile: ""
          id: ""
          state: ""
          video: ""
          error: error
          targetUrl: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - torrentName: torrentName
          createdAt: 2000-01-23T04:56:07.000+00:00
          magnetUri: https://openapi-generator.tech
          torrentfile: ""
          id: ""
          state: ""
          video: ""
          error: error
          targetUrl: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - torrentName: torrentName
          createdAt: 2000-01-23T04:56:07.000+00:00
          magnetUri: https://openapi-generator.tech
          torrentfile: ""
          id: ""
          state: ""
          video: ""
          error: error
          targetUrl: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - torrentName: torrentName
          createdAt: 2000-01-23T04:56:07.000+00:00
          magnetUri: https://openapi-generator.tech
          torrentfile: ""
          id: ""
          state: ""
          video: ""
          error: error
          targetUrl: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - torrentName: torrentName
          createdAt: 2000-01-23T04:56:07.000+00:00
          magnetUri: https://openapi-generator.tech
          torrentfile: ""
          id: ""
          state: ""
          video: ""
          error: error
          targetUrl: https://framatube.org/videos/watch/9c9de5e8-0a1e-484a-b099-e80766180a6d
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoImport'
          maxItems: 100
          type: array
    Abuse:
      example:
        predefinedReasons:
        - spamOrMisleading
        reason: The video is a spam
        createdAt: 2000-01-23T04:56:07.000+00:00
        moderationComment: Decided to ban the server since it spams us regularly
        id: 42
        state:
          id: 0
          label: label
        video:
          name: "{}"
          id: 42
          uuid: "{}"
        reporterAccount:
          displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        reason:
          example: The video is a spam
          maxLength: 3000
          minLength: 2
          type: string
        predefinedReasons:
          example:
          - spamOrMisleading
          items:
            enum:
            - violentOrAbusive
            - hatefulOrAbusive
            - spamOrMisleading
            - privacy
            - rights
            - serverRules
            - thumbnails
            - captions
            type: string
          type: array
        reporterAccount:
          $ref: '#/components/schemas/Account'
        state:
          $ref: '#/components/schemas/AbuseStateConstant'
        moderationComment:
          example: Decided to ban the server since it spams us regularly
          maxLength: 3000
          minLength: 2
          type: string
        video:
          $ref: '#/components/schemas/VideoInfo'
        createdAt:
          format: date-time
          type: string
    AbuseMessage:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        byModerator: true
        id: 42
        message: message
        account:
          displayName: displayName
          name: name
          host: host
          id: 0
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        message:
          maxLength: 3000
          minLength: 2
          type: string
        byModerator:
          type: boolean
        createdAt:
          format: date-time
          type: string
        account:
          $ref: '#/components/schemas/AccountSummary'
    VideoBlacklist:
      example:
        duration: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        nsfw: true
        name: name
        description: description
        videoId: 42
        dislikes: 5
        id: 42
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        views: 6
        updatedAt: 2000-01-23T04:56:07.000+00:00
        likes: 1
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        videoId:
          example: 42
          minimum: 1
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        name:
          maxLength: 120
          minLength: 3
          type: string
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        description:
          maxLength: 10000
          minLength: 3
          type: string
        duration:
          type: integer
        views:
          type: integer
        likes:
          type: integer
        dislikes:
          type: integer
        nsfw:
          type: boolean
    VideoPlaylist:
      example:
        videoLength: 0
        displayName: displayName
        shortUUID: ""
        description: description
        privacy:
          id: 6
          label: label
        type:
          id: 1
          label: label
        ownerAccount:
          displayName: displayName
          name: name
          host: host
          id: 0
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        videoChannel:
          displayName: displayName
          name: name
          host: host
          id: 42
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
        isLocal: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        thumbnailPath: thumbnailPath
        id: 42
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        shortUUID:
          allOf:
          - $ref: '#/components/schemas/shortUUID'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        description:
          maxLength: 1000
          minLength: 3
          type: string
        displayName:
          maxLength: 120
          minLength: 1
          type: string
        isLocal:
          type: boolean
        videoLength:
          minimum: 0
          type: integer
        thumbnailPath:
          type: string
        privacy:
          $ref: '#/components/schemas/VideoPlaylistPrivacyConstant'
        type:
          $ref: '#/components/schemas/VideoPlaylistTypeConstant'
        ownerAccount:
          $ref: '#/components/schemas/AccountSummary'
        videoChannel:
          $ref: '#/components/schemas/VideoChannelSummary'
    VideoComment:
      example:
        inReplyToCommentId: ""
        heldForReview: true
        totalRepliesFromVideoAuthor: 0
        videoId: 42
        url: http://example.com/aeiou
        threadId: 42
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        isDeleted: false
        totalReplies: 0
        id: 42
        text: This video is wonderful!
        account:
          displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        url:
          format: url
          type: string
        text:
          description: Text of the comment
          example: This video is wonderful!
          format: html
          minLength: 1
          type: string
        threadId:
          example: 42
          minimum: 1
          type: integer
        inReplyToCommentId:
          allOf:
          - $ref: '#/components/schemas/id'
          nullable: true
        videoId:
          example: 42
          minimum: 1
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        deletedAt:
          format: date-time
          nullable: true
          type: string
        isDeleted:
          default: false
          type: boolean
        heldForReview:
          type: boolean
        totalRepliesFromVideoAuthor:
          minimum: 0
          type: integer
        totalReplies:
          minimum: 0
          type: integer
        account:
          $ref: '#/components/schemas/Account'
    VideoCommentThreadTree:
      example:
        children:
        - null
        - null
        comment:
          inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        comment:
          $ref: '#/components/schemas/VideoComment'
        children:
          items:
            $ref: '#/components/schemas/VideoCommentThreadTree'
          type: array
    VideoCommentForOwnerOrAdmin:
      example:
        threadId: "{}"
        inReplyToCommentId: "{}"
        createdAt: "{}"
        heldForReview: "{}"
        automaticTags:
        - automaticTags
        - automaticTags
        id: 42
        text: "{}"
        video:
          name: "{}"
          id: 42
          uuid: "{}"
        url: "{}"
        account: "{}"
        updatedAt: "{}"
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        url:
          $ref: '#/components/schemas/VideoComment/properties/url'
        text:
          $ref: '#/components/schemas/VideoComment/properties/text'
        heldForReview:
          $ref: '#/components/schemas/VideoComment/properties/heldForReview'
        threadId:
          $ref: '#/components/schemas/VideoComment/properties/threadId'
        inReplyToCommentId:
          $ref: '#/components/schemas/VideoComment/properties/inReplyToCommentId'
        createdAt:
          $ref: '#/components/schemas/VideoComment/properties/createdAt'
        updatedAt:
          $ref: '#/components/schemas/VideoComment/properties/updatedAt'
        account:
          $ref: '#/components/schemas/VideoComment/properties/account'
        video:
          $ref: '#/components/schemas/VideoInfo'
        automaticTags:
          items:
            type: string
          type: array
    Storyboard:
      example:
        storyboardPath: storyboardPath
        totalHeight: 0
        spriteHeight: 1
        spriteDuration: 5
        spriteWidth: 5
        totalWidth: 6
      properties:
        storyboardPath:
          type: string
        totalHeight:
          type: integer
        totalWidth:
          type: integer
        spriteHeight:
          type: integer
        spriteWidth:
          type: integer
        spriteDuration:
          type: integer
    VideoCaption:
      example:
        captionPath: captionPath
        language:
          id: en
          label: English
      properties:
        language:
          $ref: '#/components/schemas/VideoConstantString-Language'
        captionPath:
          type: string
    VideoChapters:
      example:
        chapters:
          title: title
          timecode: 0
      properties:
        chapters:
          $ref: '#/components/schemas/replaceVideoChapters_request_chapters_inner'
    VideoSource:
      example:
        fileDownloadUrl: fileDownloadUrl
        createdAt: 2000-01-23T04:56:07.000+00:00
        filename: filename
        inputFilename: inputFilename
        size: 0
        fps: 6.027456183070403
        width: 1.4658129805029452
        resolution:
          id: 240
          label: 240p
        height: 5.962133916683182
      properties:
        filename:
          deprecated: true
          description: "Deprecated in 6.1, use inputFilename instead"
          type: string
        inputFilename:
          description: Uploaded/imported filename
          type: string
        fileDownloadUrl:
          description: "**PeerTube >= 6.1** If enabled by the admin, the video source\
            \ file is kept on the server and can be downloaded by the owner"
          type: string
        resolution:
          $ref: '#/components/schemas/VideoResolutionConstant'
        size:
          description: '**PeerTube >= 6.1** Video file size in bytes'
          type: integer
        fps:
          description: '**PeerTube >= 6.1** Frames per second of the video file'
          type: number
        width:
          description: '**PeerTube >= 6.1** Video stream width'
          type: number
        height:
          description: '**PeerTube >= 6.1** Video stream height'
          type: number
        createdAt:
          format: date-time
          type: string
    ActorImage:
      example:
        path: path
        createdAt: 2000-01-23T04:56:07.000+00:00
        width: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        path:
          type: string
        width:
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
    ActorInfo:
      example:
        displayName: displayName
        name: name
        host: host
        id: 42
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        name:
          type: string
        displayName:
          type: string
        host:
          format: hostname
          type: string
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
    Actor:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: ""
        host: host
        id: 42
        followersCount: 0
        hostRedundancyAllowed: true
        followingCount: 0
        url: http://example.com/aeiou
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        url:
          format: url
          type: string
        name:
          allOf:
          - $ref: '#/components/schemas/username'
          description: "immutable name of the actor, used to find or mention it"
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
        host:
          description: server on which the actor is resident
          format: hostname
          type: string
        hostRedundancyAllowed:
          description: whether this actor's host allows redundancy of its videos
          type: boolean
        followingCount:
          description: "number of actors subscribed to by this actor, as seen by this\
            \ instance"
          minimum: 0
          type: integer
        followersCount:
          description: "number of followers of this actor, as seen by this instance"
          minimum: 0
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
    Account:
      allOf:
      - $ref: '#/components/schemas/Actor'
      - properties:
          userId:
            allOf:
            - $ref: '#/components/schemas/User/properties/id'
            description: object id for the user tied to this account
            nullable: true
          displayName:
            description: "editable name of the account, displayed in its representations"
            maxLength: 120
            minLength: 3
            type: string
          description:
            description: text or bio displayed on the account's profile
            nullable: true
            type: string
      example:
        displayName: displayName
        description: description
        hostRedundancyAllowed: true
        followingCount: 0
        userId: ""
        url: http://example.com/aeiou
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: ""
        host: host
        id: 42
        followersCount: 0
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
    UserViewingVideo:
      example:
        currentTime: 5
        viewEvent: seek
        sessionId: sessionId
      properties:
        currentTime:
          description: "timestamp within the video, in seconds"
          example: 5
          format: seconds
          type: integer
        viewEvent:
          description: |
            Event since last viewing call:
             * `seek` - If the user seeked the video
          enum:
          - seek
          type: string
        sessionId:
          description: |
            Optional param to represent the current viewer session. Used by the backend to properly count one view per session per video. PeerTube admin can configure the server to not trust this `sessionId` parameter but use the request IP address instead to identify a viewer.
          type: string
      required:
      - currentTime
    VideoStatsOverall:
      example:
        totalWatchTime: 6.027456183070403
        viewersPeakDate: 2000-01-23T04:56:07.000+00:00
        averageWatchTime: 0.8008281904610115
        countries:
        - viewers: 5.962133916683182
          isoCode: isoCode
        - viewers: 5.962133916683182
          isoCode: isoCode
        viewersPeak: 1.4658129805029452
      properties:
        averageWatchTime:
          type: number
        totalWatchTime:
          type: number
        viewersPeak:
          type: number
        viewersPeakDate:
          format: date-time
          type: string
        countries:
          items:
            $ref: '#/components/schemas/VideoStatsOverall_countries_inner'
          type: array
    VideoStatsRetention:
      example:
        data:
        - retentionPercent: 6.027456183070403
          second: 0.8008281904610115
        - retentionPercent: 6.027456183070403
          second: 0.8008281904610115
      properties:
        data:
          items:
            $ref: '#/components/schemas/VideoStatsRetention_data_inner'
          type: array
    VideoStatsTimeserie:
      example:
        data:
        - date: date
          value: 0.8008281904610115
        - date: date
          value: 0.8008281904610115
      properties:
        data:
          items:
            $ref: '#/components/schemas/VideoStatsTimeserie_data_inner'
          type: array
    ServerConfig:
      example:
        trending:
          videos:
            intervalDays: 5
        videoCaption:
          file:
            extensions:
            - extensions
            - extensions
            size:
              max: 1
        serverVersion: serverVersion
        instance:
          defaultClientRoute: defaultClientRoute
          isNSFW: true
          name: name
          shortDescription: shortDescription
          defaultNSFWPolicy: defaultNSFWPolicy
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          customizations:
            css: css
            javascript: javascript
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
        import:
          videos:
            torrent:
              enabled: true
            http:
              enabled: true
          videoChannelSynchronization:
            enabled: true
          users:
            enabled: true
        openTelemetry:
          metrics:
            playbackStatsInterval: 5.637376656633329
            enabled: true
        avatar:
          extensions:
          - extensions
          - extensions
          file:
            size:
              max: 1
        video:
          image:
            extensions:
            - extensions
            - extensions
            size:
              max: 1
          file:
            extensions:
            - extensions
            - extensions
        contactForm:
          enabled: true
        signup:
          requiresEmailVerification: true
          allowed: true
          allowedForCurrentIP: true
        search:
          remoteUri:
            anonymous: true
            users: true
        serverCommit: serverCommit
        plugin:
          registered:
          - registered
          - registered
        followings:
          instance:
            autoFollowIndex:
              indexUrl: http://example.com/aeiou
        tracker:
          enabled: true
        theme:
          registered:
          - registered
          - registered
        autoBlacklist:
          videos:
            ofUsers:
              enabled: true
        export:
          users:
            exportExpiration: 0.8008281904610115
            maxUserVideoQuota: 6.027456183070403
            enabled: true
        user:
          videoQuota: 16810141515
          videoQuotaDaily: 1681014151
        email:
          enabled: true
        transcoding:
          web_videos:
            enabled: true
          enabledResolutions:
          - 240
          - 240
          hls:
            enabled: true
        views:
          views:
            watchingInterval:
              anonymous: 2.3021358869347655
              users: 7.061401241503109
        homepage:
          enabled: true
      properties:
        instance:
          $ref: '#/components/schemas/ServerConfig_instance'
        search:
          $ref: '#/components/schemas/ServerConfig_search'
        plugin:
          $ref: '#/components/schemas/ServerConfig_plugin'
        theme:
          $ref: '#/components/schemas/ServerConfig_plugin'
        email:
          $ref: '#/components/schemas/ServerConfig_email'
        contactForm:
          $ref: '#/components/schemas/ServerConfig_email'
        serverVersion:
          type: string
        serverCommit:
          type: string
        signup:
          $ref: '#/components/schemas/ServerConfig_signup'
        transcoding:
          $ref: '#/components/schemas/ServerConfig_transcoding'
        import:
          $ref: '#/components/schemas/ServerConfig_import'
        export:
          $ref: '#/components/schemas/ServerConfig_export'
        autoBlacklist:
          $ref: '#/components/schemas/ServerConfig_autoBlacklist'
        avatar:
          $ref: '#/components/schemas/ServerConfig_avatar'
        video:
          $ref: '#/components/schemas/ServerConfig_video'
        videoCaption:
          $ref: '#/components/schemas/ServerConfig_videoCaption'
        user:
          $ref: '#/components/schemas/ServerConfig_user'
        trending:
          $ref: '#/components/schemas/ServerConfig_trending'
        tracker:
          $ref: '#/components/schemas/ServerConfig_email'
        followings:
          $ref: '#/components/schemas/ServerConfig_followings'
        homepage:
          $ref: '#/components/schemas/ServerConfig_email'
        openTelemetry:
          $ref: '#/components/schemas/ServerConfig_openTelemetry'
        views:
          $ref: '#/components/schemas/ServerConfig_views'
    SendClientLog:
      example:
        level: error
        meta: meta
        userAgent: userAgent
        stackTrace: stackTrace
        message: message
        url: url
      properties:
        message:
          type: string
        url:
          description: URL of the current user page
          type: string
        level:
          enum:
          - error
          - warn
          type: string
        stackTrace:
          description: Stack trace of the error if there is one
          type: string
        userAgent:
          description: User agent of the web browser that sends the message
          type: string
        meta:
          description: Additional information regarding this log
          type: string
      required:
      - level
      - message
      - url
    ServerStats:
      example:
        totalLocalVideoViews: 9.301444243932576
        totalRegistrationRequestsProcessed: 2.8841621266687802
        totalLocalDailyActiveVideoChannels: 1.0246457001441578
        totalLocalVideoChannels: 1.2315135367772556
        totalUsers: 0.8008281904610115
        totalDailyActiveUsers: 6.027456183070403
        totalActivityPubMessagesErrors: 6.438423552598547
        totalActivityPubMessagesWaiting: 6.965117697638846
        totalLocalVideos: 7.061401241503109
        activityPubMessagesProcessedPerSecond: 3.5571952270680973
        totalAbusesProcessed: 5.944895607614016
        totalLocalVideoComments: 3.616076749251911
        totalModerators: 5.637376656633329
        totalVideos: 4.145608029883936
        totalActivityPubMessagesSuccesses: 9.018348186070783
        totalMonthlyActiveUsers: 5.962133916683182
        totalInstanceFollowers: 1.1730742509559433
        averageRegistrationRequestResponseTimeMs: 1.284659006116532
        totalInstanceFollowing: 4.965218492984954
        totalLocalVideoFilesSize: 2.027123023002322
        totalActivityPubMessagesProcessed: 8.762042012749001
        totalAbuses: 6.704019297950036
        totalAdmins: 2.3021358869347655
        totalLocalWeeklyActiveVideoChannels: 1.4894159098541704
        totalLocalPlaylists: 7.457744773683766
        averageAbuseResponseTimeMs: 6.878052220127876
        totalWeeklyActiveUsers: 1.4658129805029452
        totalLocalMonthlyActiveVideoChannels: 6.84685269835264
        totalVideoComments: 7.386281948385884
        totalRegistrationRequests: 6.778324963048013
        videosRedundancy:
        - totalSize: 5.025004791520295
          totalUsed: 9.965781217890562
          totalVideos: 6.683562403749608
          strategy: strategy
          totalVideoFiles: 9.369310271410669
        - totalSize: 5.025004791520295
          totalUsed: 9.965781217890562
          totalVideos: 6.683562403749608
          strategy: strategy
          totalVideoFiles: 9.369310271410669
      properties:
        totalUsers:
          type: number
        totalDailyActiveUsers:
          type: number
        totalWeeklyActiveUsers:
          type: number
        totalMonthlyActiveUsers:
          type: number
        totalModerators:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled total
            moderators stats'
          type: number
        totalAdmins:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled total
            admins stats'
          type: number
        totalLocalVideos:
          type: number
        totalLocalVideoViews:
          description: Total video views made on the instance
          type: number
        totalLocalVideoComments:
          description: Total comments made by local users
          type: number
        totalLocalVideoFilesSize:
          type: number
        totalVideos:
          type: number
        totalVideoComments:
          type: number
        totalLocalVideoChannels:
          type: number
        totalLocalDailyActiveVideoChannels:
          type: number
        totalLocalWeeklyActiveVideoChannels:
          type: number
        totalLocalMonthlyActiveVideoChannels:
          type: number
        totalLocalPlaylists:
          type: number
        totalInstanceFollowers:
          type: number
        totalInstanceFollowing:
          type: number
        videosRedundancy:
          items:
            $ref: '#/components/schemas/ServerStats_videosRedundancy_inner'
          type: array
        totalActivityPubMessagesProcessed:
          type: number
        totalActivityPubMessagesSuccesses:
          type: number
        totalActivityPubMessagesErrors:
          type: number
        activityPubMessagesProcessedPerSecond:
          type: number
        totalActivityPubMessagesWaiting:
          type: number
        averageRegistrationRequestResponseTimeMs:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled registration
            requests stats'
          type: number
        totalRegistrationRequestsProcessed:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled registration
            requests stats'
          type: number
        totalRegistrationRequests:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled registration
            requests stats'
          type: number
        averageAbuseResponseTimeMs:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled abuses
            stats'
          type: number
        totalAbusesProcessed:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled abuses
            stats'
          type: number
        totalAbuses:
          description: '**PeerTube >= 6.1** Value is null if the admin disabled abuses
            stats'
          type: number
    ServerConfigAbout:
      example:
        instance:
          codeOfConduct: codeOfConduct
          languages:
          - languages
          - languages
          maintenanceLifetime: maintenanceLifetime
          businessModel: businessModel
          description: description
          shortDescription: shortDescription
          creationReason: creationReason
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          hardwareInformation: hardwareInformation
          administrator: administrator
          terms: terms
          name: name
          categories:
          - 0
          - 0
          moderationInformation: moderationInformation
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        instance:
          $ref: '#/components/schemas/ServerConfigAbout_instance'
    ServerConfigCustom:
      example:
        cache:
          previews:
            size: 0
          captions:
            size: 0
        instance:
          terms: terms
          defaultClientRoute: defaultClientRoute
          isNSFW: true
          name: name
          description: description
          shortDescription: shortDescription
          defaultNSFWPolicy: defaultNSFWPolicy
          customizations:
            css: css
            javascript: javascript
        followers:
          instance:
            manualApproval: true
            enabled: true
        import:
          video_channel_synchronization:
            enabled: true
          videos:
            torrent:
              enabled: true
            http:
              enabled: true
        admin:
          email: email
        theme:
          default: default
        services:
          twitter:
            username: username
        autoBlacklist:
          videos:
            ofUsers:
              enabled: true
        signup:
          requiresEmailVerification: true
          limit: 6
          enabled: true
        contactForm:
          enabled: true
        user:
          videoQuota: 16810141515
          videoQuotaDaily: 1681014151
        transcoding:
          allowAdditionalExtensions: true
          originalFile:
            keep: true
          profile: default
          threads: 1
          resolutions:
            "0p": true
            "1080p": true
            "2160p": true
            "720p": true
            "360p": true
            "240p": true
            "144p": true
            "1440p": true
            "480p": true
          web_videos:
            enabled: true
          allowAudioFiles: true
          enabled: true
          hls:
            enabled: true
          concurrency: 5.962133916683182
      properties:
        instance:
          $ref: '#/components/schemas/ServerConfigCustom_instance'
        theme:
          $ref: '#/components/schemas/ServerConfigCustom_theme'
        services:
          $ref: '#/components/schemas/ServerConfigCustom_services'
        cache:
          $ref: '#/components/schemas/ServerConfigCustom_cache'
        signup:
          $ref: '#/components/schemas/ServerConfigCustom_signup'
        admin:
          $ref: '#/components/schemas/ServerConfigCustom_admin'
        contactForm:
          $ref: '#/components/schemas/ServerConfig_email'
        user:
          $ref: '#/components/schemas/ServerConfigCustom_user'
        transcoding:
          $ref: '#/components/schemas/ServerConfigCustom_transcoding'
        import:
          $ref: '#/components/schemas/ServerConfigCustom_import'
        autoBlacklist:
          $ref: '#/components/schemas/ServerConfig_autoBlacklist'
        followers:
          $ref: '#/components/schemas/ServerConfigCustom_followers'
    CustomHomepage:
      example:
        content: content
      properties:
        content:
          type: string
    Follow:
      example:
        score: 1.4658129805029452
        createdAt: 2000-01-23T04:56:07.000+00:00
        follower:
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          hostRedundancyAllowed: true
          followingCount: 0
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        following:
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          hostRedundancyAllowed: true
          followingCount: 0
          url: http://example.com/aeiou
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        id: 42
        state: pending
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        follower:
          $ref: '#/components/schemas/Actor'
        following:
          $ref: '#/components/schemas/Actor'
        score:
          description: "score reflecting the reachability of the actor, with steps\
            \ of `10` and a base score of `1000`."
          type: number
        state:
          enum:
          - pending
          - accepted
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
    PredefinedAbuseReasons:
      description: Reason categories that help triage reports
      items:
        enum:
        - violentOrAbusive
        - hatefulOrAbusive
        - spamOrMisleading
        - privacy
        - rights
        - serverRules
        - thumbnails
        - captions
        type: string
      maxItems: 8
      type: array
    Job:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        data:
          key: ""
        processedOn: 2000-01-23T04:56:07.000+00:00
        id: 42
        state: active
        finishedOn: 2000-01-23T04:56:07.000+00:00
        type: activitypub-http-unicast
        error:
          key: ""
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        state:
          enum:
          - active
          - completed
          - failed
          - waiting
          - delayed
          type: string
        type:
          enum:
          - activitypub-http-unicast
          - activitypub-http-broadcast
          - activitypub-http-fetcher
          - activitypub-follow
          - video-file-import
          - video-transcoding
          - email
          - video-import
          - videos-views-stats
          - activitypub-refresher
          - video-redundancy
          - video-channel-import
          type: string
        data:
          additionalProperties: true
          type: object
        error:
          additionalProperties: true
          type: object
        createdAt:
          format: date-time
          type: string
        finishedOn:
          format: date-time
          type: string
        processedOn:
          format: date-time
          type: string
    AddUserResponse:
      example:
        user:
          id: 42
          account:
            id: 42
      properties:
        user:
          $ref: '#/components/schemas/AddUserResponse_user'
    VideoUploadRequestCommon:
      properties:
        name:
          description: Video name
          example: What is PeerTube?
          maxLength: 120
          minLength: 3
          type: string
        channelId:
          description: Channel id that will contain this video
          example: 3
          minimum: 1
          type: integer
        privacy:
          $ref: '#/components/schemas/VideoPrivacySet'
        category:
          description: "category id of the video (see [/videos/categories](#operation/getCategories))"
          example: 15
          type: integer
        licence:
          description: "licence id of the video (see [/videos/licences](#operation/getLicences))"
          example: 2
          type: integer
        language:
          description: "language id of the video (see [/videos/languages](#operation/getLanguages))"
          example: en
          type: string
        description:
          description: Video description
          example: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n**Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**
          type: string
        waitTranscoding:
          description: Whether or not we wait transcoding before publish the video
          type: boolean
        generateTranscription:
          description: "**PeerTube >= 6.2** If enabled by the admin, automatically\
            \ generate a subtitle of the video"
          type: boolean
        support:
          description: A text tell the audience how to support the video creator
          example: Please support our work on https://soutenir.framasoft.org/en/ <3
          type: string
        nsfw:
          description: Whether or not this video contains sensitive content
          type: boolean
        tags:
          description: Video tags (maximum 5 tags each between 2 and 30 characters)
          example:
          - framasoft
          - peertube
          items:
            maxLength: 30
            minLength: 2
            type: string
          maxItems: 5
          minItems: 1
          type: array
          uniqueItems: true
        commentsEnabled:
          deprecated: true
          description: "Deprecated in 6.2, use commentsPolicy instead"
          type: boolean
        commentsPolicy:
          $ref: '#/components/schemas/VideoCommentsPolicySet'
        downloadEnabled:
          description: Enable or disable downloading for this video
          type: boolean
        originallyPublishedAt:
          description: Date when the content was originally published
          format: date-time
          type: string
        scheduleUpdate:
          $ref: '#/components/schemas/VideoScheduledUpdate'
        thumbnailfile:
          description: Video thumbnail file
          format: binary
          type: string
        previewfile:
          description: Video preview file
          format: binary
          type: string
        videoPasswords:
          items:
            $ref: '#/components/schemas/VideoPassword/properties/password'
          type: array
          uniqueItems: true
      required:
      - channelId
      - name
    VideoUploadRequestLegacy:
      allOf:
      - $ref: '#/components/schemas/VideoUploadRequestCommon'
      - properties:
          videofile:
            description: Video file
            format: binary
            type: string
        required:
        - videofile
        type: object
    VideoUploadRequestResumable:
      allOf:
      - $ref: '#/components/schemas/VideoUploadRequestCommon'
      - properties:
          filename:
            description: Video filename including extension
            example: what_is_peertube.mp4
            format: filename
            type: string
          thumbnailfile:
            description: Video thumbnail file
            format: binary
            type: string
          previewfile:
            description: Video preview file
            format: binary
            type: string
        required:
        - filename
        type: object
      example:
        licence: 2
        commentsEnabled: true
        scheduleUpdate:
          privacy: null
          updateAt: 2000-01-23T04:56:07.000+00:00
        nsfw: true
        downloadEnabled: true
        waitTranscoding: true
        commentsPolicy: 6
        generateTranscription: true
        privacy: 0
        description: |
          **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n**Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**
        language: en
        tags:
        - framasoft
        - peertube
        originallyPublishedAt: 2000-01-23T04:56:07.000+00:00
        videoPasswords:
        - null
        - null
        filename: what_is_peertube.mp4
        previewfile: ""
        name: What is PeerTube?
        thumbnailfile: ""
        category: 15
        support: Please support our work on https://soutenir.framasoft.org/en/ <3
        channelId: 3
    VideoUploadResponse:
      example:
        video:
          shortUUID: 2y84q2MQUMWPbiEcxNXMgC
          id: 42
          uuid: "{}"
      properties:
        video:
          $ref: '#/components/schemas/VideoUploadResponse_video'
    VideoReplaceSourceRequestResumable:
      example:
        filename: what_is_peertube.mp4
      properties:
        filename:
          description: Video filename including extension
          example: what_is_peertube.mp4
          format: filename
          type: string
    UserImportResumable:
      example:
        filename: user-export-6-2024-02-09T10_12_11.682Z
      properties:
        filename:
          description: Archive filename including extension
          example: user-export-6-2024-02-09T10_12_11.682Z
          format: filename
          type: string
    CommentThreadResponse:
      example:
        total: 1
        data:
        - inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoComment'
          maxItems: 100
          type: array
    CommentThreadPostResponse:
      example:
        comment:
          inReplyToCommentId: ""
          heldForReview: true
          totalRepliesFromVideoAuthor: 0
          videoId: 42
          url: http://example.com/aeiou
          threadId: 42
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          isDeleted: false
          totalReplies: 0
          id: 42
          text: This video is wonderful!
          account:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        comment:
          $ref: '#/components/schemas/VideoComment'
    VideoTokenResponse:
      example:
        files:
          expires: 2000-01-23T04:56:07.000+00:00
          token: token
      properties:
        files:
          $ref: '#/components/schemas/VideoTokenResponse_files'
    VideoListResponse:
      example:
        total: 1
        data:
        - scheduledUpdate: ""
          truncatedDescription: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          waitTranscoding: true
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          userHistory:
            currentTime: 6
          privacy: ""
          language: ""
          aspectRatio: 1.778
          previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          blacklistedReason: blacklistedReason
          uuid: ""
          duration: 1419
          createdAt: 2017-10-01T10:52:46.396Z
          originallyPublishedAt: 2010-10-01T10:52:46.396Z
          isLive: true
          id: ""
          state: ""
          embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          views: 1337
          updatedAt: 2021-05-04T08:01:01.502Z
          likes: 42
          licence: ""
          publishedAt: 2018-10-01T10:52:46.396Z
          nsfw: true
          shortUUID: ""
          dislikes: 7
          isLocal: true
          blacklisted: true
          name: What is PeerTube?
          thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          category: ""
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
        - scheduledUpdate: ""
          truncatedDescription: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          waitTranscoding: true
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          userHistory:
            currentTime: 6
          privacy: ""
          language: ""
          aspectRatio: 1.778
          previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          blacklistedReason: blacklistedReason
          uuid: ""
          duration: 1419
          createdAt: 2017-10-01T10:52:46.396Z
          originallyPublishedAt: 2010-10-01T10:52:46.396Z
          isLive: true
          id: ""
          state: ""
          embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          views: 1337
          updatedAt: 2021-05-04T08:01:01.502Z
          likes: 42
          licence: ""
          publishedAt: 2018-10-01T10:52:46.396Z
          nsfw: true
          shortUUID: ""
          dislikes: 7
          isLocal: true
          blacklisted: true
          name: What is PeerTube?
          thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          category: ""
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
        - scheduledUpdate: ""
          truncatedDescription: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          waitTranscoding: true
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          userHistory:
            currentTime: 6
          privacy: ""
          language: ""
          aspectRatio: 1.778
          previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          blacklistedReason: blacklistedReason
          uuid: ""
          duration: 1419
          createdAt: 2017-10-01T10:52:46.396Z
          originallyPublishedAt: 2010-10-01T10:52:46.396Z
          isLive: true
          id: ""
          state: ""
          embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          views: 1337
          updatedAt: 2021-05-04T08:01:01.502Z
          likes: 42
          licence: ""
          publishedAt: 2018-10-01T10:52:46.396Z
          nsfw: true
          shortUUID: ""
          dislikes: 7
          isLocal: true
          blacklisted: true
          name: What is PeerTube?
          thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          category: ""
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
        - scheduledUpdate: ""
          truncatedDescription: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          waitTranscoding: true
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          userHistory:
            currentTime: 6
          privacy: ""
          language: ""
          aspectRatio: 1.778
          previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          blacklistedReason: blacklistedReason
          uuid: ""
          duration: 1419
          createdAt: 2017-10-01T10:52:46.396Z
          originallyPublishedAt: 2010-10-01T10:52:46.396Z
          isLive: true
          id: ""
          state: ""
          embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          views: 1337
          updatedAt: 2021-05-04T08:01:01.502Z
          likes: 42
          licence: ""
          publishedAt: 2018-10-01T10:52:46.396Z
          nsfw: true
          shortUUID: ""
          dislikes: 7
          isLocal: true
          blacklisted: true
          name: What is PeerTube?
          thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          category: ""
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
        - scheduledUpdate: ""
          truncatedDescription: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          waitTranscoding: true
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          userHistory:
            currentTime: 6
          privacy: ""
          language: ""
          aspectRatio: 1.778
          previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          blacklistedReason: blacklistedReason
          uuid: ""
          duration: 1419
          createdAt: 2017-10-01T10:52:46.396Z
          originallyPublishedAt: 2010-10-01T10:52:46.396Z
          isLive: true
          id: ""
          state: ""
          embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          views: 1337
          updatedAt: 2021-05-04T08:01:01.502Z
          likes: 42
          licence: ""
          publishedAt: 2018-10-01T10:52:46.396Z
          nsfw: true
          shortUUID: ""
          dislikes: 7
          isLocal: true
          blacklisted: true
          name: What is PeerTube?
          thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          category: ""
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Video'
          maxItems: 100
          type: array
    User:
      example:
        role:
          id: 2
          label: User
        autoPlayNextVideoPlaylist: true
        blockedReason: blockedReason
        lastLoginDate: 2000-01-23T04:56:07.000+00:00
        autoPlayVideo: true
        videoQuotaDaily: -1
        videoChannels:
        - displayName: Videos of Framasoft
          description: Videos made with <3 by Framasoft
          hostRedundancyAllowed: true
          ownerAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          followingCount: 0
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          url: http://example.com/aeiou
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          support: Please support our work on https://soutenir.framasoft.org/en/ <3
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - displayName: Videos of Framasoft
          description: Videos made with <3 by Framasoft
          hostRedundancyAllowed: true
          ownerAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          followingCount: 0
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          url: http://example.com/aeiou
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          support: Please support our work on https://soutenir.framasoft.org/en/ <3
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: createdAt
        emailVerified: true
        noAccountSetupWarningModal: true
        noWelcomeModal: true
        videoQuota: -1
        blocked: true
        nsfwPolicy: display
        noInstanceConfigWarningModal: true
        p2pEnabled: true
        theme: theme
        id: ""
        account:
          displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        autoPlayNextVideo: true
        email: email
        pluginAuth: pluginAuth
        username: chocobozzz
      properties:
        account:
          $ref: '#/components/schemas/Account'
        autoPlayNextVideo:
          description: Automatically start playing the upcoming video after the currently
            playing video
          type: boolean
        autoPlayNextVideoPlaylist:
          description: Automatically start playing the video on the playlist after
            the currently playing video
          type: boolean
        autoPlayVideo:
          description: Automatically start playing the video on the watch page
          type: boolean
        blocked:
          type: boolean
        blockedReason:
          type: string
        createdAt:
          type: string
        email:
          description: The user email
          format: email
          type: string
        emailVerified:
          description: Has the user confirmed their email address?
          type: boolean
        id:
          allOf:
          - $ref: '#/components/schemas/id'
          readOnly: true
        pluginAuth:
          description: Auth plugin to use to authenticate the user
          type: string
        lastLoginDate:
          format: date-time
          type: string
        noInstanceConfigWarningModal:
          type: boolean
        noAccountSetupWarningModal:
          type: boolean
        noWelcomeModal:
          type: boolean
        nsfwPolicy:
          $ref: '#/components/schemas/NSFWPolicy'
        role:
          $ref: '#/components/schemas/User_role'
        theme:
          description: Theme enabled by this user
          type: string
        username:
          description: "immutable name of the user, used to find or mention its actor"
          example: chocobozzz
          maxLength: 50
          minLength: 1
          pattern: "/^[a-z0-9._]+$/"
          type: string
        videoChannels:
          items:
            $ref: '#/components/schemas/VideoChannel'
          type: array
        videoQuota:
          description: The user video quota in bytes
          example: -1
          type: integer
        videoQuotaDaily:
          description: The user daily video quota in bytes
          example: -1
          type: integer
        p2pEnabled:
          description: Enable P2P in the player
          type: boolean
    UserWithStats:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          videosCount:
            description: Count of videos published
            type: integer
          abusesCount:
            description: Count of reports/abuses of which the user is a target
            type: integer
          abusesAcceptedCount:
            description: Count of reports/abuses created by the user and accepted/acted
              upon by the moderation team
            type: integer
          abusesCreatedCount:
            description: Count of reports/abuses created by the user
            type: integer
          videoCommentsCount:
            description: Count of comments published
            type: integer
    AddUser:
      example:
        videoQuota: -1
        password: password
        role: 2
        adminFlags: 1
        channelName: framasoft_videos
        email: email
        username: chocobozzz
        videoQuotaDaily: -1
      properties:
        username:
          description: "immutable name of the user, used to find or mention its actor"
          example: chocobozzz
          maxLength: 50
          minLength: 1
          pattern: "/^[a-z0-9._]+$/"
          type: string
        password:
          format: password
          maxLength: 255
          minLength: 6
          type: string
        email:
          description: The user email
          format: email
          type: string
        videoQuota:
          description: The user video quota in bytes
          example: -1
          type: integer
        videoQuotaDaily:
          description: The user daily video quota in bytes
          example: -1
          type: integer
        channelName:
          description: "immutable name of the channel, used to interact with its actor"
          example: framasoft_videos
          maxLength: 50
          minLength: 1
          pattern: "/^[a-zA-Z0-9\\\\-_.:]+$/"
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        adminFlags:
          $ref: '#/components/schemas/UserAdminFlags'
      required:
      - email
      - password
      - role
      - username
    UpdateUser:
      example:
        emailVerified: true
        videoQuota: 0
        password: password
        role: 2
        adminFlags: 1
        email: ""
        pluginAuth: peertube-plugin-auth-saml2
        videoQuotaDaily: 6
      properties:
        email:
          allOf:
          - $ref: '#/components/schemas/User/properties/email'
          description: The updated email of the user
        emailVerified:
          description: Set the email as verified
          type: boolean
        videoQuota:
          description: The updated video quota of the user in bytes
          type: integer
        videoQuotaDaily:
          description: The updated daily video quota of the user in bytes
          type: integer
        pluginAuth:
          description: The auth plugin to use to authenticate the user
          example: peertube-plugin-auth-saml2
          nullable: true
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        adminFlags:
          $ref: '#/components/schemas/UserAdminFlags'
        password:
          format: password
          maxLength: 255
          minLength: 6
          type: string
    UpdateMe:
      example:
        videoLanguages:
        - videoLanguages
        - videoLanguages
        autoPlayNextVideoPlaylist: true
        videosHistoryEnabled: true
        displayName: displayName
        autoPlayVideo: true
        currentPassword: currentPassword
        noAccountSetupWarningModal: true
        noWelcomeModal: true
        password: password
        displayNSFW: "true"
        p2pEnabled: true
        noInstanceConfigWarningModal: true
        theme: theme
        email: ""
        autoPlayNextVideo: true
      properties:
        password:
          format: password
          maxLength: 255
          minLength: 6
          type: string
        currentPassword:
          format: password
          maxLength: 255
          minLength: 6
          type: string
        email:
          allOf:
          - $ref: '#/components/schemas/User/properties/email'
          description: new email used for login and service communications
        displayName:
          description: new name of the user in its representations
          maxLength: 120
          minLength: 3
          type: string
        displayNSFW:
          description: new NSFW display policy
          enum:
          - "true"
          - "false"
          - both
          type: string
        p2pEnabled:
          description: whether to enable P2P in the player or not
          type: boolean
        autoPlayVideo:
          description: new preference regarding playing videos automatically
          type: boolean
        autoPlayNextVideo:
          description: new preference regarding playing following videos automatically
          type: boolean
        autoPlayNextVideoPlaylist:
          description: new preference regarding playing following playlist videos
            automatically
          type: boolean
        videosHistoryEnabled:
          description: whether to keep track of watched history or not
          type: boolean
        videoLanguages:
          description: list of languages to filter videos down to
          items:
            type: string
          type: array
        theme:
          type: string
        noInstanceConfigWarningModal:
          type: boolean
        noAccountSetupWarningModal:
          type: boolean
        noWelcomeModal:
          type: boolean
    GetMeVideoRating:
      example:
        rating: like
        id: 42
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        rating:
          description: Rating of the video
          enum:
          - like
          - dislike
          - none
          type: string
      required:
      - id
      - rating
    VideoRating:
      example:
        rating: like
        video:
          scheduledUpdate: ""
          truncatedDescription: |
            **[Want to help to translate this video?](https://weblate.framasoft.org/projects/what-is-peertube-video/)**\r\n\r\n
            **Take back the control of your videos! [#JoinPeertube](https://joinpeertube.org)**\r\n*A decentralized video hosting network, based on fr...
          waitTranscoding: true
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          userHistory:
            currentTime: 6
          privacy: ""
          language: ""
          aspectRatio: 1.778
          previewPath: /lazy-static/previews/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          blacklistedReason: blacklistedReason
          uuid: ""
          duration: 1419
          createdAt: 2017-10-01T10:52:46.396Z
          originallyPublishedAt: 2010-10-01T10:52:46.396Z
          isLive: true
          id: ""
          state: ""
          embedPath: /videos/embed/a65bc12f-9383-462e-81ae-8207e8b434ee
          views: 1337
          updatedAt: 2021-05-04T08:01:01.502Z
          likes: 42
          licence: ""
          publishedAt: 2018-10-01T10:52:46.396Z
          nsfw: true
          shortUUID: ""
          dislikes: 7
          isLocal: true
          blacklisted: true
          name: What is PeerTube?
          thumbnailPath: /lazy-static/thumbnails/a65bc12f-9383-462e-81ae-8207e8b434ee.jpg
          category: ""
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        video:
          $ref: '#/components/schemas/Video'
        rating:
          description: Rating of the video
          enum:
          - like
          - dislike
          - none
          type: string
      required:
      - rating
      - video
    RegisterUser:
      example:
        password: password
        displayName: displayName
        channel:
          displayName: displayName
          name: framasoft_videos
        email: email
        username: ""
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/username'
          description: "immutable name of the user, used to find or mention its actor"
        password:
          format: password
          maxLength: 255
          minLength: 6
          type: string
        email:
          description: "email of the user, used for login or service communications"
          format: email
          type: string
        displayName:
          description: "editable name of the user, displayed in its representations"
          maxLength: 120
          minLength: 1
          type: string
        channel:
          $ref: '#/components/schemas/RegisterUser_channel'
      required:
      - email
      - password
      - username
    UserRegistrationRequest:
      allOf:
      - $ref: '#/components/schemas/RegisterUser'
      - properties:
          registrationReason:
            description: reason for the user to register on the instance
            type: string
        required:
        - registrationReason
        type: object
      example:
        password: password
        displayName: displayName
        channel:
          displayName: displayName
          name: framasoft_videos
        registrationReason: registrationReason
        email: email
        username: ""
    UserRegistrationAcceptOrReject:
      example:
        moderationResponse: moderationResponse
        preventEmailDelivery: true
      properties:
        moderationResponse:
          description: Moderation response to send to the user
          type: string
        preventEmailDelivery:
          description: Set it to true if you don't want PeerTube to send an email
            to the user
          type: boolean
      required:
      - moderationResponse
      type: object
    UserRegistration:
      example:
        accountDisplayName: accountDisplayName
        moderationResponse: moderationResponse
        emailVerified: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        channelDisplayName: channelDisplayName
        channelHandle: channelHandle
        id: 42
        state:
          id: 0
          label: label
        registrationReason: registrationReason
        user:
          id: 42
        email: email
        username: username
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        state:
          $ref: '#/components/schemas/UserRegistration_state'
        registrationReason:
          type: string
        moderationResponse:
          nullable: true
          type: string
        username:
          type: string
        email:
          format: email
          type: string
        emailVerified:
          type: boolean
        accountDisplayName:
          type: string
        channelHandle:
          type: string
        channelDisplayName:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/UserRegistration_user'
    OAuthClient:
      example:
        client_secret: AjWiOapPltI6EnsWQwlFarRtLh4u8tDt
        client_id: v1ikx5hnfop4mdpnci8nsqh93c45rldf
      properties:
        client_id:
          example: v1ikx5hnfop4mdpnci8nsqh93c45rldf
          maxLength: 32
          minLength: 32
          pattern: "/^[a-z0-9]$/"
          type: string
        client_secret:
          example: AjWiOapPltI6EnsWQwlFarRtLh4u8tDt
          maxLength: 32
          minLength: 32
          pattern: "/^[a-zA-Z0-9]$/"
          type: string
    OAuthToken-password:
      allOf:
      - $ref: '#/components/schemas/OAuthClient'
      - properties:
          grant_type:
            default: password
            enum:
            - password
            - refresh_token
            type: string
          username:
            $ref: '#/components/schemas/User/properties/username'
          password:
            $ref: '#/components/schemas/password'
        type: object
      required:
      - client_id
      - client_secret
      - grant_type
      - password
      - username
    OAuthToken-refresh_token:
      allOf:
      - $ref: '#/components/schemas/OAuthClient'
      - properties:
          grant_type:
            default: password
            enum:
            - password
            - refresh_token
            type: string
          refresh_token:
            example: 2e0d675df9fc96d2e4ec8a3ebbbf45eca9137bb7
            type: string
        type: object
      required:
      - client_id
      - client_secret
      - grant_type
      - refresh_token
    VideoChannel:
      allOf:
      - $ref: '#/components/schemas/Actor'
      - properties:
          displayName:
            description: "editable name of the channel, displayed in its representations"
            example: Videos of Framasoft
            maxLength: 120
            minLength: 1
            type: string
          description:
            example: Videos made with <3 by Framasoft
            maxLength: 1000
            minLength: 3
            nullable: true
            type: string
          support:
            description: "text shown by default on all videos of this channel, to\
              \ tell the audience how to support it"
            example: Please support our work on https://soutenir.framasoft.org/en/
              <3
            maxLength: 1000
            minLength: 3
            nullable: true
            type: string
          isLocal:
            readOnly: true
            type: boolean
          updatedAt:
            format: date-time
            readOnly: true
            type: string
          banners:
            items:
              $ref: '#/components/schemas/ActorImage'
            type: array
          ownerAccount:
            $ref: '#/components/schemas/Account'
        type: object
      example:
        displayName: Videos of Framasoft
        description: Videos made with <3 by Framasoft
        hostRedundancyAllowed: true
        ownerAccount:
          displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        followingCount: 0
        banners:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        url: http://example.com/aeiou
        isLocal: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: ""
        host: host
        id: 42
        followersCount: 0
        support: Please support our work on https://soutenir.framasoft.org/en/ <3
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
    VideoChannelEdit:
      properties:
        displayName:
          description: Channel display name
        description:
          description: Channel description
        support:
          description: How to support/fund the channel
    VideoChannelCreate:
      allOf:
      - $ref: '#/components/schemas/VideoChannelEdit'
      - properties:
          name:
            allOf:
            - $ref: '#/components/schemas/usernameChannel'
            description: username of the channel to create
      example:
        displayName: ""
        name: ""
        description: ""
        support: ""
      required:
      - displayName
      - name
    VideoChannelUpdate:
      allOf:
      - $ref: '#/components/schemas/VideoChannelEdit'
      - properties:
          bulkVideosSupportUpdate:
            description: Update the support field for all videos of this channel
            type: boolean
      example:
        bulkVideosSupportUpdate: true
        displayName: ""
        description: ""
        support: ""
    VideoChannelList:
      example:
        total: 1
        data:
        - displayName: Videos of Framasoft
          description: Videos made with <3 by Framasoft
          hostRedundancyAllowed: true
          ownerAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          followingCount: 0
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          url: http://example.com/aeiou
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          support: Please support our work on https://soutenir.framasoft.org/en/ <3
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - displayName: Videos of Framasoft
          description: Videos made with <3 by Framasoft
          hostRedundancyAllowed: true
          ownerAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          followingCount: 0
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          url: http://example.com/aeiou
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          support: Please support our work on https://soutenir.framasoft.org/en/ <3
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoChannelList_data_inner'
          type: array
    ImportVideosInChannelCreate:
      example:
        videoChannelSyncId: 0
        externalChannelUrl: https://youtube.com/c/UC_myfancychannel
      properties:
        externalChannelUrl:
          example: https://youtube.com/c/UC_myfancychannel
          type: string
        videoChannelSyncId:
          description: "If part of a channel sync process, specify its id to assign\
            \ video imports to this channel synchronization"
          type: integer
      required:
      - externalChannelUrl
      type: object
    VideoChannelSync:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastSyncAt: 2000-01-23T04:56:07.000+00:00
        externalChannelUrl: https://youtube.com/c/UC_myfancychannel
        channel:
          displayName: Videos of Framasoft
          description: Videos made with <3 by Framasoft
          hostRedundancyAllowed: true
          ownerAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          followingCount: 0
          banners:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          url: http://example.com/aeiou
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          support: Please support our work on https://soutenir.framasoft.org/en/ <3
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        id: 42
        state:
          id: 2
          label: PROCESSING
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        state:
          $ref: '#/components/schemas/VideoChannelSync_state'
        externalChannelUrl:
          example: https://youtube.com/c/UC_myfancychannel
          type: string
        createdAt:
          format: date-time
          type: string
        lastSyncAt:
          format: date-time
          nullable: true
          type: string
        channel:
          $ref: '#/components/schemas/VideoChannel'
      type: object
    VideoChannelSyncList:
      example:
        total: 1
        data:
        - ""
        - ""
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            allOf:
            - $ref: '#/components/schemas/VideoChannelSync'
          type: array
      type: object
    VideoChannelSyncCreate:
      example:
        videoChannelId: 42
        externalChannelUrl: https://youtube.com/c/UC_myfancychannel
      properties:
        externalChannelUrl:
          example: https://youtube.com/c/UC_myfancychannel
          type: string
        videoChannelId:
          example: 42
          minimum: 1
          type: integer
      type: object
    MRSSPeerLink:
      example:
        href: href
        type: application/x-bittorrent
      properties:
        href:
          type: string
          xml:
            attribute: true
        type:
          enum:
          - application/x-bittorrent
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: media:peerLink
    MRSSGroupContent:
      properties:
        url:
          format: url
          type: string
          xml:
            attribute: true
        fileSize:
          type: integer
          xml:
            attribute: true
        type:
          type: string
          xml:
            attribute: true
        framerate:
          type: integer
          xml:
            attribute: true
        duration:
          type: integer
          xml:
            attribute: true
        height:
          type: integer
          xml:
            attribute: true
        lang:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: media:content
    VideoCommentsForXML:
      items:
        $ref: '#/components/schemas/VideoCommentsForXML_inner'
      type: array
      xml:
        name: channel
        wrapped: true
    VideosForXML:
      items:
        $ref: '#/components/schemas/VideosForXML_inner'
      type: array
      xml:
        name: channel
        wrapped: true
    NotificationSettingValue:
      description: |
        Notification type. One of the following values, or a sum of multiple values:
        - `0` NONE
        - `1` WEB
        - `2` EMAIL
      type: integer
    Notification:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        read: true
        videoBlacklist:
          id: 42
          video: ""
        videoImport:
          torrentName: torrentName
          magnetUri: "{}"
          targetUri: https://openapi-generator.tech
          id: 42
          video:
            name: "{}"
            id: 42
            uuid: "{}"
        videoAbuse:
          id: 42
          video: ""
        comment:
          threadId: 6
          heldForReview: true
          id: 42
          video:
            name: "{}"
            id: 42
            uuid: "{}"
          account:
            displayName: displayName
            name: name
            host: host
            id: 42
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
        id: 42
        video:
          name: "{}"
          channel:
            displayName: displayName
            name: name
            host: host
            id: 42
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          uuid: "{}"
        type: 0
        actorFollow:
          follower:
            displayName: displayName
            name: name
            host: host
            id: 42
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          following:
            displayName: displayName
            name: name
            host: host
            type: account
          id: 42
          state: pending
        account: ""
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        type:
          description: |
            Notification type, following the `UserNotificationType` enum:
            - `1` NEW_VIDEO_FROM_SUBSCRIPTION
            - `2` NEW_COMMENT_ON_MY_VIDEO
            - `3` NEW_ABUSE_FOR_MODERATORS
            - `4` BLACKLIST_ON_MY_VIDEO
            - `5` UNBLACKLIST_ON_MY_VIDEO
            - `6` MY_VIDEO_PUBLISHED
            - `7` MY_VIDEO_IMPORT_SUCCESS
            - `8` MY_VIDEO_IMPORT_ERROR
            - `9` NEW_USER_REGISTRATION
            - `10` NEW_FOLLOW
            - `11` COMMENT_MENTION
            - `12` VIDEO_AUTO_BLACKLIST_FOR_MODERATORS
            - `13` NEW_INSTANCE_FOLLOWER
            - `14` AUTO_INSTANCE_FOLLOWING
            - `15` ABUSE_STATE_CHANGE
            - `16` ABUSE_NEW_MESSAGE
            - `17` NEW_PLUGIN_VERSION
            - `18` NEW_PEERTUBE_VERSION
            - `19` MY_VIDEO_STUDIO_EDITION_FINISHED
            - `20` NEW_USER_REGISTRATION_REQUEST
            - `21` NEW_LIVE_FROM_SUBSCRIPTION
          type: integer
        read:
          type: boolean
        video:
          $ref: '#/components/schemas/Notification_video'
        videoImport:
          $ref: '#/components/schemas/Notification_videoImport'
        comment:
          $ref: '#/components/schemas/Notification_comment'
        videoAbuse:
          $ref: '#/components/schemas/Notification_videoAbuse'
        videoBlacklist:
          $ref: '#/components/schemas/Notification_videoAbuse'
        account:
          allOf:
          - $ref: '#/components/schemas/ActorInfo'
          nullable: true
        actorFollow:
          $ref: '#/components/schemas/Notification_actorFollow'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
    NotificationListResponse:
      example:
        total: 1
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          videoBlacklist:
            id: 42
            video: ""
          videoImport:
            torrentName: torrentName
            magnetUri: "{}"
            targetUri: https://openapi-generator.tech
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
          videoAbuse:
            id: 42
            video: ""
          comment:
            threadId: 6
            heldForReview: true
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
            account:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          video:
            name: "{}"
            channel:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            id: 42
            uuid: "{}"
          type: 0
          actorFollow:
            follower:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            following:
              displayName: displayName
              name: name
              host: host
              type: account
            id: 42
            state: pending
          account: ""
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          videoBlacklist:
            id: 42
            video: ""
          videoImport:
            torrentName: torrentName
            magnetUri: "{}"
            targetUri: https://openapi-generator.tech
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
          videoAbuse:
            id: 42
            video: ""
          comment:
            threadId: 6
            heldForReview: true
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
            account:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          video:
            name: "{}"
            channel:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            id: 42
            uuid: "{}"
          type: 0
          actorFollow:
            follower:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            following:
              displayName: displayName
              name: name
              host: host
              type: account
            id: 42
            state: pending
          account: ""
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          videoBlacklist:
            id: 42
            video: ""
          videoImport:
            torrentName: torrentName
            magnetUri: "{}"
            targetUri: https://openapi-generator.tech
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
          videoAbuse:
            id: 42
            video: ""
          comment:
            threadId: 6
            heldForReview: true
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
            account:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          video:
            name: "{}"
            channel:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            id: 42
            uuid: "{}"
          type: 0
          actorFollow:
            follower:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            following:
              displayName: displayName
              name: name
              host: host
              type: account
            id: 42
            state: pending
          account: ""
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          videoBlacklist:
            id: 42
            video: ""
          videoImport:
            torrentName: torrentName
            magnetUri: "{}"
            targetUri: https://openapi-generator.tech
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
          videoAbuse:
            id: 42
            video: ""
          comment:
            threadId: 6
            heldForReview: true
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
            account:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          video:
            name: "{}"
            channel:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            id: 42
            uuid: "{}"
          type: 0
          actorFollow:
            follower:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            following:
              displayName: displayName
              name: name
              host: host
              type: account
            id: 42
            state: pending
          account: ""
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          read: true
          videoBlacklist:
            id: 42
            video: ""
          videoImport:
            torrentName: torrentName
            magnetUri: "{}"
            targetUri: https://openapi-generator.tech
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
          videoAbuse:
            id: 42
            video: ""
          comment:
            threadId: 6
            heldForReview: true
            id: 42
            video:
              name: "{}"
              id: 42
              uuid: "{}"
            account:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          video:
            name: "{}"
            channel:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            id: 42
            uuid: "{}"
          type: 0
          actorFollow:
            follower:
              displayName: displayName
              name: name
              host: host
              id: 42
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
            following:
              displayName: displayName
              name: name
              host: host
              type: account
            id: 42
            state: pending
          account: ""
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Notification'
          maxItems: 100
          type: array
    Plugin:
      example:
        settings:
          key: ""
        createdAt: 2000-01-23T04:56:07.000+00:00
        peertubeEngine: 2.2.0
        latestVersion: 0.0.3
        name: peertube-plugin-auth-ldap
        description: description
        type: 0
        version: 0.0.1
        enabled: true
        uninstalled: true
        homepage: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          example: peertube-plugin-auth-ldap
          type: string
        type:
          description: |
            - `1`: PLUGIN
            - `2`: THEME
          enum:
          - 1
          - 2
          type: integer
        latestVersion:
          example: 0.0.3
          type: string
        version:
          example: 0.0.1
          type: string
        enabled:
          type: boolean
        uninstalled:
          type: boolean
        peertubeEngine:
          example: 2.2.0
          type: string
        description:
          type: string
        homepage:
          example: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
          format: url
          type: string
        settings:
          additionalProperties: true
          type: object
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
    PluginResponse:
      example:
        total: 1
        data:
        - settings:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          peertubeEngine: 2.2.0
          latestVersion: 0.0.3
          name: peertube-plugin-auth-ldap
          description: description
          type: 0
          version: 0.0.1
          enabled: true
          uninstalled: true
          homepage: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - settings:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          peertubeEngine: 2.2.0
          latestVersion: 0.0.3
          name: peertube-plugin-auth-ldap
          description: description
          type: 0
          version: 0.0.1
          enabled: true
          uninstalled: true
          homepage: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - settings:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          peertubeEngine: 2.2.0
          latestVersion: 0.0.3
          name: peertube-plugin-auth-ldap
          description: description
          type: 0
          version: 0.0.1
          enabled: true
          uninstalled: true
          homepage: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - settings:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          peertubeEngine: 2.2.0
          latestVersion: 0.0.3
          name: peertube-plugin-auth-ldap
          description: description
          type: 0
          version: 0.0.1
          enabled: true
          uninstalled: true
          homepage: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - settings:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          peertubeEngine: 2.2.0
          latestVersion: 0.0.3
          name: peertube-plugin-auth-ldap
          description: description
          type: 0
          version: 0.0.1
          enabled: true
          uninstalled: true
          homepage: https://framagit.org/framasoft/peertube/official-plugins/tree/master/peertube-plugin-auth-ldap
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Plugin'
          maxItems: 100
          type: array
    LiveVideoUpdate:
      example:
        latencyMode: 0
        replaySettings:
          privacy: 0
        saveReplay: true
        permanentLive: true
      properties:
        saveReplay:
          type: boolean
        replaySettings:
          $ref: '#/components/schemas/LiveVideoReplaySettings'
        permanentLive:
          description: User can stream multiple times in a permanent live
          type: boolean
        latencyMode:
          $ref: '#/components/schemas/LiveVideoLatencyMode'
    LiveVideoResponse:
      example:
        streamKey: streamKey
        latencyMode: 6
        rtmpUrl: rtmpUrl
        replaySettings:
          privacy: 0
        rtmpsUrl: rtmpsUrl
        saveReplay: true
        permanentLive: true
      properties:
        rtmpUrl:
          description: Included in the response if an appropriate token is provided
          type: string
        rtmpsUrl:
          description: Included in the response if an appropriate token is provided
          type: string
        streamKey:
          description: RTMP stream key to use to stream into this live video. Included
            in the response if an appropriate token is provided
          type: string
        saveReplay:
          type: boolean
        replaySettings:
          $ref: '#/components/schemas/LiveVideoReplaySettings'
        permanentLive:
          description: User can stream multiple times in a permanent live
          type: boolean
        latencyMode:
          $ref: '#/components/schemas/LiveVideoLatencyMode'
    RequestTwoFactorResponse:
      example:
        otpRequest:
          requestToken: requestToken
          secret: secret
          uri: uri
      properties:
        otpRequest:
          $ref: '#/components/schemas/RequestTwoFactorResponse_otpRequest'
    VideoStudioCreateTask:
      items:
        $ref: '#/components/schemas/VideoStudioCreateTask_inner'
      type: array
    LiveVideoSessionResponse:
      example:
        replayVideo:
          shortUUID: 2y84q2MQUMWPbiEcxNXMgC
          id: 1.4658129805029452
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        endDate: 2000-01-23T04:56:07.000+00:00
        id: 0
        error: 6
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: integer
        startDate:
          description: Start date of the live session
          format: date-time
          type: string
        endDate:
          description: End date of the live session
          format: date-time
          nullable: true
          type: string
        error:
          description: |
            Error type if an error occurred during the live session:
              - `1`: Bad socket health (transcoding is too slow)
              - `2`: Max duration exceeded
              - `3`: Quota exceeded
              - `4`: Quota FFmpeg error
              - `5`: Video has been blacklisted during the live
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          nullable: true
          type: integer
        replayVideo:
          $ref: '#/components/schemas/LiveVideoSessionResponse_replayVideo'
    PlaybackMetricCreate:
      example:
        downloadedBytesP2P: 2.3021358869347655
        resolutionChanges: 5.962133916683182
        p2pPeers: 1.4658129805029452
        downloadedBytesHTTP: 7.061401241503109
        fps: 6.027456183070403
        p2pEnabled: true
        uploadedBytesP2P: 9.301444243932576
        videoId: 42
        playerMode: p2p-media-loader
        resolution: 0.8008281904610115
        errors: 5.637376656633329
      properties:
        playerMode:
          enum:
          - p2p-media-loader
          - web-video
          type: string
        resolution:
          description: Current player video resolution
          type: number
        fps:
          description: Current player video fps
          type: number
        p2pEnabled:
          type: boolean
        p2pPeers:
          description: P2P peers connected (doesn't include WebSeed peers)
          type: number
        resolutionChanges:
          description: How many resolution changes occurred since the last metric
            creation
          type: number
        errors:
          description: How many errors occurred since the last metric creation
          type: number
        downloadedBytesP2P:
          description: How many bytes were downloaded with P2P since the last metric
            creation
          type: number
        downloadedBytesHTTP:
          description: How many bytes were downloaded with HTTP since the last metric
            creation
          type: number
        uploadedBytesP2P:
          description: How many bytes were uploaded with P2P since the last metric
            creation
          type: number
        videoId:
          $ref: '#/components/schemas/_api_v1_videos_ownership__id__accept_post_id_parameter'
      required:
      - downloadedBytesHTTP
      - downloadedBytesP2P
      - errors
      - p2pEnabled
      - playerMode
      - resolutionChanges
      - uploadedBytesP2P
      - videoId
    RunnerRegistrationToken:
      example:
        registrationToken: registrationToken
        createdAt: 2000-01-23T04:56:07.000+00:00
        registeredRunnersCount: 6
        id: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: integer
        registrationToken:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        registeredRunnersCount:
          type: integer
    Runner:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        ip: ip
        name: name
        description: description
        id: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
        lastContact: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        ip:
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        lastContact:
          format: date-time
          type: string
    RunnerJobType:
      enum:
      - vod-web-video-transcoding
      - vod-hls-transcoding
      - vod-audio-merge-transcoding
      - live-rtmp-hls-transcoding
      type: string
    RunnerJobState:
      description: |
        The runner job state:
          - `1` Pending
          - `2` Processing
          - `3` Completed
          - `4` Errored
          - `5` Waiting for a parent job
          - `6` Cancelled
          - `7` Parent had an error
          - `8` Parent has been cancelled
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      type: integer
    RunnerJobStateConstant:
      example:
        id: 0
        label: Processing
      properties:
        id:
          $ref: '#/components/schemas/RunnerJobState'
        label:
          example: Processing
          type: string
      type: object
    RunnerJobPayload:
      anyOf:
      - $ref: '#/components/schemas/VOD_web_video_transcoding_1'
      - $ref: '#/components/schemas/VOD_HLS_transcoding_1'
      - $ref: '#/components/schemas/VOD_audio_merge_transcoding_1'
    RunnerJob:
      properties:
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        type:
          $ref: '#/components/schemas/RunnerJobType'
        state:
          $ref: '#/components/schemas/RunnerJobStateConstant'
        payload:
          $ref: '#/components/schemas/RunnerJobPayload'
        failures:
          description: "Number of times a remote runner failed to process this job.\
            \ After too many failures, the job in \"error\" state"
          type: integer
        error:
          description: Error message if the job is errored
          nullable: true
          type: string
        progress:
          description: Percentage progress
          type: integer
        priority:
          description: Job priority (less has more priority)
          type: integer
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        finishedAt:
          format: date-time
          type: string
        parent:
          $ref: '#/components/schemas/RunnerJob_parent'
        runner:
          $ref: '#/components/schemas/RunnerJob_runner'
    RunnerJobAdmin:
      allOf:
      - $ref: '#/components/schemas/RunnerJob'
      - properties:
          privatePayload:
            $ref: '#/components/schemas/RunnerJobAdmin_allOf_privatePayload'
        type: object
      example:
        parent:
          state:
            id: 0
            label: Processing
          type: null
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        privatePayload: null
        failures: 0
        startedAt: 2000-01-23T04:56:07.000+00:00
        type: vod-web-video-transcoding
        error: error
        priority: 1
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        finishedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        payload:
          output:
            fps: 6.027456183070403
            resolution: 0.8008281904610115
          input:
            videoFileUrl: videoFileUrl
        progress: 6
        state:
          id: 0
          label: Processing
        runner:
          name: name
          description: description
          id: 5.637376656633329
        updatedAt: 2000-01-23T04:56:07.000+00:00
    WatchedWordsLists:
      example:
        createdAt: 2021-05-04T08:01:01.502Z
        words:
        - words
        - words
        id: 42
        listName: listName
        updatedAt: 2021-05-04T08:01:01.502Z
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        listName:
          type: string
        words:
          items:
            type: string
          type: array
        updatedAt:
          example: 2021-05-04T08:01:01.502Z
          format: date-time
          type: string
        createdAt:
          example: 2021-05-04T08:01:01.502Z
          format: date-time
          type: string
    VideoPassword:
      example:
        password: password
        videoId: 42
        id: 42
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        password:
          minLength: 2
          type: string
        videoId:
          example: 42
          minimum: 1
          type: integer
    VideoPasswordList:
      example:
        total: 1
        data:
        - password: password
          videoId: 42
          id: 42
        - password: password
          videoId: 42
          id: 42
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoPassword'
          type: array
    AddVideoPasswords:
      items:
        $ref: '#/components/schemas/VideoPassword/properties/password'
      type: array
      uniqueItems: true
    getAccountVideos_categoryOneOf_parameter:
      oneOf:
      - $ref: '#/components/schemas/VideoCategorySet'
      - items:
          $ref: '#/components/schemas/VideoCategorySet'
        type: array
    getAccountVideos_tagsOneOf_parameter:
      oneOf:
      - type: string
      - items:
          type: string
        maxItems: 5
        type: array
    getAccountVideos_tagsAllOf_parameter:
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    getAccountVideos_licenceOneOf_parameter:
      oneOf:
      - $ref: '#/components/schemas/VideoLicenceSet'
      - items:
          $ref: '#/components/schemas/VideoLicenceSet'
        type: array
    getAccountVideos_languageOneOf_parameter:
      oneOf:
      - $ref: '#/components/schemas/VideoLanguageSet'
      - items:
          $ref: '#/components/schemas/VideoLanguageSet'
        type: array
    getAccountFollowers_200_response:
      example:
        total: 1
        data:
        - score: 1.4658129805029452
          createdAt: 2000-01-23T04:56:07.000+00:00
          follower:
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            hostRedundancyAllowed: true
            followingCount: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          following:
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            hostRedundancyAllowed: true
            followingCount: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: pending
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - score: 1.4658129805029452
          createdAt: 2000-01-23T04:56:07.000+00:00
          follower:
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            hostRedundancyAllowed: true
            followingCount: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          following:
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            hostRedundancyAllowed: true
            followingCount: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: pending
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Follow'
          type: array
      type: object
    getAccounts_200_response:
      example:
        total: 1
        data:
        - displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
      type: object
    _api_v1_config_instance_banner_pick_post_request:
      properties:
        bannerfile:
          description: The file to upload.
          format: binary
          type: string
      type: object
    _api_v1_config_instance_avatar_pick_post_request:
      properties:
        avatarfile:
          description: The file to upload.
          format: binary
          type: string
      type: object
    _api_v1_custom_pages_homepage_instance_put_request:
      properties:
        content:
          description: "content of the homepage, that will be injected in the client"
          type: string
      type: object
    getJobs_200_response:
      example:
        total: 1
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data:
            key: ""
          processedOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: active
          finishedOn: 2000-01-23T04:56:07.000+00:00
          type: activitypub-http-unicast
          error:
            key: ""
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data:
            key: ""
          processedOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: active
          finishedOn: 2000-01-23T04:56:07.000+00:00
          type: activitypub-http-unicast
          error:
            key: ""
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data:
            key: ""
          processedOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: active
          finishedOn: 2000-01-23T04:56:07.000+00:00
          type: activitypub-http-unicast
          error:
            key: ""
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data:
            key: ""
          processedOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: active
          finishedOn: 2000-01-23T04:56:07.000+00:00
          type: activitypub-http-unicast
          error:
            key: ""
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data:
            key: ""
          processedOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          state: active
          finishedOn: 2000-01-23T04:56:07.000+00:00
          type: activitypub-http-unicast
          error:
            key: ""
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Job'
          maxItems: 100
          type: array
      type: object
    _api_v1_server_following_post_request:
      properties:
        hosts:
          items:
            format: hostname
            type: string
          type: array
          uniqueItems: true
        handles:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    getUser_200_response:
      oneOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/UserWithStats'
    getOAuthToken_request:
      discriminator:
        mapping:
          password: '#/components/schemas/OAuthToken-password'
          refresh_token: '#/components/schemas/OAuthToken-refresh_token'
        propertyName: grant_type
      oneOf:
      - $ref: '#/components/schemas/OAuthToken-password'
      - $ref: '#/components/schemas/OAuthToken-refresh_token'
    getOAuthToken_200_response:
      example:
        access_token: 90286a0bdf0f7315d9d3fe8dabf9e1d2be9c97d0
        refresh_token_expires_in: 1209600
        refresh_token: 2e0d675df9fc96d2e4ec8a3ebbbf45eca9137bb7
        token_type: Bearer
        expires_in: 14399
      properties:
        token_type:
          example: Bearer
          type: string
        access_token:
          description: valid for 1 day
          example: 90286a0bdf0f7315d9d3fe8dabf9e1d2be9c97d0
          type: string
        refresh_token:
          description: valid for 2 weeks
          example: 2e0d675df9fc96d2e4ec8a3ebbbf45eca9137bb7
          type: string
        expires_in:
          example: 14399
          minimum: 0
          type: integer
        refresh_token_expires_in:
          example: 1209600
          minimum: 0
          type: integer
      type: object
    resendEmailToVerifyUser_request:
      properties:
        email:
          description: User email
          type: string
      required:
      - email
      type: object
    resendEmailToVerifyRegistration_request:
      properties:
        email:
          description: Registration email
          type: string
      required:
      - email
      type: object
    verifyUser_request:
      properties:
        verificationString:
          format: url
          type: string
        isPendingEmail:
          type: boolean
      required:
      - verificationString
      type: object
    verifyRegistrationEmail_request:
      properties:
        verificationString:
          format: url
          type: string
      required:
      - verificationString
      type: object
    requestTwoFactor_request:
      properties:
        currentPassword:
          description: Password of the currently authenticated user
          type: string
      type: object
    confirmTwoFactorRequest_request:
      properties:
        requestToken:
          description: Token to identify the two factor request
          type: string
        otpToken:
          description: OTP token generated by the app
          type: string
      required:
      - otpToken
      - requestToken
      type: object
    getLatestUserImport_200_response_state:
      example:
        id: 6
        label: label
      properties:
        id:
          $ref: '#/components/schemas/UserImportState'
        label:
          type: string
      type: object
    getLatestUserImport_200_response:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: 0
        state:
          id: 6
          label: label
      properties:
        id:
          type: integer
        state:
          $ref: '#/components/schemas/getLatestUserImport_200_response_state'
        createdAt:
          format: date-time
          type: string
      type: object
    requestUserExport_request:
      properties:
        withVideoFiles:
          description: Whether to include video files in the archive
          type: boolean
      type: object
    requestUserExport_200_response_export:
      example:
        id: 0
      properties:
        id:
          type: integer
      type: object
    requestUserExport_200_response:
      example:
        export:
          id: 0
      properties:
        export:
          $ref: '#/components/schemas/requestUserExport_200_response_export'
      type: object
    listUserExports_200_response_state:
      example:
        id: 6
        label: label
      properties:
        id:
          $ref: '#/components/schemas/UserExportState'
        label:
          type: string
      type: object
    listUserExports_200_response:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        privateDownloadUrl: privateDownloadUrl
        size: 1
        expiresOn: 2000-01-23T04:56:07.000+00:00
        id: 0
        state:
          id: 6
          label: label
      properties:
        id:
          type: integer
        state:
          $ref: '#/components/schemas/listUserExports_200_response_state'
        size:
          description: Size of the archive file in bytes
          type: integer
        privateDownloadUrl:
          description: "This URL already contains the JWT token, so no additional\
            \ authentication credentials are required"
          type: string
        createdAt:
          format: date-time
          type: string
        expiresOn:
          format: date-time
          type: string
      type: object
    _api_v1_users_me_videos_comments_get_200_response:
      example:
        total: 1
        data:
        - threadId: "{}"
          inReplyToCommentId: "{}"
          createdAt: "{}"
          heldForReview: "{}"
          automaticTags:
          - automaticTags
          - automaticTags
          id: 42
          text: "{}"
          video:
            name: "{}"
            id: 42
            uuid: "{}"
          url: "{}"
          account: "{}"
          updatedAt: "{}"
        - threadId: "{}"
          inReplyToCommentId: "{}"
          createdAt: "{}"
          heldForReview: "{}"
          automaticTags:
          - automaticTags
          - automaticTags
          id: 42
          text: "{}"
          video:
            name: "{}"
            id: 42
            uuid: "{}"
          url: "{}"
          account: "{}"
          updatedAt: "{}"
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoCommentForOwnerOrAdmin'
          type: array
      type: object
    _api_v1_users_me_video_quota_used_get_200_response:
      example:
        videoQuotaUsedDaily: 1681014151
        videoQuotaUsed: 16810141515
      properties:
        videoQuotaUsed:
          description: The user video quota used so far in bytes
          example: 16810141515
          type: number
        videoQuotaUsedDaily:
          description: The user video quota used today in bytes
          example: 1681014151
          type: number
      type: object
    _api_v1_users_me_subscriptions_post_request:
      properties:
        uri:
          description: uri of the video channels to subscribe to
          format: uri
          type: string
      required:
      - uri
      type: object
    _api_v1_users_me_notifications_read_post_request:
      properties:
        ids:
          description: ids of the notifications to mark as read
          items:
            type: integer
          type: array
      required:
      - ids
      type: object
    _api_v1_users_me_notification_settings_put_request:
      properties:
        newVideoFromSubscription:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        newCommentOnMyVideo:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        abuseAsModerator:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        videoAutoBlacklistAsModerator:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        blacklistOnMyVideo:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        myVideoPublished:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        myVideoImportFinished:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        newFollow:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        newUserRegistration:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        commentMention:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        newInstanceFollower:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
        autoInstanceFollowing:
          description: |
            Notification type. One of the following values, or a sum of multiple values:
            - `0` NONE
            - `1` WEB
            - `2` EMAIL
          type: integer
      type: object
    _api_v1_users_me_history_videos_remove_post_request:
      properties:
        beforeDate:
          description: history before this date will be deleted
          format: date-time
          type: string
      type: object
    _api_v1_users_me_avatar_pick_post_request:
      properties:
        avatarfile:
          description: The file to upload
          format: binary
          type: string
      type: object
    _api_v1_users_me_avatar_pick_post_200_response:
      example:
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
      type: object
    listRegistrations_200_response:
      example:
        total: 1
        data:
        - accountDisplayName: accountDisplayName
          moderationResponse: moderationResponse
          emailVerified: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          channelDisplayName: channelDisplayName
          channelHandle: channelHandle
          id: 42
          state:
            id: 0
            label: label
          registrationReason: registrationReason
          user:
            id: 42
          email: email
          username: username
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - accountDisplayName: accountDisplayName
          moderationResponse: moderationResponse
          emailVerified: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          channelDisplayName: channelDisplayName
          channelHandle: channelHandle
          id: 42
          state:
            id: 0
            label: label
          registrationReason: registrationReason
          user:
            id: 42
          email: email
          username: username
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UserRegistration'
          type: array
      type: object
    _api_v1_videos_ownership__id__accept_post_id_parameter:
      oneOf:
      - $ref: '#/components/schemas/id'
      - $ref: '#/components/schemas/UUIDv4'
      - $ref: '#/components/schemas/shortUUID'
    _api_v1_videos__id__give_ownership_post_request:
      properties:
        username:
          type: string
      required:
      - username
      type: object
    putVideo_request:
      properties:
        thumbnailfile:
          description: Video thumbnail file
          format: binary
          type: string
        previewfile:
          description: Video preview file
          format: binary
          type: string
        category:
          $ref: '#/components/schemas/VideoCategorySet'
        licence:
          $ref: '#/components/schemas/VideoLicenceSet'
        language:
          $ref: '#/components/schemas/VideoLanguageSet'
        privacy:
          $ref: '#/components/schemas/VideoPrivacySet'
        description:
          description: Video description
          type: string
        waitTranscoding:
          description: Whether or not we wait transcoding before publish the video
          type: string
        support:
          description: A text tell the audience how to support the video creator
          example: Please support our work on https://soutenir.framasoft.org/en/ <3
          type: string
        nsfw:
          description: Whether or not this video contains sensitive content
          type: boolean
        name:
          description: Video name
          maxLength: 120
          minLength: 3
          type: string
        tags:
          description: Video tags (maximum 5 tags each between 2 and 30 characters)
          items:
            maxLength: 30
            minLength: 2
            type: string
          maxItems: 5
          minItems: 1
          type: array
        commentsEnabled:
          deprecated: true
          description: "Deprecated in 6.2, use commentsPolicy instead"
          type: boolean
        commentsPolicy:
          $ref: '#/components/schemas/VideoCommentsPolicySet'
        downloadEnabled:
          description: Enable or disable downloading for this video
          type: boolean
        originallyPublishedAt:
          description: Date when the content was originally published
          format: date-time
          nullable: true
          type: string
        scheduleUpdate:
          $ref: '#/components/schemas/VideoScheduledUpdate'
        videoPasswords:
          $ref: '#/components/schemas/AddVideoPasswords'
      type: object
    addLive_request:
      properties:
        channelId:
          description: Channel id that will contain this live video
          type: integer
        saveReplay:
          type: boolean
        replaySettings:
          $ref: '#/components/schemas/LiveVideoReplaySettings'
        permanentLive:
          description: User can stream multiple times in a permanent live
          type: boolean
        latencyMode:
          $ref: '#/components/schemas/LiveVideoLatencyMode'
        thumbnailfile:
          description: Live video/replay thumbnail file
          format: binary
          type: string
        previewfile:
          description: Live video/replay preview file
          format: binary
          type: string
        privacy:
          $ref: '#/components/schemas/VideoPrivacySet'
        category:
          $ref: '#/components/schemas/VideoCategorySet'
        licence:
          $ref: '#/components/schemas/VideoLicenceSet'
        language:
          $ref: '#/components/schemas/VideoLanguageSet'
        description:
          description: Live video/replay description
          type: string
        support:
          description: A text tell the audience how to support the creator
          example: Please support our work on https://soutenir.framasoft.org/en/ <3
          type: string
        nsfw:
          description: Whether or not this live video/replay contains sensitive content
          type: boolean
        name:
          description: Live video/replay name
          maxLength: 120
          minLength: 3
          type: string
        tags:
          description: Live video/replay tags (maximum 5 tags each between 2 and 30
            characters)
          items:
            maxLength: 30
            minLength: 2
            type: string
          maxItems: 5
          minItems: 1
          type: array
        commentsEnabled:
          deprecated: true
          description: "Deprecated in 6.2, use commentsPolicy instead"
          type: boolean
        commentsPolicy:
          $ref: '#/components/schemas/VideoCommentsPolicySet'
        downloadEnabled:
          description: Enable or disable downloading for the replay of this live video
          type: boolean
      required:
      - channelId
      - name
      type: object
    _api_v1_videos_live__id__sessions_get_200_response:
      example:
        total: 1
        data:
        - replayVideo:
            shortUUID: 2y84q2MQUMWPbiEcxNXMgC
            id: 1.4658129805029452
            uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          endDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          error: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - replayVideo:
            shortUUID: 2y84q2MQUMWPbiEcxNXMgC
            id: 1.4658129805029452
            uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          endDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          error: 6
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/LiveVideoSessionResponse'
          type: array
      type: object
    getMyAbuses_200_response:
      example:
        total: 1
        data:
        - predefinedReasons:
          - spamOrMisleading
          reason: The video is a spam
          createdAt: 2000-01-23T04:56:07.000+00:00
          moderationComment: Decided to ban the server since it spams us regularly
          id: 42
          state:
            id: 0
            label: label
          video:
            name: "{}"
            id: 42
            uuid: "{}"
          reporterAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - predefinedReasons:
          - spamOrMisleading
          reason: The video is a spam
          createdAt: 2000-01-23T04:56:07.000+00:00
          moderationComment: Decided to ban the server since it spams us regularly
          id: 42
          state:
            id: 0
            label: label
          video:
            name: "{}"
            id: 42
            uuid: "{}"
          reporterAccount:
            displayName: displayName
            description: description
            hostRedundancyAllowed: true
            followingCount: 0
            userId: ""
            url: http://example.com/aeiou
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Abuse'
          type: array
      type: object
    _api_v1_abuses_post_request_video:
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Video/properties/id'
          description: Video id to report
        startAt:
          description: Timestamp in the video that marks the beginning of the report
          format: seconds
          minimum: 0
          type: integer
        endAt:
          description: Timestamp in the video that marks the ending of the report
          format: seconds
          minimum: 0
          type: integer
      type: object
    _api_v1_abuses_post_request_comment:
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VideoComment/properties/id'
          description: Comment id to report
      type: object
    _api_v1_abuses_post_request_account:
      properties:
        id:
          description: Account id to report
          type: integer
      type: object
    _api_v1_abuses_post_request:
      properties:
        reason:
          description: Reason why the user reports this video
          maxLength: 3000
          minLength: 2
          type: string
        predefinedReasons:
          description: Reason categories that help triage reports
          items:
            enum:
            - violentOrAbusive
            - hatefulOrAbusive
            - spamOrMisleading
            - privacy
            - rights
            - serverRules
            - thumbnails
            - captions
            type: string
          maxItems: 8
          type: array
        video:
          $ref: '#/components/schemas/_api_v1_abuses_post_request_video'
        comment:
          $ref: '#/components/schemas/_api_v1_abuses_post_request_comment'
        account:
          $ref: '#/components/schemas/_api_v1_abuses_post_request_account'
      required:
      - reason
      type: object
    _api_v1_abuses_post_200_response_abuse:
      example:
        id: 42
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
      type: object
    _api_v1_abuses_post_200_response:
      example:
        abuse:
          id: 42
      properties:
        abuse:
          $ref: '#/components/schemas/_api_v1_abuses_post_200_response_abuse'
      type: object
    _api_v1_abuses__abuseId__put_request:
      properties:
        state:
          $ref: '#/components/schemas/AbuseStateSet'
        moderationComment:
          description: Update the report comment visible only to the moderation team
          maxLength: 3000
          minLength: 2
          type: string
      type: object
    _api_v1_abuses__abuseId__messages_get_200_response:
      example:
        total: 1
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          byModerator: true
          id: 42
          message: message
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          byModerator: true
          id: 42
          message: message
          account:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AbuseMessage'
          type: array
      type: object
    _api_v1_abuses__abuseId__messages_post_request:
      properties:
        message:
          description: Message to send
          maxLength: 3000
          minLength: 2
          type: string
      required:
      - message
      type: object
    getVideoBlocks_200_response:
      example:
        total: 1
        data:
        - duration: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          nsfw: true
          name: name
          description: description
          videoId: 42
          dislikes: 5
          id: 42
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          views: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
          likes: 1
        - duration: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          nsfw: true
          name: name
          description: description
          videoId: 42
          dislikes: 5
          id: 42
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          views: 6
          updatedAt: 2000-01-23T04:56:07.000+00:00
          likes: 1
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoBlacklist'
          type: array
      type: object
    listVideoStoryboards_200_response:
      example:
        storyboards:
        - storyboardPath: storyboardPath
          totalHeight: 0
          spriteHeight: 1
          spriteDuration: 5
          spriteWidth: 5
          totalWidth: 6
        - storyboardPath: storyboardPath
          totalHeight: 0
          spriteHeight: 1
          spriteDuration: 5
          spriteWidth: 5
          totalWidth: 6
      properties:
        storyboards:
          items:
            $ref: '#/components/schemas/Storyboard'
          type: array
      type: object
    getVideoCaptions_200_response:
      example:
        total: 1
        data:
        - captionPath: captionPath
          language:
            id: en
            label: English
        - captionPath: captionPath
          language:
            id: en
            label: English
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoCaption'
          type: array
      type: object
    generateVideoCaption_request:
      properties:
        forceTranscription:
          default: false
          type: boolean
      type: object
    addVideoCaption_request:
      properties:
        captionfile:
          description: The file to upload.
          format: binary
          type: string
      type: object
    replaceVideoChapters_request_chapters_inner:
      example:
        title: title
        timecode: 0
      properties:
        title:
          type: string
        timecode:
          type: integer
      type: object
    replaceVideoChapters_request:
      properties:
        chapters:
          items:
            $ref: '#/components/schemas/replaceVideoChapters_request_chapters_inner'
          type: array
      type: object
    _api_v1_videos__id__passwords_put_request:
      properties:
        passwords:
          items:
            $ref: '#/components/schemas/VideoPassword/properties/password'
          type: array
          uniqueItems: true
      type: object
    addVideoChannel_200_response:
      example:
        videoChannel:
          id: 42
      properties:
        videoChannel:
          $ref: '#/components/schemas/_api_v1_abuses_post_200_response_abuse'
      type: object
    _api_v1_video_channels__channelHandle__video_playlists_get_200_response:
      example:
        total: 1
        data:
        - videoLength: 0
          displayName: displayName
          shortUUID: ""
          description: description
          privacy:
            id: 6
            label: label
          type:
            id: 1
            label: label
          ownerAccount:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          videoChannel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailPath: thumbnailPath
          id: 42
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - videoLength: 0
          displayName: displayName
          shortUUID: ""
          description: description
          privacy:
            id: 6
            label: label
          type:
            id: 1
            label: label
          ownerAccount:
            displayName: displayName
            name: name
            host: host
            id: 0
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          videoChannel:
            displayName: displayName
            name: name
            host: host
            id: 42
            url: http://example.com/aeiou
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
          isLocal: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          thumbnailPath: thumbnailPath
          id: 42
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VideoPlaylist'
          type: array
      type: object
    _api_v1_video_channels__channelHandle__banner_pick_post_200_response:
      example:
        banners:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        banners:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
      type: object
    addVideoChannelSync_200_response:
      example:
        videoChannelSync:
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastSyncAt: 2000-01-23T04:56:07.000+00:00
          externalChannelUrl: https://youtube.com/c/UC_myfancychannel
          channel:
            displayName: Videos of Framasoft
            description: Videos made with <3 by Framasoft
            hostRedundancyAllowed: true
            ownerAccount:
              displayName: displayName
              description: description
              hostRedundancyAllowed: true
              followingCount: 0
              userId: ""
              url: http://example.com/aeiou
              createdAt: 2000-01-23T04:56:07.000+00:00
              name: ""
              host: host
              id: 42
              followersCount: 0
              avatars:
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              - path: path
                createdAt: 2000-01-23T04:56:07.000+00:00
                width: 0
                updatedAt: 2000-01-23T04:56:07.000+00:00
              updatedAt: 2000-01-23T04:56:07.000+00:00
            followingCount: 0
            banners:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            url: http://example.com/aeiou
            isLocal: true
            createdAt: 2000-01-23T04:56:07.000+00:00
            name: ""
            host: host
            id: 42
            followersCount: 0
            support: Please support our work on https://soutenir.framasoft.org/en/
              <3
            avatars:
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - path: path
              createdAt: 2000-01-23T04:56:07.000+00:00
              width: 0
              updatedAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          id: 42
          state:
            id: 2
            label: PROCESSING
      properties:
        videoChannelSync:
          $ref: '#/components/schemas/VideoChannelSync'
      type: object
    addPlaylist_request:
      properties:
        displayName:
          description: Video playlist display name
          maxLength: 120
          minLength: 1
          type: string
        thumbnailfile:
          description: Video playlist thumbnail file
          format: binary
          type: string
        privacy:
          $ref: '#/components/schemas/VideoPlaylistPrivacySet'
        description:
          description: Video playlist description
          maxLength: 1000
          minLength: 3
          type: string
        videoChannelId:
          allOf:
          - $ref: '#/components/schemas/id'
          description: Video channel in which the playlist will be published
      required:
      - displayName
      type: object
    addPlaylist_200_response_videoPlaylist:
      example:
        shortUUID: 2y84q2MQUMWPbiEcxNXMgC
        id: 42
        uuid: "{}"
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        uuid:
          $ref: '#/components/schemas/VideoPlaylist/properties/uuid'
        shortUUID:
          description: translation of a uuid v4 with a bigger alphabet to have a shorter
            uuid
          example: 2y84q2MQUMWPbiEcxNXMgC
          type: string
      type: object
    addPlaylist_200_response:
      example:
        videoPlaylist:
          shortUUID: 2y84q2MQUMWPbiEcxNXMgC
          id: 42
          uuid: "{}"
      properties:
        videoPlaylist:
          $ref: '#/components/schemas/addPlaylist_200_response_videoPlaylist'
      type: object
    _api_v1_video_playlists__playlistId__put_request:
      properties:
        displayName:
          description: Video playlist display name
          maxLength: 120
          minLength: 1
          type: string
        thumbnailfile:
          description: Video playlist thumbnail file
          format: binary
          type: string
        privacy:
          $ref: '#/components/schemas/VideoPlaylistPrivacySet'
        description:
          description: Video playlist description
          type: string
        videoChannelId:
          allOf:
          - $ref: '#/components/schemas/id'
          description: Video channel in which the playlist will be published
      type: object
    addVideoPlaylistVideo_request_videoId:
      description: Video to add in the playlist
      oneOf:
      - $ref: '#/components/schemas/Video/properties/uuid'
      - $ref: '#/components/schemas/Video/properties/id'
    addVideoPlaylistVideo_request:
      properties:
        videoId:
          $ref: '#/components/schemas/addVideoPlaylistVideo_request_videoId'
        startTimestamp:
          description: Start the video at this specific timestamp
          format: seconds
          type: integer
        stopTimestamp:
          description: Stop the video at this specific timestamp
          format: seconds
          type: integer
      required:
      - videoId
      type: object
    addVideoPlaylistVideo_200_response_videoPlaylistElement:
      example:
        id: 2
      properties:
        id:
          example: 2
          type: integer
      type: object
    addVideoPlaylistVideo_200_response:
      example:
        videoPlaylistElement:
          id: 2
      properties:
        videoPlaylistElement:
          $ref: '#/components/schemas/addVideoPlaylistVideo_200_response_videoPlaylistElement'
      type: object
    reorderVideoPlaylist_request:
      properties:
        startPosition:
          description: Start position of the element to reorder
          minimum: 1
          type: integer
        insertAfterPosition:
          description: "New position for the block to reorder, to add the block before\
            \ the first element"
          minimum: 0
          type: integer
        reorderLength:
          description: How many element from `startPosition` to reorder
          minimum: 1
          type: integer
      required:
      - insertAfterPosition
      - startPosition
      type: object
    putVideoPlaylistVideo_request:
      properties:
        startTimestamp:
          description: Start the video at this specific timestamp
          format: seconds
          type: integer
        stopTimestamp:
          description: Stop the video at this specific timestamp
          format: seconds
          type: integer
      type: object
    _api_v1_users_me_video_playlists_videos_exist_get_200_response_videoId_inner:
      example:
        playlistId: 6
        stopTimestamp: 5
        playlistElementId: 0
        startTimestamp: 1
      properties:
        playlistElementId:
          type: integer
        playlistId:
          type: integer
        startTimestamp:
          format: seconds
          type: integer
        stopTimestamp:
          type: integer
      type: object
    _api_v1_users_me_video_playlists_videos_exist_get_200_response:
      example:
        videoId:
        - playlistId: 6
          stopTimestamp: 5
          playlistElementId: 0
          startTimestamp: 1
        - playlistId: 6
          stopTimestamp: 5
          playlistElementId: 0
          startTimestamp: 1
      properties:
        videoId:
          items:
            $ref: '#/components/schemas/_api_v1_users_me_video_playlists_videos_exist_get_200_response_videoId_inner'
          type: array
      type: object
    _api_v1_videos__id__comment_threads_post_request:
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/VideoComment/properties/text'
          format: markdown
          maxLength: 10000
      required:
      - text
      type: object
    _api_v1_videos__id__rate_put_request:
      properties:
        rating:
          enum:
          - like
          - dislike
          type: string
      required:
      - rating
      type: object
    createVideoTranscoding_request:
      properties:
        transcodingType:
          enum:
          - hls
          - web-video
          type: string
        forceTranscoding:
          default: false
          description: "If the video is stuck in transcoding state, do it anyway"
          type: boolean
      required:
      - transcodingType
      type: object
    _api_v1_server_blocklist_accounts_post_request:
      properties:
        accountName:
          description: "account to block, in the form `username@domain`"
          example: chocobozzz@example.org
          type: string
      required:
      - accountName
      type: object
    _api_v1_server_blocklist_servers_post_request:
      properties:
        host:
          description: server domain to block
          format: hostname
          type: string
      required:
      - host
      type: object
    _api_v1_server_redundancy__host__put_request:
      properties:
        redundancyAllowed:
          description: allow mirroring of the host's local videos
          type: boolean
      required:
      - redundancyAllowed
      type: object
    putMirroredVideo_request:
      properties:
        videoId:
          example: 42
          minimum: 1
          type: integer
      required:
      - videoId
      type: object
    addPlugin_request_oneOf:
      additionalProperties: false
      properties:
        npmName:
          example: peertube-plugin-auth-ldap
          type: string
      required:
      - npmName
      type: object
    addPlugin_request_oneOf_1:
      additionalProperties: false
      properties:
        path:
          type: string
      required:
      - path
      type: object
    addPlugin_request:
      oneOf:
      - $ref: '#/components/schemas/addPlugin_request_oneOf'
      - $ref: '#/components/schemas/addPlugin_request_oneOf_1'
    uninstallPlugin_request:
      properties:
        npmName:
          description: name of the plugin/theme in its package.json
          example: peertube-plugin-auth-ldap
          type: string
      required:
      - npmName
      type: object
    _api_v1_plugins__npmName__settings_put_request:
      properties:
        settings:
          additionalProperties: true
          type: object
      type: object
    _api_v1_runners_registration_tokens_get_200_response:
      example:
        total: 1
        data:
        - registrationToken: registrationToken
          createdAt: 2000-01-23T04:56:07.000+00:00
          registeredRunnersCount: 6
          id: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - registrationToken: registrationToken
          createdAt: 2000-01-23T04:56:07.000+00:00
          registeredRunnersCount: 6
          id: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/RunnerRegistrationToken'
          type: array
      type: object
    _api_v1_runners_register_post_request:
      properties:
        registrationToken:
          type: string
        name:
          type: string
        description:
          type: string
      required:
      - name
      - registrationToken
      type: object
    _api_v1_runners_register_post_200_response:
      example:
        id: 0
        runnerToken: runnerToken
      properties:
        id:
          description: Runner id
          type: integer
        runnerToken:
          type: string
      type: object
    _api_v1_runners_unregister_post_request:
      properties:
        runnerToken:
          type: string
      required:
      - runnerToken
      type: object
    _api_v1_runners_get_200_response:
      example:
        total: 1
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          ip: ip
          name: name
          description: description
          id: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastContact: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          ip: ip
          name: name
          description: description
          id: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastContact: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Runner'
          type: array
      type: object
    _api_v1_runners_jobs_request_post_200_response_availableJobs_inner:
      example:
        payload:
          output:
            fps: 6.027456183070403
            resolution: 0.8008281904610115
          input:
            videoFileUrl: videoFileUrl
        type: vod-web-video-transcoding
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
      properties:
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        type:
          $ref: '#/components/schemas/RunnerJobType'
        payload:
          $ref: '#/components/schemas/RunnerJobPayload'
      type: object
    _api_v1_runners_jobs_request_post_200_response:
      example:
        availableJobs:
        - payload:
            output:
              fps: 6.027456183070403
              resolution: 0.8008281904610115
            input:
              videoFileUrl: videoFileUrl
          type: vod-web-video-transcoding
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        - payload:
            output:
              fps: 6.027456183070403
              resolution: 0.8008281904610115
            input:
              videoFileUrl: videoFileUrl
          type: vod-web-video-transcoding
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
      properties:
        availableJobs:
          items:
            $ref: '#/components/schemas/_api_v1_runners_jobs_request_post_200_response_availableJobs_inner'
          type: array
      type: object
    _api_v1_runners_jobs__jobUUID__accept_post_200_response_job:
      allOf:
      - $ref: '#/components/schemas/RunnerJob'
      - properties:
          jobToken:
            type: string
        type: object
      example:
        parent:
          state:
            id: 0
            label: Processing
          type: null
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        jobToken: jobToken
        failures: 6
        startedAt: 2000-01-23T04:56:07.000+00:00
        type: vod-web-video-transcoding
        error: error
        priority: 5
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
        finishedAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        payload:
          output:
            fps: 6.027456183070403
            resolution: 0.8008281904610115
          input:
            videoFileUrl: videoFileUrl
        progress: 1
        state:
          id: 0
          label: Processing
        runner:
          name: name
          description: description
          id: 5.637376656633329
        updatedAt: 2000-01-23T04:56:07.000+00:00
    _api_v1_runners_jobs__jobUUID__accept_post_200_response:
      example:
        job:
          parent:
            state:
              id: 0
              label: Processing
            type: null
            uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          jobToken: jobToken
          failures: 6
          startedAt: 2000-01-23T04:56:07.000+00:00
          type: vod-web-video-transcoding
          error: error
          priority: 5
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          finishedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          payload:
            output:
              fps: 6.027456183070403
              resolution: 0.8008281904610115
            input:
              videoFileUrl: videoFileUrl
          progress: 1
          state:
            id: 0
            label: Processing
          runner:
            name: name
            description: description
            id: 5.637376656633329
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        job:
          $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__accept_post_200_response_job'
      type: object
    _api_v1_runners_jobs__jobUUID__abort_post_request:
      properties:
        runnerToken:
          type: string
        jobToken:
          type: string
        reason:
          description: Why the runner aborts this job
          type: string
      required:
      - jobToken
      - reason
      - runnerToken
      type: object
    _api_v1_runners_jobs__jobUUID__update_post_request_payload:
      description: Provide live transcoding chunks update
      properties:
        type:
          enum:
          - add-chunk
          - remove-chunk
          type: string
        masterPlaylistFile:
          format: binary
          type: string
        resolutionPlaylistFile:
          format: binary
          type: string
        resolutionPlaylistFilename:
          type: string
        videoChunkFile:
          format: binary
          type: string
        videoChunkFilename:
          type: string
      type: object
    _api_v1_runners_jobs__jobUUID__update_post_request:
      properties:
        runnerToken:
          type: string
        jobToken:
          type: string
        progress:
          description: Update job progression percentage (optional)
          type: integer
        payload:
          $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__update_post_request_payload'
      required:
      - jobToken
      - runnerToken
      type: object
    _api_v1_runners_jobs__jobUUID__error_post_request:
      properties:
        runnerToken:
          type: string
        jobToken:
          type: string
        message:
          description: Why the runner failed to process this job
          type: string
      required:
      - jobToken
      - message
      - runnerToken
      type: object
    VOD_web_video_transcoding:
      properties:
        videoFile:
          format: binary
          type: string
      title: VOD web video transcoding
      type: object
    VOD_HLS_transcoding:
      properties:
        videoFile:
          format: binary
          type: string
        resolutionPlaylistFile:
          format: binary
          type: string
      title: VOD HLS transcoding
      type: object
    VOD_audio_merge_transcoding:
      properties:
        videoFile:
          format: binary
          type: string
      title: VOD audio merge transcoding
      type: object
    _api_v1_runners_jobs__jobUUID__success_post_request_payload:
      anyOf:
      - $ref: '#/components/schemas/VOD_web_video_transcoding'
      - $ref: '#/components/schemas/VOD_HLS_transcoding'
      - $ref: '#/components/schemas/VOD_audio_merge_transcoding'
      - title: Live RTMP to HLS transcoding
        type: object
    _api_v1_runners_jobs__jobUUID__success_post_request:
      properties:
        runnerToken:
          type: string
        jobToken:
          type: string
        payload:
          $ref: '#/components/schemas/_api_v1_runners_jobs__jobUUID__success_post_request_payload'
      required:
      - jobToken
      - payload
      - runnerToken
      type: object
    _api_v1_runners_jobs_get_200_response:
      example:
        total: 1
        data:
        - parent:
            state:
              id: 0
              label: Processing
            type: null
            uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          privatePayload: null
          failures: 0
          startedAt: 2000-01-23T04:56:07.000+00:00
          type: vod-web-video-transcoding
          error: error
          priority: 1
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          finishedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          payload:
            output:
              fps: 6.027456183070403
              resolution: 0.8008281904610115
            input:
              videoFileUrl: videoFileUrl
          progress: 6
          state:
            id: 0
            label: Processing
          runner:
            name: name
            description: description
            id: 5.637376656633329
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - parent:
            state:
              id: 0
              label: Processing
            type: null
            uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          privatePayload: null
          failures: 0
          startedAt: 2000-01-23T04:56:07.000+00:00
          type: vod-web-video-transcoding
          error: error
          priority: 1
          uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          finishedAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          payload:
            output:
              fps: 6.027456183070403
              resolution: 0.8008281904610115
            input:
              videoFileUrl: videoFileUrl
          progress: 6
          state:
            id: 0
            label: Processing
          runner:
            name: name
            description: description
            id: 5.637376656633329
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/RunnerJobAdmin'
          type: array
      type: object
    _api_v1_automatic_tags_policies_accounts__accountName__comments_put_request:
      properties:
        review:
          description: Auto tags that automatically set the comment in review state
          items:
            type: string
          type: array
      type: object
    _api_v1_watched_words_accounts__accountName__lists_get_200_response:
      example:
        total: 1
        data:
        - createdAt: 2021-05-04T08:01:01.502Z
          words:
          - words
          - words
          id: 42
          listName: listName
          updatedAt: 2021-05-04T08:01:01.502Z
        - createdAt: 2021-05-04T08:01:01.502Z
          words:
          - words
          - words
          id: 42
          listName: listName
          updatedAt: 2021-05-04T08:01:01.502Z
      properties:
        total:
          example: 1
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WatchedWordsLists'
          type: array
    _api_v1_watched_words_accounts__accountName__lists_post_request:
      properties:
        listName:
          type: string
        words:
          items:
            type: string
          type: array
      type: object
    _api_v1_watched_words_accounts__accountName__lists_post_200_response:
      example:
        watchedWordsList:
          id: 0
      properties:
        watchedWordsList:
          $ref: '#/components/schemas/requestUserExport_200_response_export'
      type: object
    BlockStatus_accounts_value:
      example:
        blockedByServer: true
        blockedByUser: true
      properties:
        blockedByServer:
          type: boolean
        blockedByUser:
          type: boolean
      type: object
      x-additionalPropertiesName: account
    BlockStatus_hosts_value:
      example:
        blockedByServer: true
        blockedByUser: true
      properties:
        blockedByServer:
          type: boolean
        blockedByUser:
          type: boolean
      type: object
      x-additionalPropertiesName: host
    VideoStreamingPlaylists_HLS_redundancies_inner:
      example:
        baseUrl: http://example.com/aeiou
      properties:
        baseUrl:
          format: url
          type: string
      type: object
    Video_userHistory:
      example:
        currentTime: 6
      nullable: true
      properties:
        currentTime:
          type: integer
      type: object
    VideoRedundancy_redundancies:
      example:
        files:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 0
          fileUrl: http://example.com/aeiou
          expiresOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          strategy: manual
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 0
          fileUrl: http://example.com/aeiou
          expiresOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          strategy: manual
          updatedAt: 2000-01-23T04:56:07.000+00:00
        streamingPlaylists:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 0
          fileUrl: http://example.com/aeiou
          expiresOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          strategy: manual
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          size: 0
          fileUrl: http://example.com/aeiou
          expiresOn: 2000-01-23T04:56:07.000+00:00
          id: 42
          strategy: manual
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileRedundancyInformation'
          type: array
        streamingPlaylists:
          items:
            $ref: '#/components/schemas/FileRedundancyInformation'
          type: array
      type: object
    AutomaticTagAvailable_available_inner:
      example:
        name: name
        type: core
      properties:
        name:
          description: tag name
          type: string
        type:
          enum:
          - core
          - watched-words-list
          type: string
      type: object
    VideoStatsOverall_countries_inner:
      example:
        viewers: 5.962133916683182
        isoCode: isoCode
      properties:
        isoCode:
          type: string
        viewers:
          type: number
      type: object
    VideoStatsRetention_data_inner:
      example:
        retentionPercent: 6.027456183070403
        second: 0.8008281904610115
      properties:
        second:
          type: number
        retentionPercent:
          type: number
      type: object
    VideoStatsTimeserie_data_inner:
      example:
        date: date
        value: 0.8008281904610115
      properties:
        date:
          type: string
        value:
          type: number
      type: object
    ServerConfig_instance_customizations:
      example:
        css: css
        javascript: javascript
      properties:
        javascript:
          type: string
        css:
          type: string
      type: object
    ServerConfig_instance:
      example:
        defaultClientRoute: defaultClientRoute
        isNSFW: true
        name: name
        shortDescription: shortDescription
        defaultNSFWPolicy: defaultNSFWPolicy
        banners:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        customizations:
          css: css
          javascript: javascript
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        shortDescription:
          type: string
        defaultClientRoute:
          type: string
        isNSFW:
          type: boolean
        defaultNSFWPolicy:
          type: string
        customizations:
          $ref: '#/components/schemas/ServerConfig_instance_customizations'
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
        banners:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
      type: object
    ServerConfig_search_remoteUri:
      example:
        anonymous: true
        users: true
      properties:
        users:
          type: boolean
        anonymous:
          type: boolean
      type: object
    ServerConfig_search:
      example:
        remoteUri:
          anonymous: true
          users: true
      properties:
        remoteUri:
          $ref: '#/components/schemas/ServerConfig_search_remoteUri'
      type: object
    ServerConfig_plugin:
      example:
        registered:
        - registered
        - registered
      properties:
        registered:
          items:
            type: string
          type: array
      type: object
    ServerConfig_email:
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      type: object
    ServerConfig_signup:
      example:
        requiresEmailVerification: true
        allowed: true
        allowedForCurrentIP: true
      properties:
        allowed:
          type: boolean
        allowedForCurrentIP:
          type: boolean
        requiresEmailVerification:
          type: boolean
      type: object
    ServerConfig_transcoding:
      example:
        web_videos:
          enabled: true
        enabledResolutions:
        - 240
        - 240
        hls:
          enabled: true
      properties:
        hls:
          $ref: '#/components/schemas/ServerConfig_email'
        web_videos:
          $ref: '#/components/schemas/ServerConfig_email'
        enabledResolutions:
          items:
            $ref: '#/components/schemas/VideoResolutionSet'
          type: array
      type: object
    ServerConfig_import_videos:
      example:
        torrent:
          enabled: true
        http:
          enabled: true
      properties:
        http:
          $ref: '#/components/schemas/ServerConfig_email'
        torrent:
          $ref: '#/components/schemas/ServerConfig_email'
      type: object
    ServerConfig_import:
      example:
        videos:
          torrent:
            enabled: true
          http:
            enabled: true
        videoChannelSynchronization:
          enabled: true
        users:
          enabled: true
      properties:
        videos:
          $ref: '#/components/schemas/ServerConfig_import_videos'
        videoChannelSynchronization:
          $ref: '#/components/schemas/ServerConfig_email'
        users:
          $ref: '#/components/schemas/ServerConfig_email'
      type: object
    ServerConfig_export_users:
      example:
        exportExpiration: 0.8008281904610115
        maxUserVideoQuota: 6.027456183070403
        enabled: true
      properties:
        enabled:
          type: boolean
        exportExpiration:
          description: In milliseconds
          type: number
        maxUserVideoQuota:
          description: In bytes
          type: number
      type: object
    ServerConfig_export:
      example:
        users:
          exportExpiration: 0.8008281904610115
          maxUserVideoQuota: 6.027456183070403
          enabled: true
      properties:
        users:
          $ref: '#/components/schemas/ServerConfig_export_users'
      type: object
    ServerConfig_autoBlacklist_videos:
      example:
        ofUsers:
          enabled: true
      properties:
        ofUsers:
          $ref: '#/components/schemas/ServerConfig_email'
      type: object
    ServerConfig_autoBlacklist:
      example:
        videos:
          ofUsers:
            enabled: true
      properties:
        videos:
          $ref: '#/components/schemas/ServerConfig_autoBlacklist_videos'
      type: object
    ServerConfig_avatar_file_size:
      example:
        max: 1
      properties:
        max:
          type: integer
      type: object
    ServerConfig_avatar_file:
      example:
        size:
          max: 1
      properties:
        size:
          $ref: '#/components/schemas/ServerConfig_avatar_file_size'
      type: object
    ServerConfig_avatar:
      example:
        extensions:
        - extensions
        - extensions
        file:
          size:
            max: 1
      properties:
        file:
          $ref: '#/components/schemas/ServerConfig_avatar_file'
        extensions:
          items:
            type: string
          type: array
      type: object
    ServerConfig_video_image:
      example:
        extensions:
        - extensions
        - extensions
        size:
          max: 1
      properties:
        extensions:
          items:
            type: string
          type: array
        size:
          $ref: '#/components/schemas/ServerConfig_avatar_file_size'
      type: object
    ServerConfig_video_file:
      example:
        extensions:
        - extensions
        - extensions
      properties:
        extensions:
          items:
            type: string
          type: array
      type: object
    ServerConfig_video:
      example:
        image:
          extensions:
          - extensions
          - extensions
          size:
            max: 1
        file:
          extensions:
          - extensions
          - extensions
      properties:
        image:
          $ref: '#/components/schemas/ServerConfig_video_image'
        file:
          $ref: '#/components/schemas/ServerConfig_video_file'
      type: object
    ServerConfig_videoCaption_file:
      example:
        extensions:
        - extensions
        - extensions
        size:
          max: 1
      properties:
        size:
          $ref: '#/components/schemas/ServerConfig_avatar_file_size'
        extensions:
          items:
            type: string
          type: array
      type: object
    ServerConfig_videoCaption:
      example:
        file:
          extensions:
          - extensions
          - extensions
          size:
            max: 1
      properties:
        file:
          $ref: '#/components/schemas/ServerConfig_videoCaption_file'
      type: object
    ServerConfig_user:
      example:
        videoQuota: 16810141515
        videoQuotaDaily: 1681014151
      properties:
        videoQuota:
          description: In bytes
          example: 16810141515
          type: integer
        videoQuotaDaily:
          description: In bytes
          example: 1681014151
          type: integer
      type: object
    ServerConfig_trending_videos:
      example:
        intervalDays: 5
      properties:
        intervalDays:
          type: integer
      type: object
    ServerConfig_trending:
      example:
        videos:
          intervalDays: 5
      properties:
        videos:
          $ref: '#/components/schemas/ServerConfig_trending_videos'
      type: object
    ServerConfig_followings_instance_autoFollowIndex:
      example:
        indexUrl: http://example.com/aeiou
      properties:
        indexUrl:
          format: url
          type: string
      type: object
    ServerConfig_followings_instance:
      example:
        autoFollowIndex:
          indexUrl: http://example.com/aeiou
      properties:
        autoFollowIndex:
          $ref: '#/components/schemas/ServerConfig_followings_instance_autoFollowIndex'
      type: object
    ServerConfig_followings:
      example:
        instance:
          autoFollowIndex:
            indexUrl: http://example.com/aeiou
      properties:
        instance:
          $ref: '#/components/schemas/ServerConfig_followings_instance'
      type: object
    ServerConfig_openTelemetry_metrics:
      example:
        playbackStatsInterval: 5.637376656633329
        enabled: true
      properties:
        enabled:
          type: boolean
        playbackStatsInterval:
          description: Milliseconds
          type: number
      type: object
    ServerConfig_openTelemetry:
      description: PeerTube >= 6.1
      example:
        metrics:
          playbackStatsInterval: 5.637376656633329
          enabled: true
      properties:
        metrics:
          $ref: '#/components/schemas/ServerConfig_openTelemetry_metrics'
      type: object
    ServerConfig_views_views_watchingInterval:
      example:
        anonymous: 2.3021358869347655
        users: 7.061401241503109
      properties:
        anonymous:
          description: Milliseconds
          type: number
        users:
          description: Milliseconds
          type: number
      type: object
    ServerConfig_views_views:
      example:
        watchingInterval:
          anonymous: 2.3021358869347655
          users: 7.061401241503109
      properties:
        watchingInterval:
          $ref: '#/components/schemas/ServerConfig_views_views_watchingInterval'
      type: object
    ServerConfig_views:
      description: PeerTube >= 6.1
      example:
        views:
          watchingInterval:
            anonymous: 2.3021358869347655
            users: 7.061401241503109
      properties:
        views:
          $ref: '#/components/schemas/ServerConfig_views_views'
      type: object
    ServerStats_videosRedundancy_inner:
      example:
        totalSize: 5.025004791520295
        totalUsed: 9.965781217890562
        totalVideos: 6.683562403749608
        strategy: strategy
        totalVideoFiles: 9.369310271410669
      properties:
        strategy:
          type: string
        totalSize:
          type: number
        totalUsed:
          type: number
        totalVideoFiles:
          type: number
        totalVideos:
          type: number
      type: object
    ServerConfigAbout_instance:
      example:
        codeOfConduct: codeOfConduct
        languages:
        - languages
        - languages
        maintenanceLifetime: maintenanceLifetime
        businessModel: businessModel
        description: description
        shortDescription: shortDescription
        creationReason: creationReason
        banners:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        hardwareInformation: hardwareInformation
        administrator: administrator
        terms: terms
        name: name
        categories:
        - 0
        - 0
        moderationInformation: moderationInformation
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        shortDescription:
          type: string
        description:
          type: string
        terms:
          type: string
        codeOfConduct:
          type: string
        hardwareInformation:
          type: string
        creationReason:
          type: string
        moderationInformation:
          type: string
        administrator:
          type: string
        maintenanceLifetime:
          type: string
        businessModel:
          type: string
        languages:
          items:
            type: string
          type: array
        categories:
          items:
            type: integer
          type: array
        avatars:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
        banners:
          items:
            $ref: '#/components/schemas/ActorImage'
          type: array
      type: object
    ServerConfigCustom_instance:
      example:
        terms: terms
        defaultClientRoute: defaultClientRoute
        isNSFW: true
        name: name
        description: description
        shortDescription: shortDescription
        defaultNSFWPolicy: defaultNSFWPolicy
        customizations:
          css: css
          javascript: javascript
      properties:
        name:
          type: string
        shortDescription:
          type: string
        description:
          type: string
        terms:
          type: string
        defaultClientRoute:
          type: string
        isNSFW:
          type: boolean
        defaultNSFWPolicy:
          type: string
        customizations:
          $ref: '#/components/schemas/ServerConfig_instance_customizations'
      type: object
    ServerConfigCustom_theme:
      example:
        default: default
      properties:
        default:
          type: string
      type: object
    ServerConfigCustom_services_twitter:
      example:
        username: username
      properties:
        username:
          type: string
      type: object
    ServerConfigCustom_services:
      example:
        twitter:
          username: username
      properties:
        twitter:
          $ref: '#/components/schemas/ServerConfigCustom_services_twitter'
      type: object
    ServerConfigCustom_cache_previews:
      example:
        size: 0
      properties:
        size:
          type: integer
      type: object
    ServerConfigCustom_cache:
      example:
        previews:
          size: 0
        captions:
          size: 0
      properties:
        previews:
          $ref: '#/components/schemas/ServerConfigCustom_cache_previews'
        captions:
          $ref: '#/components/schemas/ServerConfigCustom_cache_previews'
      type: object
    ServerConfigCustom_signup:
      example:
        requiresEmailVerification: true
        limit: 6
        enabled: true
      properties:
        enabled:
          type: boolean
        limit:
          type: integer
        requiresEmailVerification:
          type: boolean
      type: object
    ServerConfigCustom_admin:
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      type: object
    ServerConfigCustom_user:
      description: "Settings that apply to new users, if registration is enabled"
      example:
        videoQuota: 16810141515
        videoQuotaDaily: 1681014151
      properties:
        videoQuota:
          example: 16810141515
          type: integer
        videoQuotaDaily:
          example: 1681014151
          type: integer
      type: object
    ServerConfigCustom_transcoding_originalFile:
      example:
        keep: true
      properties:
        keep:
          type: boolean
      type: object
    ServerConfigCustom_transcoding_resolutions:
      description: Resolutions to transcode _new videos_ to
      example:
        "0p": true
        "1080p": true
        "2160p": true
        "720p": true
        "360p": true
        "240p": true
        "144p": true
        "1440p": true
        "480p": true
      properties:
        "0p":
          type: boolean
        "144p":
          type: boolean
        "240p":
          type: boolean
        "360p":
          type: boolean
        "480p":
          type: boolean
        "720p":
          type: boolean
        "1080p":
          type: boolean
        "1440p":
          type: boolean
        "2160p":
          type: boolean
      type: object
    ServerConfigCustom_transcoding_web_videos:
      description: Web Video specific settings
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      type: object
    ServerConfigCustom_transcoding_hls:
      description: HLS specific settings
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      type: object
    ServerConfigCustom_transcoding:
      description: Settings pertaining to transcoding jobs
      example:
        allowAdditionalExtensions: true
        originalFile:
          keep: true
        profile: default
        threads: 1
        resolutions:
          "0p": true
          "1080p": true
          "2160p": true
          "720p": true
          "360p": true
          "240p": true
          "144p": true
          "1440p": true
          "480p": true
        web_videos:
          enabled: true
        allowAudioFiles: true
        enabled: true
        hls:
          enabled: true
        concurrency: 5.962133916683182
      properties:
        enabled:
          type: boolean
        originalFile:
          $ref: '#/components/schemas/ServerConfigCustom_transcoding_originalFile'
        allowAdditionalExtensions:
          description: "Allow your users to upload .mkv, .mov, .avi, .wmv, .flv, .f4v,\
            \ .3g2, .3gp, .mts, m2ts, .mxf, .nut videos"
          type: boolean
        allowAudioFiles:
          description: "If a user uploads an audio file, PeerTube will create a video\
            \ by merging the preview file and the audio file"
          type: boolean
        threads:
          description: Amount of threads used by ffmpeg for 1 transcoding job
          type: integer
        concurrency:
          description: Amount of transcoding jobs to execute in parallel
          type: number
        profile:
          description: |
            New profiles can be added by plugins ; available in core PeerTube: 'default'.
          enum:
          - default
          type: string
        resolutions:
          $ref: '#/components/schemas/ServerConfigCustom_transcoding_resolutions'
        web_videos:
          $ref: '#/components/schemas/ServerConfigCustom_transcoding_web_videos'
        hls:
          $ref: '#/components/schemas/ServerConfigCustom_transcoding_hls'
      type: object
    ServerConfigCustom_import:
      example:
        video_channel_synchronization:
          enabled: true
        videos:
          torrent:
            enabled: true
          http:
            enabled: true
      properties:
        videos:
          $ref: '#/components/schemas/ServerConfig_import_videos'
        video_channel_synchronization:
          $ref: '#/components/schemas/ServerConfig_email'
      type: object
    ServerConfigCustom_followers_instance:
      example:
        manualApproval: true
        enabled: true
      properties:
        enabled:
          type: boolean
        manualApproval:
          type: boolean
      type: object
    ServerConfigCustom_followers:
      example:
        instance:
          manualApproval: true
          enabled: true
      properties:
        instance:
          $ref: '#/components/schemas/ServerConfigCustom_followers_instance'
      type: object
    AddUserResponse_user:
      example:
        id: 42
        account:
          id: 42
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        account:
          $ref: '#/components/schemas/_api_v1_abuses_post_200_response_abuse'
      type: object
    VideoUploadResponse_video:
      example:
        shortUUID: 2y84q2MQUMWPbiEcxNXMgC
        id: 42
        uuid: "{}"
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        uuid:
          $ref: '#/components/schemas/Video/properties/uuid'
        shortUUID:
          description: translation of a uuid v4 with a bigger alphabet to have a shorter
            uuid
          example: 2y84q2MQUMWPbiEcxNXMgC
          type: string
      type: object
    VideoTokenResponse_files:
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        token:
          type: string
        expires:
          format: date-time
          type: string
      type: object
    User_role:
      example:
        id: 2
        label: User
      properties:
        id:
          $ref: '#/components/schemas/UserRole'
        label:
          enum:
          - User
          - Moderator
          - Administrator
          type: string
      type: object
    RegisterUser_channel:
      description: channel base information used to create the first channel of the
        user
      example:
        displayName: displayName
        name: framasoft_videos
      properties:
        name:
          description: "immutable name of the channel, used to interact with its actor"
          example: framasoft_videos
          maxLength: 50
          minLength: 1
          pattern: "/^[a-zA-Z0-9\\\\-_.:]+$/"
          type: string
        displayName:
          type: string
      type: object
    UserRegistration_state:
      example:
        id: 0
        label: label
      properties:
        id:
          description: "The registration state (Pending = `1`, Rejected = `2`, Accepted\
            \ = `3`)"
          enum:
          - 1
          - 2
          - 3
          type: integer
        label:
          type: string
      type: object
    UserRegistration_user:
      description: "If the registration has been accepted, this is a partial user\
        \ object created by the registration"
      example:
        id: 42
      nullable: true
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
      type: object
    VideoChannelList_data_inner:
      allOf:
      - $ref: '#/components/schemas/VideoChannel'
      - $ref: '#/components/schemas/Actor'
      example:
        displayName: Videos of Framasoft
        description: Videos made with <3 by Framasoft
        hostRedundancyAllowed: true
        ownerAccount:
          displayName: displayName
          description: description
          hostRedundancyAllowed: true
          followingCount: 0
          userId: ""
          url: http://example.com/aeiou
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: ""
          host: host
          id: 42
          followersCount: 0
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        followingCount: 0
        banners:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        url: http://example.com/aeiou
        isLocal: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: ""
        host: host
        id: 42
        followersCount: 0
        support: Please support our work on https://soutenir.framasoft.org/en/ <3
        avatars:
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - path: path
          createdAt: 2000-01-23T04:56:07.000+00:00
          width: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
    VideoChannelSync_state:
      example:
        id: 2
        label: PROCESSING
      properties:
        id:
          example: 2
          type: integer
        label:
          example: PROCESSING
          type: string
      type: object
    VideoCommentsForXML_inner:
      example:
        link: http://example.com/aeiou
        dc:creator: dc:creator
        guid: guid
        content:encoded: content:encoded
        pubDate: 2000-01-23T04:56:07.000+00:00
      properties:
        link:
          format: url
          type: string
        guid:
          type: string
        pubDate:
          format: date-time
          type: string
        content:encoded:
          type: string
        dc:creator:
          type: string
      type: object
      xml:
        name: item
    VideosForXML_inner_media_community_media_statistics:
      example:
        views: 6
      properties:
        views:
          type: integer
          xml:
            attribute: true
      type: object
    VideosForXML_inner_media_community:
      description: "see [media:community](https://www.rssboard.org/media-rss#media-community)\
        \ (MRSS)"
      example:
        media:statistics:
          views: 6
      properties:
        media:statistics:
          $ref: '#/components/schemas/VideosForXML_inner_media_community_media_statistics'
      type: object
    VideosForXML_inner_media_embed:
      example:
        url: http://example.com/aeiou
      properties:
        url:
          description: "video embed path, relative to the canonical URL domain (MRSS)"
          format: url
          type: string
          xml:
            attribute: true
      type: object
    VideosForXML_inner_media_player:
      example:
        url: http://example.com/aeiou
      properties:
        url:
          description: "video watch path, relative to the canonical URL domain (MRSS)"
          format: url
          type: string
          xml:
            attribute: true
      type: object
    VideosForXML_inner_media_thumbnail:
      example:
        width: 5
        url: http://example.com/aeiou
        height: 1
      properties:
        url:
          format: url
          type: string
          xml:
            attribute: true
        height:
          type: integer
          xml:
            attribute: true
        width:
          type: integer
          xml:
            attribute: true
      type: object
    VideosForXML_inner_enclosure:
      description: main streamable file for the video
      example:
        length: 5
        type: application/x-bittorrent
        url: http://example.com/aeiou
      properties:
        url:
          format: url
          type: string
          xml:
            attribute: true
        type:
          enum:
          - application/x-bittorrent
          type: string
          xml:
            attribute: true
        length:
          type: integer
          xml:
            attribute: true
      type: object
    VideosForXML_inner_media_group_inner:
      anyOf:
      - $ref: '#/components/schemas/MRSSPeerLink'
      - $ref: '#/components/schemas/MRSSGroupContent'
    VideosForXML_inner:
      example:
        media:description: media:description
        media:rating: nonadult
        media:thumbnail:
          width: 5
          url: http://example.com/aeiou
          height: 1
        link: http://example.com/aeiou
        dc:creator: dc:creator
        description: description
        media:embed:
          url: http://example.com/aeiou
        pubDate: 2000-01-23T04:56:07.000+00:00
        media:player:
          url: http://example.com/aeiou
        media:group:
        - href: href
          type: application/x-bittorrent
        - href: href
          type: application/x-bittorrent
        enclosure:
          length: 5
          type: application/x-bittorrent
          url: http://example.com/aeiou
        media:title: media:title
        guid: guid
        media:community:
          media:statistics:
            views: 6
        content:encoded: content:encoded
        media:category: 0
      properties:
        link:
          description: video watch page URL
          format: url
          type: string
        guid:
          description: video canonical URL
          type: string
        pubDate:
          description: video publication date
          format: date-time
          type: string
        description:
          description: video description
          type: string
        content:encoded:
          description: video description
          type: string
        dc:creator:
          description: publisher user name
          type: string
        media:category:
          description: video category (MRSS)
          type: integer
        media:community:
          $ref: '#/components/schemas/VideosForXML_inner_media_community'
        media:embed:
          $ref: '#/components/schemas/VideosForXML_inner_media_embed'
        media:player:
          $ref: '#/components/schemas/VideosForXML_inner_media_player'
        media:thumbnail:
          $ref: '#/components/schemas/VideosForXML_inner_media_thumbnail'
        media:title:
          description: "see [media:title](https://www.rssboard.org/media-rss#media-title)\
            \ (MRSS). We only use `plain` titles."
          type: string
        media:description:
          type: string
        media:rating:
          description: "see [media:rating](https://www.rssboard.org/media-rss#media-rating)\
            \ (MRSS)"
          enum:
          - nonadult
          - adult
          type: string
        enclosure:
          $ref: '#/components/schemas/VideosForXML_inner_enclosure'
        media:group:
          description: "list of streamable files for the video. see [media:peerLink](https://www.rssboard.org/media-rss#media-peerlink)\
            \ and [media:content](https://www.rssboard.org/media-rss#media-content)\
            \ or  (MRSS)"
          items:
            $ref: '#/components/schemas/VideosForXML_inner_media_group_inner'
          type: array
      type: object
      xml:
        name: item
    Notification_video:
      allOf:
      - $ref: '#/components/schemas/VideoInfo'
      - properties:
          channel:
            $ref: '#/components/schemas/ActorInfo'
        type: object
      example:
        name: "{}"
        channel:
          displayName: displayName
          name: name
          host: host
          id: 42
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
        id: 42
        uuid: "{}"
      nullable: true
    Notification_videoImport:
      example:
        torrentName: torrentName
        magnetUri: "{}"
        targetUri: https://openapi-generator.tech
        id: 42
        video:
          name: "{}"
          id: 42
          uuid: "{}"
      nullable: true
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        video:
          $ref: '#/components/schemas/VideoInfo'
        torrentName:
          nullable: true
          type: string
        magnetUri:
          $ref: '#/components/schemas/VideoImport/properties/magnetUri'
        targetUri:
          format: uri
          nullable: true
          type: string
      type: object
    Notification_comment:
      example:
        threadId: 6
        heldForReview: true
        id: 42
        video:
          name: "{}"
          id: 42
          uuid: "{}"
        account:
          displayName: displayName
          name: name
          host: host
          id: 42
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
      nullable: true
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        threadId:
          type: integer
        video:
          $ref: '#/components/schemas/VideoInfo'
        account:
          $ref: '#/components/schemas/ActorInfo'
        heldForReview:
          type: boolean
      type: object
    Notification_videoAbuse:
      example:
        id: 42
        video: ""
      nullable: true
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        video:
          allOf:
          - $ref: '#/components/schemas/VideoInfo'
      type: object
    Notification_actorFollow_following:
      example:
        displayName: displayName
        name: name
        host: host
        type: account
      properties:
        type:
          enum:
          - account
          - channel
          - instance
          type: string
        name:
          type: string
        displayName:
          type: string
        host:
          format: hostname
          type: string
      type: object
    Notification_actorFollow:
      example:
        follower:
          displayName: displayName
          name: name
          host: host
          id: 42
          avatars:
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - path: path
            createdAt: 2000-01-23T04:56:07.000+00:00
            width: 0
            updatedAt: 2000-01-23T04:56:07.000+00:00
        following:
          displayName: displayName
          name: name
          host: host
          type: account
        id: 42
        state: pending
      nullable: true
      properties:
        id:
          example: 42
          minimum: 1
          type: integer
        follower:
          $ref: '#/components/schemas/ActorInfo'
        state:
          enum:
          - pending
          - accepted
          type: string
        following:
          $ref: '#/components/schemas/Notification_actorFollow_following'
      type: object
    RequestTwoFactorResponse_otpRequest:
      example:
        requestToken: requestToken
        secret: secret
        uri: uri
      properties:
        requestToken:
          description: The token to send to confirm this request
          type: string
        secret:
          description: The OTP secret
          type: string
        uri:
          description: The OTP URI
          type: string
      type: object
    cut_options:
      properties:
        start:
          type: integer
        end:
          type: integer
      type: object
    cut:
      properties:
        name:
          enum:
          - cut
          type: string
        options:
          $ref: '#/components/schemas/cut_options'
      title: cut
      type: object
    add_intro_options:
      properties:
        file:
          format: binary
          type: string
      type: object
    add_intro:
      properties:
        name:
          enum:
          - add-intro
          type: string
        options:
          $ref: '#/components/schemas/add_intro_options'
      title: add-intro
      type: object
    add_outro:
      properties:
        name:
          enum:
          - add-outro
          type: string
        options:
          $ref: '#/components/schemas/add_intro_options'
      title: add-outro
      type: object
    add_watermark:
      properties:
        name:
          enum:
          - add-watermark
          type: string
        options:
          $ref: '#/components/schemas/add_intro_options'
      title: add-watermark
      type: object
    VideoStudioCreateTask_inner:
      anyOf:
      - $ref: '#/components/schemas/cut'
      - $ref: '#/components/schemas/add_intro'
      - $ref: '#/components/schemas/add_outro'
      - $ref: '#/components/schemas/add_watermark'
    LiveVideoSessionResponse_replayVideo:
      description: Video replay information
      example:
        shortUUID: 2y84q2MQUMWPbiEcxNXMgC
        id: 1.4658129805029452
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
      properties:
        id:
          type: number
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
        shortUUID:
          description: translation of a uuid v4 with a bigger alphabet to have a shorter
            uuid
          example: 2y84q2MQUMWPbiEcxNXMgC
          type: string
      type: object
    VOD_web_video_transcoding_1_input:
      example:
        videoFileUrl: videoFileUrl
      properties:
        videoFileUrl:
          type: string
      type: object
    VOD_web_video_transcoding_1_output:
      example:
        fps: 6.027456183070403
        resolution: 0.8008281904610115
      properties:
        resolution:
          type: number
        fps:
          type: number
      type: object
    VOD_web_video_transcoding_1:
      example:
        output:
          fps: 6.027456183070403
          resolution: 0.8008281904610115
        input:
          videoFileUrl: videoFileUrl
      properties:
        input:
          $ref: '#/components/schemas/VOD_web_video_transcoding_1_input'
        output:
          $ref: '#/components/schemas/VOD_web_video_transcoding_1_output'
      title: VOD web video transcoding
      type: object
    VOD_HLS_transcoding_1:
      properties:
        input:
          $ref: '#/components/schemas/VOD_web_video_transcoding_1_input'
        output:
          $ref: '#/components/schemas/VOD_web_video_transcoding_1_output'
      title: VOD HLS transcoding
      type: object
    VOD_audio_merge_transcoding_1_input:
      properties:
        audioFileUrl:
          type: string
        previewFileUrl:
          type: string
      type: object
    VOD_audio_merge_transcoding_1:
      properties:
        input:
          $ref: '#/components/schemas/VOD_audio_merge_transcoding_1_input'
        output:
          $ref: '#/components/schemas/VOD_web_video_transcoding_1_output'
      title: VOD audio merge transcoding
      type: object
    RunnerJob_parent:
      description: If job has a parent job
      example:
        state:
          id: 0
          label: Processing
        type: null
        uuid: 9c9de5e8-0a1e-484a-b099-e80766180a6d
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/RunnerJobType'
        state:
          $ref: '#/components/schemas/RunnerJobStateConstant'
        uuid:
          example: 9c9de5e8-0a1e-484a-b099-e80766180a6d
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          type: string
      type: object
    RunnerJob_runner:
      description: If job is associated to a runner
      example:
        name: name
        description: description
        id: 5.637376656633329
      nullable: true
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
    RunnerJobAdmin_allOf_privatePayload:
      type: object
  securitySchemes:
    OAuth2:
      description: |
        Authenticating via OAuth requires the following steps:
        - Have an activated account
        - [Generate] an access token for that account at `/api/v1/users/token`.
        - Make requests with the *Authorization: Bearer <token\>* header
        - Profit, depending on the role assigned to the account

        Note that the __access token is valid for 1 day__ and is given
        along with a __refresh token valid for 2 weeks__.

        [Generate]: https://docs.joinpeertube.org/api/rest-getting-started
      flows:
        password:
          scopes:
            admin: Admin scope
            moderator: Moderator scope
            user: User scope
          tokenUrl: /api/v1/users/token
      type: oauth2
x-tagGroups:
- name: Static endpoints
  tags:
  - Static Video Files
- name: Feeds
  tags:
  - Video Feeds
- name: Auth
  tags:
  - Register
  - Session
- name: Accounts
  tags:
  - Accounts
  - Users
  - User Exports
  - User Imports
  - My User
  - My Subscriptions
  - My Notifications
  - My History
- name: Videos
  tags:
  - Video
  - Video Upload
  - Video Imports
  - Video Captions
  - Video Chapters
  - Video Channels
  - Video Comments
  - Video Rates
  - Video Playlists
  - Video Stats
  - Video Ownership Change
  - Video Mirroring
  - Video Files
  - Video Transcoding
  - Live Videos
  - Channels Sync
  - Video Passwords
- name: Search
  tags:
  - Search
- name: Moderation
  tags:
  - Abuses
  - Video Blocks
  - Account Blocks
  - Server Blocks
  - Automatic Tags
  - Watched Words
- name: Instance
  tags:
  - Config
  - Homepage
  - Instance Follows
  - Instance Redundancy
  - Plugins
  - Stats
  - Logs
  - Job
- name: Remote Jobs
  tags:
  - Runner Registration Token
  - Runner Jobs
  - Runners

